<?xml version = '1.0' encoding = 'UTF-8' ?>
<XMI xmi.version = '1.2' xmlns:UML = 'org.omg.xmi.namespace.UML' timestamp = 'Thu Jun 02 09:53:02 CEST 2005'>
  <XMI.header>
    <XMI.documentation>
      <XMI.exporter>Netbeans XMI Writer</XMI.exporter>
      <XMI.exporterVersion>1.0</XMI.exporterVersion>
    </XMI.documentation>
  </XMI.header>
  <XMI.content>
    <UML:Model xmi.id = 'Im2d596f98m10363d93b95mm3656' name = 'InstantMessengerModel'
      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
      <UML:ModelElement.taggedValue>
        <UML:TaggedValue xmi.id = 'Im2cb8f81bm103a15f60fdmm6589' isSpecification = 'false'>
          <UML:TaggedValue.dataValue>&lt;p&gt;(C) 2005, Dennis Wagelaar, System and Software Engineering Lab, Vrije Universiteit Brussel&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;li&gt;Neither the name of JabberWookie nor the names of its contributors may be used
to endorse or promote products derived from this software without specific
prior written permission.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</UML:TaggedValue.dataValue>
          <UML:TaggedValue.type>
            <UML:TagDefinition xmi.idref = 'I47da90f2m1037dab50c8mm6c7d'/>
          </UML:TaggedValue.type>
        </UML:TaggedValue>
      </UML:ModelElement.taggedValue>
      <UML:Namespace.ownedElement>
        <UML:Package xmi.id = 'Im2d596f98m10363d93b95mm36d4' name = 'im' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'Im2d596f98m10363d93b95mm3762' name = 'networking'
              visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Package xmi.id = 'Im2d596f98m10363d93b95mm3770' name = 'jabber' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'Im2d596f98m10363d93b95mm378c' name = 'Jabber' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'true'
                      isActive = 'false'/>
                    <UML:Package xmi.id = 'I4cc96e20m104371c528dmm6696' name = 'defaultjabber'
                      visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
                      isAbstract = 'false'>
                      <UML:Namespace.ownedElement>
                        <UML:Class xmi.id = 'I4cc96e20m104371c528dmm6686' name = 'DefaultJabber'
                          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
                          isAbstract = 'false' isActive = 'false'>
                          <UML:ModelElement.clientDependency>
                            <UML:Dependency xmi.idref = 'I5e1f0371m103888fb12amm670b'/>
                          </UML:ModelElement.clientDependency>
                          <UML:GeneralizableElement.generalization>
                            <UML:Generalization xmi.idref = 'I4cc96e20m104371c528dmm6673'/>
                          </UML:GeneralizableElement.generalization>
                          <UML:Classifier.feature>
                            <UML:Attribute xmi.id = 'I4cc96e20m104371c528dmm6524' name = 'connectError'
                              visibility = 'private' isSpecification = 'false' ownerScope = 'instance'
                              changeability = 'changeable'>
                              <UML:Attribute.initialValue>
                                <UML:Expression xmi.id = 'I4cc96e20m104371c528dmm6513' language = 'java'
                                  body = '&quot;&quot;'/>
                              </UML:Attribute.initialValue>
                              <UML:StructuralFeature.type>
                                <UML:DataType xmi.idref = 'Im2d596f98m10363d93b95mm367c'/>
                              </UML:StructuralFeature.type>
                            </UML:Attribute>
                            <UML:Operation xmi.id = 'I4cc96e20m104371c528dmm650e' name = 'connect' visibility = 'protected'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'I4cc96e20m104371c528dmm64f6' name = 'host' isSpecification = 'false'
                                  kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'Im2d596f98m10363d93b95mm367c'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'I4cc96e20m104371c528dmm650c' isSpecification = 'false'
                              isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'I4cc96e20m104371c528dmm650d' language = 'java'
                                  body = '        setSocket(connect(host, 5222));&#10;        if (getSocket() == null) {&#10;            throw new java.io.IOException(connectError);&#10;        }&#10;        setConnection(new com.jabberwookie.Client2Server(&#10;            getSocket().getInputStream(), getSocket().getOutputStream()));&#10;        if (!getConnection().open(host, 60000)) {&#10;            throw new java.io.IOException(&quot;Could not establish stream to &quot; + host + &quot;:5222 after 60 seconds&quot;);&#10;        }&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'I4cc96e20m104371c528dmm650e'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'I4cc96e20m104371c528dmm64cc' name = 'connect' visibility = 'private'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'I4cc96e20m104371c528dmm64a7' name = 'host' isSpecification = 'false'
                                  kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'Im2d596f98m10363d93b95mm367c'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                                <UML:Parameter xmi.id = 'I4cc96e20m104371c528dmm6476' name = 'port' isSpecification = 'false'
                                  kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'Im2d596f98m10363d93b95mm3674'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                                <UML:Parameter xmi.id = 'I4cc96e20m104371c528dmm643d' name = 'return' isSpecification = 'false'
                                  kind = 'return'>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'I5e1f0371m103888fb12amm6763'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'I4cc96e20m104371c528dmm64ca' isSpecification = 'false'
                              isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'I4cc96e20m104371c528dmm64cb' language = 'java'
                                  body = '        Socket s = null;&#10;        try {&#10;            InetAddress[] hosts = InetAddress.getAllByName(host);&#10;            java.util.Stack exceptions = new java.util.Stack();&#10;            for (int i = 0; i &lt; hosts.length; i++) {&#10;                try {&#10;                    s = new Socket(hosts[i], port);&#10;                    break;&#10;                } catch (Exception e) {&#10;                    exceptions.push(e);&#10;                }&#10;            }&#10;            StringBuffer sb = new StringBuffer();&#10;            while (!exceptions.empty()) {&#10;                sb.append(((Exception) exceptions.pop()).getMessage());&#10;            }&#10;            connectError = sb.toString();&#10;        } catch (Exception e) {&#10;            connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host + &quot;, &quot; + port + &quot;)&quot;;&#10;        }&#10;        return s;&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'I4cc96e20m104371c528dmm64cc'/>
                              </UML:Method.specification>
                            </UML:Method>
                          </UML:Classifier.feature>
                        </UML:Class>
                      </UML:Namespace.ownedElement>
                    </UML:Package>
                    <UML:Generalization xmi.id = 'I4cc96e20m104371c528dmm6673' isSpecification = 'false'>
                      <UML:Generalization.child>
                        <UML:Class xmi.idref = 'I4cc96e20m104371c528dmm6686'/>
                      </UML:Generalization.child>
                      <UML:Generalization.parent>
                        <UML:Class xmi.idref = 'Im2d596f98m10363d93b95mm378c'/>
                      </UML:Generalization.parent>
                    </UML:Generalization>
                  </UML:Namespace.ownedElement>
                </UML:Package>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Package xmi.id = 'Im2d596f98m10363d93b95mm369c' name = 'java' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'I5e1f0371m103888fb12amm6764' name = 'net' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'I5e1f0371m103888fb12amm6763' name = 'Socket' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'/>
                <UML:Association xmi.id = 'I4cc96e20m104371c528dmm6543' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'I4cc96e20m104371c528dmm6549' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'false' ordering = 'unordered' aggregation = 'composite'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'I4cc96e20m104371c528dmm6547'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'I4cc96e20m104371c528dmm6548' lower = '1'
                              upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'I4cc96e20m104371c528dmm6686'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'I4cc96e20m104371c528dmm6546' name = 'socket'
                      visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
                      aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'I4cc96e20m104371c528dmm6544'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'I4cc96e20m104371c528dmm6545' lower = '1'
                              upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'I5e1f0371m103888fb12amm6763'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'I5e1f0371m103888fb12amm670b' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'I4cc96e20m104371c528dmm6686'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'I5e1f0371m103888fb12amm6764'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'I4cc96e20m104371c528dmm7b9f' name = 'io' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'I4cc96e20m104371c528dmm64ce' name = 'IOException' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Exception xmi.id = 'I4cc96e20m104371c528dmm64cd' name = 'DefaultJabberConnectException'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                  </UML:Namespace.ownedElement>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'Im2d596f98m10363d93b95mm369a' name = 'process'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'Im2d596f98m10363d93b95mm3694' name = 'gentleware-initialValue'
          isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'Im2d596f98m10363d93b95mm3696'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'Im2d596f98m10363d93b95mm3698' lower = '1'
                  upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'Im2d596f98m10363d93b95mm3692' name = 'Observable'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'Im2d596f98m10363d93b95mm3690' name = 'postcondition'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'Im2d596f98m10363d93b95mm368e' name = 'invariant'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'Im2d596f98m10363d93b95mm368c' name = 'realize'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Abstraction</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'Im2d596f98m10363d93b95mm368a' name = 'ValueObject'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'Im2d596f98m10363d93b95mm3688' name = 'Observer'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'Im2d596f98m10363d93b95mm3686' name = 'subscribe'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Association</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'Im2d596f98m10363d93b95mm3680' name = 'transient'
          isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'Im2d596f98m10363d93b95mm3682'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'Im2d596f98m10363d93b95mm3684' lower = '1'
                  upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'Im2d596f98m10363d93b95mm367e' name = 'Socket'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Package xmi.id = 'Im2d596f98m10363d93b95mm3668' name = 'ocl' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:DataType xmi.id = 'Im2d596f98m10363d93b95mm367c' name = 'String' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'Im2d596f98m10363d93b95mm367a' name = 'OclAny' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'Im2d596f98m10363d93b95mm3678' name = 'Bag' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'Im2d596f98m10363d93b95mm3676' name = 'Collection'
              visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'/>
            <UML:DataType xmi.id = 'Im2d596f98m10363d93b95mm3674' name = 'Integer' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'Im2d596f98m10363d93b95mm3672' name = 'Real' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'Im2d596f98m10363d93b95mm3670' name = 'Sequence'
              visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
              isAbstract = 'false'/>
            <UML:DataType xmi.id = 'Im2d596f98m10363d93b95mm366e' name = 'Set' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'Im2d596f98m10363d93b95mm366c' name = 'Boolean' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'Im2d596f98m10363d93b95mm366a' name = 'OclType' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'Im2d596f98m10363d93b95mm3666' name = 'create'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Stereotype xmi.id = 'Im160e6027m10364dd6223mm69ae' name = 'Singleton'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'I47da90f2m1037dab50c8mm6caa' name = 'accessor'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'I47da90f2m1037dab50c8mm6c7d' name = 'documentation'
          isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'I47da90f2m1037dab50c8mm6c7c'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'I47da90f2m1037dab50c8mm6c7b' lower = '1'
                  upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'Im1bbfb4f3m10392da3951mm68aa' name = 'exception'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'I694706b7m1039ca3fd82mm6754' name = 'initializer'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Operation</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'I6e742d0m1039cde3951mm661e' name = 'use' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'Im2cb8f81bm103a15f60fdmm66e7' name = 'Applet'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'Im2cb8f81bm103a15f60fdmm6587' name = 'AppletInfo'
          isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'Im2cb8f81bm103a15f60fdmm6586'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'Im2cb8f81bm103a15f60fdmm6585' lower = '1'
                  upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:TagDefinition xmi.id = 'Im2cb8f81bm103a15f60fdmm6583' name = 'ParameterInfo'
          isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'Im2cb8f81bm103a15f60fdmm6582'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'Im2cb8f81bm103a15f60fdmm6581' lower = '1'
                  upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'Im2040183cm103a707e832mm4551' name = 'instantiates'
          visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
          isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'I3e6530b3m103c0640dacmm543e' name = 'final'
          isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'I3e6530b3m103c0640dacmm543d'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'I3e6530b3m103c0640dacmm543c' lower = '1'
                  upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
      </UML:Namespace.ownedElement>
    </UML:Model>
    <UML:A_context_raisedSignal>
      <UML:Operation xmi.idref = 'I4cc96e20m104371c528dmm650e'/>
      <UML:Exception xmi.idref = 'I4cc96e20m104371c528dmm64cd'/>
    </UML:A_context_raisedSignal>
  </XMI.content>
</XMI>
