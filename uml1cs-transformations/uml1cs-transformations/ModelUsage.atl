-- Generated by: $Id: ModelUsageGenerator.atl 1511 2005-06-15 13:52:00Z dwagelaa $
query ModelUsage = (
	'helper context INMODEL!Class def : inclusionCondition() : Boolean =\n' +
	INMODEL!TemplateParameter.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!ElementImport.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!DiagramElement.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!Property.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!TemplateArgument.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!Multiplicity.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!Expression.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!GraphConnector.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!ElementResidence.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!SemanticModelBridge.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!DiagramLink.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!Element.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	INMODEL!MultiplicityRange.allInstances()->iterate(e; acc : String =''
		|acc + e.toString()) +
	''
	).writeTo('/home/dennis/my_documents/PhD/Brainstorm/UML1CaseStudies/transformations/ModelUsage.txt');

helper context INMODEL!TemplateParameter def : toString() : String =
    '    self.name = \'TemplateParameter\' or\n';

helper context INMODEL!Signal def : toString() : String =
    '    self.name = \'Signal\' or\n';

helper context INMODEL!ElementImport def : toString() : String =
    '    self.name = \'ElementImport\' or\n';

helper context INMODEL!Constraint def : toString() : String =
    '    self.name = \'Constraint\' or\n';

helper context INMODEL!MappingExpression def : toString() : String =
    '    self.name = \'MappingExpression\' or\n';

helper context INMODEL!Include def : toString() : String =
    '    self.name = \'Include\' or\n';

helper context INMODEL!Pseudostate def : toString() : String =
    '    self.name = \'Pseudostate\' or\n';

helper context INMODEL!Interface def : toString() : String =
    '    self.name = \'Interface\' or\n';

helper context INMODEL!ClassifierInState def : toString() : String =
    '    self.name = \'ClassifierInState\' or\n';

helper context INMODEL!Method def : toString() : String =
    '    self.name = \'Method\' or\n';

helper context INMODEL!CompositeState def : toString() : String =
    '    self.name = \'CompositeState\' or\n';

helper context INMODEL!CallState def : toString() : String =
    '    self.name = \'CallState\' or\n';

helper context INMODEL!CallAction def : toString() : String =
    '    self.name = \'CallAction\' or\n';

helper context INMODEL!TaggedValue def : toString() : String =
    '    self.name = \'TaggedValue\' or\n';

helper context INMODEL!DataType def : toString() : String =
    '    self.name = \'DataType\' or\n';

helper context INMODEL!StubState def : toString() : String =
    '    self.name = \'StubState\' or\n';

helper context INMODEL!TemplateArgument def : toString() : String =
    '    self.name = \'TemplateArgument\' or\n';

helper context INMODEL!InteractionInstanceSet def : toString() : String =
    '    self.name = \'InteractionInstanceSet\' or\n';

helper context INMODEL!ActivityGraph def : toString() : String =
    '    self.name = \'ActivityGraph\' or\n';

helper context INMODEL!SubactivityState def : toString() : String =
    '    self.name = \'SubactivityState\' or\n';

helper context INMODEL!BooleanExpression def : toString() : String =
    '    self.name = \'BooleanExpression\' or\n';

helper context INMODEL!Operation def : toString() : String =
    '    self.name = \'Operation\' or\n';

helper context INMODEL!Link def : toString() : String =
    '    self.name = \'Link\' or\n';

helper context INMODEL!Enumeration def : toString() : String =
    '    self.name = \'Enumeration\' or\n';

helper context INMODEL!AttributeLink def : toString() : String =
    '    self.name = \'AttributeLink\' or\n';

helper context INMODEL!ReturnAction def : toString() : String =
    '    self.name = \'ReturnAction\' or\n';

helper context INMODEL!SubsystemInstance def : toString() : String =
    '    self.name = \'SubsystemInstance\' or\n';

helper context INMODEL!Flow def : toString() : String =
    '    self.name = \'Flow\' or\n';

helper context INMODEL!Multiplicity def : toString() : String =
    '    self.name = \'Multiplicity\' or\n';

helper context INMODEL!Extend def : toString() : String =
    '    self.name = \'Extend\' or\n';

helper context INMODEL!ArgListsExpression def : toString() : String =
    '    self.name = \'ArgListsExpression\' or\n';

helper context INMODEL!Expression def : toString() : String =
    '    self.name = \'Expression\' or\n';

helper context INMODEL!SynchState def : toString() : String =
    '    self.name = \'SynchState\' or\n';

helper context INMODEL!UninterpretedAction def : toString() : String =
    '    self.name = \'UninterpretedAction\' or\n';

helper context INMODEL!EnumerationLiteral def : toString() : String =
    '    self.name = \'EnumerationLiteral\' or\n';

helper context INMODEL!FinalState def : toString() : String =
    '    self.name = \'FinalState\' or\n';

helper context INMODEL!Artifact def : toString() : String =
    '    self.name = \'Artifact\' or\n';

helper context INMODEL!Collaboration def : toString() : String =
    '    self.name = \'Collaboration\' or\n';

helper context INMODEL!AssociationClass def : toString() : String =
    '    self.name = \'AssociationClass\' or\n';

helper context INMODEL!TagDefinition def : toString() : String =
    '    self.name = \'TagDefinition\' or\n';

helper context INMODEL!Message def : toString() : String =
    '    self.name = \'Message\' or\n';

helper context INMODEL!Stimulus def : toString() : String =
    '    self.name = \'Stimulus\' or\n';

helper context INMODEL!Reception def : toString() : String =
    '    self.name = \'Reception\' or\n';

helper context INMODEL!ExtensionPoint def : toString() : String =
    '    self.name = \'ExtensionPoint\' or\n';

helper context INMODEL!UseCase def : toString() : String =
    '    self.name = \'UseCase\' or\n';

helper context INMODEL!ProgrammingLanguageDataType def : toString() : String =
    '    self.name = \'ProgrammingLanguageDataType\' or\n';

helper context INMODEL!ActionState def : toString() : String =
    '    self.name = \'ActionState\' or\n';

helper context INMODEL!CreateAction def : toString() : String =
    '    self.name = \'CreateAction\' or\n';

helper context INMODEL!SubmachineState def : toString() : String =
    '    self.name = \'SubmachineState\' or\n';

helper context INMODEL!Binding def : toString() : String =
    '    self.name = \'Binding\' or\n';

helper context INMODEL!Exception def : toString() : String =
    '    self.name = \'Exception\' or\n';

helper context INMODEL!DataValue def : toString() : String =
    '    self.name = \'DataValue\' or\n';

helper context INMODEL!IterationExpression def : toString() : String =
    '    self.name = \'IterationExpression\' or\n';

helper context INMODEL!ClassifierRole def : toString() : String =
    '    self.name = \'ClassifierRole\' or\n';

helper context INMODEL!Parameter def : toString() : String =
    '    self.name = \'Parameter\' or\n';

helper context INMODEL!Transition def : toString() : String =
    '    self.name = \'Transition\' or\n';

helper context INMODEL!TimeExpression def : toString() : String =
    '    self.name = \'TimeExpression\' or\n';

helper context INMODEL!Permission def : toString() : String =
    '    self.name = \'Permission\' or\n';

helper context INMODEL!ActionSequence def : toString() : String =
    '    self.name = \'ActionSequence\' or\n';

helper context INMODEL!ObjectFlowState def : toString() : String =
    '    self.name = \'ObjectFlowState\' or\n';

helper context INMODEL!Usage def : toString() : String =
    '    self.name = \'Usage\' or\n';

helper context INMODEL!StateMachine def : toString() : String =
    '    self.name = \'StateMachine\' or\n';

helper context INMODEL!LinkObject def : toString() : String =
    '    self.name = \'LinkObject\' or\n';

helper context INMODEL!SendAction def : toString() : String =
    '    self.name = \'SendAction\' or\n';

helper context INMODEL!AssociationEndRole def : toString() : String =
    '    self.name = \'AssociationEndRole\' or\n';

helper context INMODEL!NodeInstance def : toString() : String =
    '    self.name = \'NodeInstance\' or\n';

helper context INMODEL!Partition def : toString() : String =
    '    self.name = \'Partition\' or\n';

helper context INMODEL!SimpleState def : toString() : String =
    '    self.name = \'SimpleState\' or\n';

helper context INMODEL!Component def : toString() : String =
    '    self.name = \'Component\' or\n';

helper context INMODEL!ElementResidence def : toString() : String =
    '    self.name = \'ElementResidence\' or\n';

helper context INMODEL!TerminateAction def : toString() : String =
    '    self.name = \'TerminateAction\' or\n';

helper context INMODEL!Subsystem def : toString() : String =
    '    self.name = \'Subsystem\' or\n';

helper context INMODEL!CollaborationInstanceSet def : toString() : String =
    '    self.name = \'CollaborationInstanceSet\' or\n';

helper context INMODEL!Association def : toString() : String =
    '    self.name = \'Association\' or\n';

helper context INMODEL!Attribute def : toString() : String =
    '    self.name = \'Attribute\' or\n';

helper context INMODEL!Interaction def : toString() : String =
    '    self.name = \'Interaction\' or\n';

helper context INMODEL!Class def : toString() : String =
    '    self.name = \'Class\' or\n';

helper context INMODEL!Node def : toString() : String =
    '    self.name = \'Node\' or\n';

helper context INMODEL!Object def : toString() : String =
    '    self.name = \'Object\' or\n';

helper context INMODEL!ComponentInstance def : toString() : String =
    '    self.name = \'ComponentInstance\' or\n';

helper context INMODEL!Generalization def : toString() : String =
    '    self.name = \'Generalization\' or\n';

helper context INMODEL!LinkEnd def : toString() : String =
    '    self.name = \'LinkEnd\' or\n';

helper context INMODEL!Dependency def : toString() : String =
    '    self.name = \'Dependency\' or\n';

helper context INMODEL!TimeEvent def : toString() : String =
    '    self.name = \'TimeEvent\' or\n';

helper context INMODEL!ChangeEvent def : toString() : String =
    '    self.name = \'ChangeEvent\' or\n';

helper context INMODEL!Package def : toString() : String =
    '    self.name = \'Package\' or\n';

helper context INMODEL!AssociationEnd def : toString() : String =
    '    self.name = \'AssociationEnd\' or\n';

helper context INMODEL!ProcedureExpression def : toString() : String =
    '    self.name = \'ProcedureExpression\' or\n';

helper context INMODEL!Model def : toString() : String =
    '    self.name = \'Model\' or\n';

helper context INMODEL!Actor def : toString() : String =
    '    self.name = \'Actor\' or\n';

helper context INMODEL!DestroyAction def : toString() : String =
    '    self.name = \'DestroyAction\' or\n';

helper context INMODEL!ObjectSetExpression def : toString() : String =
    '    self.name = \'ObjectSetExpression\' or\n';

helper context INMODEL!CallEvent def : toString() : String =
    '    self.name = \'CallEvent\' or\n';

helper context INMODEL!Comment def : toString() : String =
    '    self.name = \'Comment\' or\n';

helper context INMODEL!Stereotype def : toString() : String =
    '    self.name = \'Stereotype\' or\n';

helper context INMODEL!AssociationRole def : toString() : String =
    '    self.name = \'AssociationRole\' or\n';

helper context INMODEL!Abstraction def : toString() : String =
    '    self.name = \'Abstraction\' or\n';

helper context INMODEL!Primitive def : toString() : String =
    '    self.name = \'Primitive\' or\n';

helper context INMODEL!UseCaseInstance def : toString() : String =
    '    self.name = \'UseCaseInstance\' or\n';

helper context INMODEL!SignalEvent def : toString() : String =
    '    self.name = \'SignalEvent\' or\n';

helper context INMODEL!Argument def : toString() : String =
    '    self.name = \'Argument\' or\n';

helper context INMODEL!MultiplicityRange def : toString() : String =
    '    self.name = \'MultiplicityRange\' or\n';

helper context INMODEL!Guard def : toString() : String =
    '    self.name = \'Guard\' or\n';

helper context INMODEL!ActionExpression def : toString() : String =
    '    self.name = \'ActionExpression\' or\n';

helper context INMODEL!TypeExpression def : toString() : String =
    '    self.name = \'TypeExpression\' or\n';

