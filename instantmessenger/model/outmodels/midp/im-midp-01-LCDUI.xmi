<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<XMI xmi.version = '1.2' xmlns:UML = 'org.omg.xmi.namespace.UML' timestamp = 'Fri Jun 10 15:41:56 CEST 2005'>
  <XMI.header>
    <XMI.documentation>
      <XMI.exporter>Netbeans XMI Writer</XMI.exporter>
      <XMI.exporterVersion>1.0</XMI.exporterVersion>
    </XMI.documentation>
  </XMI.header>
  <XMI.content>
    <UML:Model xmi.id = 'a1' name = 'InstantMessengerModel' isSpecification = 'false'
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
      <UML:ModelElement.taggedValue>
        <UML:TaggedValue xmi.id = 'a2' isSpecification = 'false'>
          <UML:TaggedValue.dataValue>&lt;p&gt;(C) 2005, Dennis Wagelaar, System and Software Engineering Lab, Vrije Universiteit Brussel&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;li&gt;Neither the name of JabberWookie nor the names of its contributors may be used
to endorse or promote products derived from this software without specific
prior written permission.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</UML:TaggedValue.dataValue>
          <UML:TaggedValue.type>
            <UML:TagDefinition xmi.idref = 'a3'/>
          </UML:TaggedValue.type>
        </UML:TaggedValue>
      </UML:ModelElement.taggedValue>
      <UML:Namespace.ownedElement>
        <UML:Package xmi.id = 'a4' name = 'javax' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a5' name = 'microedition' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Package xmi.id = 'a6' name = 'lcdui' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a7' name = 'ChoiceGroup' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a8' name = 'List' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a9' name = 'Command' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a10' name = 'StringItem' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a11' name = 'TextBox' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a12' name = 'Displayable' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a13' name = 'TextField' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a14' name = 'Form' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Generalization xmi.id = 'a15' isSpecification = 'false'>
                      <UML:Generalization.child>
                        <UML:Class xmi.idref = 'a16'/>
                      </UML:Generalization.child>
                      <UML:Generalization.parent>
                        <UML:Class xmi.idref = 'a14'/>
                      </UML:Generalization.parent>
                    </UML:Generalization>
                    <UML:Generalization xmi.id = 'a17' isSpecification = 'false'>
                      <UML:Generalization.child>
                        <UML:Class xmi.idref = 'a18'/>
                      </UML:Generalization.child>
                      <UML:Generalization.parent>
                        <UML:Class xmi.idref = 'a14'/>
                      </UML:Generalization.parent>
                    </UML:Generalization>
                    <UML:Generalization xmi.id = 'a19' isSpecification = 'false'>
                      <UML:Generalization.child>
                        <UML:Class xmi.idref = 'a20'/>
                      </UML:Generalization.child>
                      <UML:Generalization.parent>
                        <UML:Class xmi.idref = 'a8'/>
                      </UML:Generalization.parent>
                    </UML:Generalization>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Dependency xmi.id = 'a21' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a16'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a6'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a22' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a20'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a6'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a23' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a18'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a6'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Package xmi.id = 'a24' name = 'java' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a25' name = 'lang' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a26' name = 'ClassNotFoundException' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a27'/>
                  </UML:ModelElement.stereotype>
                  <UML:Namespace.ownedElement>
                    <UML:Exception xmi.id = 'a28' name = 'lcduiViewFactoryException' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Signal.context>
                        <UML:Operation xmi.idref = 'a29'/>
                      </UML:Signal.context>
                    </UML:Exception>
                  </UML:Namespace.ownedElement>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Package xmi.id = 'a30' name = 'util' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a31' name = 'Vector' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Dependency xmi.id = 'a32' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a18'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a31'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a33' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a20'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a31'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a34' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a16'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a31'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:TagDefinition xmi.id = 'a35' name = 'transient' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a36'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a37' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Association xmi.id = 'a38' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a39' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a40'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a41' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a42'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a43' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a44'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a45' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a46'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Include xmi.id = 'a47' isSpecification = 'false'>
          <UML:Include.addition>
            <UML:UseCase xmi.idref = 'a48'/>
          </UML:Include.addition>
          <UML:Include.base>
            <UML:UseCase xmi.idref = 'a49'/>
          </UML:Include.base>
        </UML:Include>
        <UML:Association xmi.id = 'a50' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a51' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a52'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a53' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a54'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a55' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a56'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a57' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a58'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:DataType xmi.id = 'a59' name = 'Exception' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Association xmi.id = 'a60' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a61' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a62'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a63' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a48'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a64' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a65'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a66' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a42'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = 'a67' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a68' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a69'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a70' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a54'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a71' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a72'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a73' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a74'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a75' name = 'Observer' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a76' name = 'Applet' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a77' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a78' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a79'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a80' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a54'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a81' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a82'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a83' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a48'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Actor xmi.id = 'a54' name = 'User' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Stereotype xmi.id = 'a84' name = 'postcondition' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a85' name = 'use' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a86' name = 'process' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a87' name = 'Observable' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a88' name = 'invariant' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a89' name = 'initializer' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Operation</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a90' name = 'create' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Include xmi.id = 'a91' isSpecification = 'false'>
          <UML:Include.addition>
            <UML:UseCase xmi.idref = 'a48'/>
          </UML:Include.addition>
          <UML:Include.base>
            <UML:UseCase xmi.idref = 'a74'/>
          </UML:Include.base>
        </UML:Include>
        <UML:Stereotype xmi.id = 'a92' name = 'Socket' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a93' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a94' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a95'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a96' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a54'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a97' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a98'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a99' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a46'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a100' name = 'instantiates' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:UseCase xmi.id = 'a74' name = 'Add contact' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:UseCase.include>
            <UML:Include xmi.idref = 'a91'/>
          </UML:UseCase.include>
        </UML:UseCase>
        <UML:Stereotype xmi.id = 'a101' name = 'realize' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Abstraction</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Actor xmi.id = 'a42' name = 'Network' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Package xmi.id = 'a102' name = 'ocl' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:DataType xmi.id = 'a103' name = 'Boolean' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a104' name = 'Set' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a105' name = 'OclType' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a106' name = 'Bag' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a107' name = 'String' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a108' name = 'Real' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a109' name = 'Collection' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a110' name = 'Integer' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a111' name = 'Sequence' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a112' name = 'OclAny' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:UseCase xmi.id = 'a58' name = 'Receive message' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:UseCase xmi.id = 'a46' name = 'Send message' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Association xmi.id = 'a113' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a114' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a115'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a116' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a74'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a117' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a118'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a119' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a42'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:TagDefinition xmi.id = 'a120' name = 'AppletInfo' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a121'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a122' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Association xmi.id = 'a123' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a124' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a125'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a126' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a58'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a127' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a128'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a129' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a42'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = 'a130' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a131' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a132'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a133' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a54'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a134' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a135'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a136' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a49'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:TagDefinition xmi.id = 'a137' name = 'gentleware-initialValue' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a138'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a139' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'a140' name = 'ValueObject' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a141' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a142' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a143'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a144' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a49'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a145' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a146'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a147' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a42'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a148' name = 'Singleton' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a149' name = 'accessor' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'a3' name = 'documentation' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a150'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a151' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:TagDefinition xmi.id = 'a152' name = 'ParameterInfo' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a153'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a154' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:UseCase xmi.id = 'a49' name = 'Remove contact' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:UseCase.include>
            <UML:Include xmi.idref = 'a47'/>
          </UML:UseCase.include>
        </UML:UseCase>
        <UML:Stereotype xmi.id = 'a155' name = 'subscribe' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Association</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'a156' name = 'final' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a157'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a158' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'a27' name = 'exception' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Package xmi.id = 'a159' name = 'im' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Dependency xmi.id = 'a160' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a16'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a161'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a162' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a18'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a161'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a163' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a20'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a161'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Association xmi.id = 'a164' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a165' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a166'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a167' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a168'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a169' name = 'conversation' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a170'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a171' lower = '0' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a172'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Package xmi.id = 'a173' name = 'edit' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Association xmi.id = 'a174' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a175' name = 'listEdit' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'aggregate'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a176'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a177' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a178'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a179' name = 'contactEdit' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a180'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a181' lower = '0' upper = '-1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a182'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Association xmi.id = 'a183' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a184' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a185'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a186' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a187'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a188' name = 'view' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a189'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a190' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a191'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a187' name = 'ConversationEdit' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Abstraction xmi.idref = 'a192'/>
                  </UML:ModelElement.clientDependency>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a75'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a193' name = 'ConversationEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a90'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a194' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a172'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a195' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a196' name = 'onMessageChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a197' name = 'm' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a198'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a199' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a200' language = 'java' body = '        if (m.getContent() instanceof String) {&#10;            im.model.ContactList list =&#10;                im.InstantMessagingClient.getInstance().getContactList();&#10;            getView().addContent(list.getUserName(m.getSender())&#10;                + &quot;: &quot; + m.getContent());&#10;        } else {&#10;            getView().addContent(m.getContent());&#10;        }&#10;        getView().toFront();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a196'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a201' name = 'onContactChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a202' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a203'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a204' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a205' language = 'java' body = '        if (c.getName() != null) {&#10;            getView().setTitle(c.getName());&#10;        } else if (c.getUserId() != null) {&#10;            getView().setTitle(c.getUserId());&#10;        }&#10;        getView().toFront();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a201'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a206' name = 'onConversationClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a207' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a208' language = 'java' body = '        im.InstantMessagingClient.getInstance().removeConversation(getModel());&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a206'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a209' name = 'onConversationSend' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Operation xmi.id = 'a210' name = 'getSender' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a211' name = 'recipient' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a203'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a212' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a203'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a213' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a214' language = 'java' body = '        try {&#10;            im.model.Contact recipient = getModel().getContact();&#10;            if (recipient == null) {&#10;                throw new NullPointerException(&#10;                &quot;No recipient available in ConversationEdit.onConversationSend()&quot;);&#10;            }&#10;            im.model.Contact sender = getSender(recipient);&#10;            if (sender == null) {&#10;                throw new NullPointerException(&#10;                &quot;No sender available in ConversationEdit.onConversationSend()&quot;);&#10;            }&#10;            im.model.Message msg = new im.model.Message();&#10;            msg.setNetwork(recipient.getNetwork());&#10;            msg.setSender(sender.getUserId());&#10;            msg.setRecipient(recipient.getUserId());&#10;            msg.setContent(getView().getContent());&#10;            msg.send();&#10;            getModel().setMessage(msg);&#10;        } catch (Exception e) {&#10;            im.InstantMessagingClient.getInstance().report(e);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a209'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a215' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a216' language = 'java' body = '        setModel(c);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        setView(client.getViewFactory().createConversationView());&#10;        getView().addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a193'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a217' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a218' language = 'java' body = '        im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();&#10;        return c.getContactList().getIdentity(recipient.getNetwork());&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a210'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Class xmi.id = 'a182' name = 'ContactEdit' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a75'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a219' name = 'ContactEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a90'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a220' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a203'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a221' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a182'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a222' name = 'onStatusChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a223' name = 's' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a224' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a225' language = 'java' body = '        onChange();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a222'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a226' name = 'onNameChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a227' name = 'n' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a228' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a229' language = 'java' body = '        onChange();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a226'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a230' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a231' language = 'java' body = '        setModel(c);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a219'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a232' name = 'onChange' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a233' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a234' language = 'java' body = '        &#9;int index = getListEdit().getContactEdits().indexOf(this);&#10;            if (index &gt; -1) {&#10;                getListEdit().getView().removeContact(index);&#10;                getListEdit().getView().addContact(formatContact(), index);&#10;            }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a232'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a235' name = 'formatContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a236' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a237' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a238' language = 'java' body = '        String name = getModel().getName();&#10;        String status = getModel().getStatus();&#10;        if (getModel() instanceof im.model.Identity) {&#10;            name = &quot;* &quot; + name;&#10;        } else {&#10;            name = &quot;  &quot; + name;&#10;        }&#10;        if (getModel().getNetwork() != null) {&#10;            name += &quot; - &quot; + getModel().getNetwork().getName();&#10;        }&#10;        if (status == null) {&#10;            status = &quot;offline&quot;;&#10;        }&#10;        name += &quot; (&quot; + status + &quot;)&quot;;&#10;        return name;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a235'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Class xmi.id = 'a178' name = 'ContactListEdit' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Abstraction xmi.idref = 'a239'/>
                    <UML:Abstraction xmi.idref = 'a240'/>
                  </UML:ModelElement.clientDependency>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a75'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a241' name = 'ContactListEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a90'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a242' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a178'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a243' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a244'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a245' name = 'onContactChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a246' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a203'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a247' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a248' language = 'java' body = '        int index = getModel().getContacts().indexOf(c);&#10;        if (index &gt; -1) {&#10;            ContactEdit edit = new ContactEdit(c);&#10;            insertContactEdit(edit, index);&#10;            getView().addContact(edit.formatContact(), index);&#10;        } else {&#10;            index = getContactEditIndex(c);&#10;            getView().removeContact(index);&#10;            removeContactEdit(getContactEditAt(index));&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a245'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a249' name = 'onContactListAdd' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a250' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a251' language = 'java' body = '        getView().setEnabled(false);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        im.view.NewContactDialog dlg =&#10;            client.getViewFactory().createNewContactDialog();&#10;        for (int i = 0; i &lt; client.getNetworks().size(); i++) {&#10;            dlg.addNetwork(client.getNetworkAt(i).getName());&#10;        }&#10;        dlg.addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a249'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a252' name = 'onContactListRemove' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a253' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a254' language = 'java' body = '        int index = getView().getSelectedContact();&#10;        if (index &gt; -1) {&#10;            im.model.Contact c = getModel().getContactAt(index);&#10;            if (c instanceof im.model.Identity) {&#10;                im.model.Identity id = (im.model.Identity) c;&#10;                id.getNetwork().logout();&#10;            } else {&#10;                c.getNetwork().removeContact(c);&#10;            }&#10;            getModel().removeContact(c);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a252'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a255' name = 'onContactListAction' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a256' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a257' language = 'java' body = '        int index = getView().getSelectedContact();&#10;        if (index &gt; -1) {&#10;            im.model.Contact c = getModel().getContactAt(index);&#10;            im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;            // reuse existing conversation, if any&#10;            for (int i = 0; i &lt; client.getConversations().size(); i++) {&#10;                im.model.Contact contact = client.getConversationAt(i).getContact();&#10;                if (contact.equals(c)) {&#10;                    client.getConversationAt(i).setContact(new im.model.Contact());&#10;                    client.getConversationAt(i).setContact(c);&#10;                    return;&#10;                }&#10;            }&#10;            // else new conversation&#10;            im.model.Conversation conv = new im.model.Conversation();&#10;            new ConversationEdit(conv);&#10;            client.addConversation(conv);&#10;            conv.setContact(c);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a255'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a258' name = 'onNewContactDialogClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a259' name = 'okClicked' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a103'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a260' name = 'dlg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a261'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a262' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a263' language = 'java' body = '        if (okClicked) {&#10;            im.model.Contact c;&#10;            im.networking.Network n =&#10;                im.InstantMessagingClient.getInstance().getNetworkAt(dlg.getNetwork());&#10;            if (getModel().getIdentity(n) == null) {&#10;                im.model.Identity id = new im.model.Identity();&#10;                id.setNetwork(n);&#10;                id.setUserId(dlg.getUid());&#10;                id.setName(dlg.getName());&#10;                id.setPassword(dlg.getPassword());&#10;                c = id;&#10;                getModel().addContact(c);&#10;                id.getNetwork().login(id.getUserId(), id.getPassword());&#10;            } else {&#10;                c = new im.model.Contact();&#10;                c.setNetwork(n);&#10;                c.setUserId(dlg.getUid());&#10;                c.setName(dlg.getName());&#10;                getModel().addContact(c);&#10;                c.getNetwork().addContact(c);&#10;            }&#10;        }&#10;        getView().setEnabled(true);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a258'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a264' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a265' language = 'java' body = '        setModel(c);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        setView(client.getViewFactory().createContactListView());&#10;        getView().addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a241'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a266' name = 'getContactEditIndex' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a267' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a203'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a268' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a110'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a269' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a270' language = 'java' body = '        for (int i = 0; i &lt; getContactEdits().size(); i++) {&#10;            if (getContactEditAt(i).getModel() == contact)&#10;                return i;&#10;        }&#10;        return -1;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a266'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a271' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a155'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a272' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a273'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a274' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a178'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a275' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a276'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a277' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a244'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Association xmi.id = 'a278' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a279' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a280'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a281' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a178'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a282' name = 'view' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a283'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a284' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a285'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Package xmi.id = 'a161' name = 'view' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Abstraction xmi.id = 'a286' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a101'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a20'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a285'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a287' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a101'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a16'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a191'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a288' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a101'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a18'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a261'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Package xmi.id = 'a289' name = 'lcdui' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a20' name = 'LCDUIContactListView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a286'/>
                        <UML:Dependency xmi.idref = 'a163'/>
                        <UML:Dependency xmi.idref = 'a33'/>
                        <UML:Dependency xmi.idref = 'a22'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a19'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a290' name = 'addContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a291' language = 'java' body = 'new Command(&quot;Add&quot;, Command.SCREEN, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a9'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a292' name = 'removeContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a293' language = 'java' body = 'new Command(&quot;Remove&quot;, Command.ITEM, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a9'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a294' name = 'contactActionBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a295' language = 'java' body = 'new Command(&quot;Message&quot;, Command.ITEM, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a9'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a296' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a297' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a31'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a298' name = 'LCDUIContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a90'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a299' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a20'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a300' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a301' language = 'java' body = '        super(&quot;Instant Messenger&quot;, Choice.IMPLICIT);&#10;        addCommand(addContactBtn);&#10;        addCommand(contactActionBtn);&#10;        addCommand(removeContactBtn);&#10;        addCommand(exitBtn);&#10;        setCommandListener(new CommandListener() {&#10;            public void commandAction(Command c, Displayable d) {&#10;                if (c.equals(addContactBtn)) {&#10;                    notifyAddClicked();&#10;                } else if (c.equals(removeContactBtn)) {&#10;                    notifyRemoveClicked();&#10;                } else if (c.equals(contactActionBtn)) {&#10;                    notifyContactAction();&#10;                } else {&#10;                    im.InstantMessagingClient.getInstance().notifyDestroyed();&#10;                }&#10;            }&#10;        });&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        Display.getDisplay(client).setCurrent(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a298'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a302' name = 'addContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a303' name = 'contact' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a107'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a304' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a110'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a305' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a306' language = 'java' body = '        insert(index, contact, null);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a302'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a307' name = 'removeContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a308' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a110'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a309' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a310' language = 'java' body = '        delete(index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a307'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a311' name = 'getSelectedContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a312' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a110'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a313' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a314' language = 'java' body = '        return getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a311'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a315' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a316' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a317'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a318' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a319' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a315'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a320' name = 'notifyAddClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a321' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a322' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAdd();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a320'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a323' name = 'notifyRemoveClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a324' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a325' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListRemove();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a323'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a326' name = 'notifyContactAction' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a327' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a328' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAction();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a326'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a329' name = 'setEnabled' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a330' name = 'enabled' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a103'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a331' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a332' language = 'java' body = '        if (enabled) {&#10;            im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;            Display.getDisplay(client).setCurrent(this);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a329'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a333' name = 'exitBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a334' language = 'java' body = 'new Command(&quot;Exit&quot;, Command.EXIT, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a9'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a335' name = 'LCDUIViewFactory' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a336'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a337' name = 'createContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a338' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a285'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a339' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a340' language = 'java' body = '        return new LCDUIContactListView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a337'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a341' name = 'createNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a342' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a261'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a343' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a344' language = 'java' body = '        return new LCDUINewContactDialog();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a341'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a345' name = 'createConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a346' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a191'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a347' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a348' language = 'java' body = '        return new LCDUIConversationView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a345'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a29' name = 'LCDUIViewFactory' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a90'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a349' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a335'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a350' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a351' language = 'java' body = '        // fail factory creation if LCDUI not available&#10;        Class.forName(&quot;javax.microedition.lcdui.Display&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a29'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a16' name = 'LCDUIConversationView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a287'/>
                        <UML:Dependency xmi.idref = 'a34'/>
                        <UML:Dependency xmi.idref = 'a160'/>
                        <UML:Dependency xmi.idref = 'a21'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a15'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a352' name = 'messageField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a353' language = 'java' body = 'new TextField(&quot;&quot;, &quot;&quot;, 256, TextField.ANY)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a13'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a354' name = 'sendBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a355' language = 'java' body = 'new Command(&quot;Send&quot;, Command.SCREEN, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a9'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a356' name = 'closeBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a357' language = 'java' body = 'new Command(&quot;Close&quot;, Command.BACK, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a9'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a358' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a359' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a31'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a360' name = 'LCDUIConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a90'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a361' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a16'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a362' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a363' language = 'java' body = '        super(&quot;Message&quot;);&#10;        append(messageField);&#10;        addCommand(sendBtn);&#10;        addCommand(closeBtn);&#10;        setCommandListener(new CommandListener() {&#10;            public void commandAction(Command c, Displayable d) {&#10;                if (c.equals(sendBtn)) {&#10;                    notifySendClicked();&#10;                } else {&#10;                    notifyClose();&#10;                }&#10;            }&#10;        });&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        previousScreen = Display.getDisplay(client).getCurrent();&#10;        Display.getDisplay(client).setCurrent(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a360'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a364' name = 'getContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a365' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a112'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a366' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a367' language = 'java' body = '        return messageField.getString();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a364'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a368' name = 'addContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a369' name = 'content' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a112'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a370' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a371' language = 'java' body = '        if (content instanceof String) {&#10;            append(content.toString() + &quot;\n&quot;);&#10;        } else if (content instanceof Image) {&#10;            Image im = (Image) content;&#10;            append(im);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a368'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a372' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a373' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a374'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a375' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a376' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a372'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a377' name = 'notifyClose' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a378' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a379' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationClose();&#10;        }&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        Display.getDisplay(client).setCurrent(previousScreen);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a377'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a380' name = 'previousScreen' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a12'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a381' name = 'notifySendClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a382' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a383' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationSend();&#10;        }&#10;        messageField.setString(&quot;&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a381'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a384' name = 'toFront' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a385' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a386' language = 'java' body = '        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        Display.getDisplay(client).setCurrent(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a384'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a18' name = 'LCDUINewContactDialog' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a288'/>
                        <UML:Dependency xmi.idref = 'a32'/>
                        <UML:Dependency xmi.idref = 'a23'/>
                        <UML:Dependency xmi.idref = 'a162'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a17'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a387' name = 'okBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a388' language = 'java' body = 'new Command(&quot;OK&quot;, Command.OK, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a9'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a389' name = 'cancelBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a390' language = 'java' body = 'new Command(&quot;Cancel&quot;, Command.CANCEL, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a9'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a391' name = 'uidField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a392' language = 'java' body = 'new TextField(&quot;User ID&quot;, &quot;&quot;, 64, TextField.ANY)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a13'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a393' name = 'nameField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a394' language = 'java' body = 'new TextField(&quot;Name&quot;, &quot;&quot;, 64, TextField.ANY)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a13'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a395' name = 'networkField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a396' language = 'java' body = 'new ChoiceGroup(&quot;Network&quot;, Choice.EXCLUSIVE)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a7'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a397' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a398' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a31'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a399' name = 'LCDUINewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a90'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a400' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a18'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a401' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a402' language = 'java' body = '        super(&quot;Add new contact&quot;);&#10;        append(networkField);&#10;        append(uidField);&#10;        append(nameField);&#10;        append(passwordField);&#10;        addCommand(okBtn);&#10;        addCommand(cancelBtn);&#10;        setCommandListener(new CommandListener() {&#10;            public void commandAction(Command c, Displayable d) {&#10;                if (c.equals(okBtn)) {&#10;                    onOk();&#10;                } else {&#10;                    onCancel();&#10;                }&#10;            }&#10;        });&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        Display.getDisplay(client).setCurrent(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a399'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a403' name = 'getUid' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a404' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a107'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a405' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a406' language = 'java' body = '        return uidField.getString();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a403'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a407' name = 'getName' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a408' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a107'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a409' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a410' language = 'java' body = '        return nameField.getString();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a407'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a411' name = 'getNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a412' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a110'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a413' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a414' language = 'java' body = '        return networkField.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a411'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a415' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a416' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a417'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a418' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a419' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a415'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a420' name = 'onOk' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a421' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a422' language = 'java' body = '        notifyListeners(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a420'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a423' name = 'onCancel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a424' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a425' language = 'java' body = '        notifyListeners(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a423'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a426' name = 'notifyListeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a427' name = 'okClicked' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a103'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a428' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a429' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((NewContactDialogListener) listeners.elementAt(i)).onNewContactDialogClose(okClicked, this);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a426'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a430' name = 'passwordField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a431' language = 'java' body = 'new TextField(&quot;Password&quot;, &quot;&quot;, 64, TextField.PASSWORD)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a13'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a432' name = 'getPassword' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a433' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a107'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a434' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a435' language = 'java' body = '        return passwordField.getString();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a432'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a436' name = 'addNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a437' name = 'n' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a107'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a438' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a439' language = 'java' body = '        networkField.append(n, null);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a436'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Generalization xmi.id = 'a336' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a335'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a440'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Abstraction xmi.id = 'a239' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a101'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a178'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a417'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a317' name = 'ContactListViewListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a441' name = 'onContactListAdd' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a442' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a443' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a441'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a444' name = 'onContactListRemove' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a445' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a446' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a444'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a447' name = 'onContactListAction' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a448' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a449' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a447'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Class xmi.id = 'a440' name = 'ViewFactory' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a450' name = 'createContactListView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a451' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a285'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a452' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a453' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a450'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a454' name = 'createNewContactDialog' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a455' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a261'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a456' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a457' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a454'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a458' name = 'createConversationView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a459' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a191'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a460' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a461' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a458'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a462' name = 'getDefault' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'classifier' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a463' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a440'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a464' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a465' language = 'java' body = '        String[] options = {&#10;            &quot;im.view.swing.SwingViewFactory&quot;,&#10;            &quot;im.view.awt.AWTViewFactory&quot;,&#10;            &quot;im.view.lcdui.LCDUIViewFactory&quot;&#10;        };&#10;        ViewFactory factory = null;&#10;        for (int i = 0; i &lt; options.length &amp;&amp; factory == null; i++) {&#10;            try {&#10;               factory = (ViewFactory) Class.forName(options[i]).newInstance();&#10;            } catch (Exception e) {&#10;            }&#10;        }&#10;        return factory;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a462'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Abstraction xmi.id = 'a240' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a101'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a178'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a317'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a261' name = 'NewContactDialog' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a466' name = 'getUid' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a467' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a468' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a469' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a466'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a470' name = 'getName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a471' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a472' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a473' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a470'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a474' name = 'getNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a475' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a110'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a476' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a477' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a474'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a478' name = 'getPassword' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a479' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a480' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a481' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a417'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a482' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a483' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a480'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a484' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a485' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a478'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a486' name = 'addNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a487' name = 'n' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a488' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a489' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a486'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Interface xmi.id = 'a417' name = 'NewContactDialogListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a490' name = 'onNewContactDialogClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a491' name = 'okClicked' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a103'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a492' name = 'dlg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a261'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a493' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a494' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a490'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Interface xmi.id = 'a285' name = 'ContactListView' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a495' name = 'addContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a496' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a497' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a110'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a498' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a499' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a495'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a500' name = 'removeContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a501' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a110'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a502' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a503' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a500'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a504' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a505' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a317'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a506' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a507' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a504'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a508' name = 'getSelectedContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a509' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a110'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a510' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a511' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a508'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a512' name = 'setEnabled' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a513' name = 'enabled' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a103'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a514' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a515' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a512'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a192' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a101'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a187'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a374'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a374' name = 'ConversationViewListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a516' name = 'onConversationSend' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a517' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a518' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a516'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a519' name = 'onConversationClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a520' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a521' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a519'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Interface xmi.id = 'a191' name = 'ConversationView' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a522' name = 'getContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a523' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a112'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a524' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a525' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a522'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a526' name = 'addContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a527' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a112'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a528' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a529' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a526'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a530' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a531' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a374'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a532' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a533' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a530'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a534' name = 'setTitle' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a535' name = 't' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a536' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a537' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a534'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a538' name = 'toFront' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a539' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a540' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a538'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Association xmi.id = 'a541' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a542' name = 'list' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'composite'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a543'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a544' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a244'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a545' name = 'contact' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a546'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a547' lower = '0' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a203'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Collaboration xmi.id = 'a548' name = 'SendMessage' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Message xmi.id = 'a549' name = 'Message_1' isSpecification = 'false'>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a550'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Stimulus xmi.id = 'a550' name = 'send' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a551'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a552'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a553'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a554'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Stimulus xmi.id = 'a555' name = 'stim_3' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a556'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a552'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:ReturnAction xmi.idref = 'a557'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Object xmi.id = 'a552' name = 'message' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a198'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a558'/>
                    <UML:LinkEnd xmi.idref = 'a559'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a560' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a559' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a552'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a561' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a556'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Object xmi.id = 'a551' name = 'view' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a562'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a553' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a558' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a552'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a562' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a551'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:ReturnAction xmi.id = 'a563' name = 'Action_4' isSpecification = 'false'
                  isAsynchronous = 'true'/>
                <UML:CallAction xmi.id = 'a564' name = 'SendAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a565' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a566' language = 'java' body = 'message'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a567'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:CollaborationInstanceSet xmi.id = 'a568' name = 'Collaboration_Instance_Set_1'
                  isSpecification = 'false'>
                  <UML:CollaborationInstanceSet.interactionInstanceSet>
                    <UML:InteractionInstanceSet xmi.id = 'a569' name = 'Collaboration_Instance_Set_2'
                      isSpecification = 'false'/>
                  </UML:CollaborationInstanceSet.interactionInstanceSet>
                  <UML:CollaborationInstanceSet.collaboration>
                    <UML:Collaboration xmi.idref = 'a548'/>
                  </UML:CollaborationInstanceSet.collaboration>
                  <UML:CollaborationInstanceSet.participatingInstance>
                    <UML:Object xmi.idref = 'a556'/>
                    <UML:Object xmi.idref = 'a551'/>
                    <UML:Object xmi.idref = 'a552'/>
                  </UML:CollaborationInstanceSet.participatingInstance>
                  <UML:CollaborationInstanceSet.participatingLink>
                    <UML:Link xmi.idref = 'a560'/>
                    <UML:Link xmi.idref = 'a553'/>
                  </UML:CollaborationInstanceSet.participatingLink>
                </UML:CollaborationInstanceSet>
                <UML:Object xmi.id = 'a556' name = 'network' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a570'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a561'/>
                  </UML:Instance.linkEnd>
                </UML:Object>
                <UML:Message xmi.id = 'a571' name = 'Message_2' isSpecification = 'false'>
                  <UML:Message.predecessor>
                    <UML:Message xmi.idref = 'a549'/>
                  </UML:Message.predecessor>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a572'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:CallAction xmi.id = 'a554' name = 'SendAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a573'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Stimulus xmi.id = 'a574' name = 'stim_4' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a552'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a551'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:ReturnAction xmi.idref = 'a563'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Stimulus xmi.id = 'a572' name = 'send' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a552'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a556'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a560'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a564'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:ReturnAction xmi.id = 'a557' name = 'Action_3' isSpecification = 'false'
                  isAsynchronous = 'true'/>
              </UML:Namespace.ownedElement>
            </UML:Collaboration>
            <UML:Abstraction xmi.id = 'a575' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a101'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a168'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Interface xmi.idref = 'a576'/>
              </UML:Dependency.supplier>
            </UML:Abstraction>
            <UML:Package xmi.id = 'a577' name = 'model' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Association xmi.id = 'a578' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a155'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a579' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a580'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a581' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a203'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a582' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a583'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a584' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a182'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a244' name = 'ContactList' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a87'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a585' name = 'getIdentity' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a586' name = 'forNw' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a570'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a587' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a588'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a589' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a590' language = 'java' body = '        for (int i = 0; i &lt; getContacts().size(); i ++) {&#10;            Contact contact = getContactAt(i);&#10;            if ((contact instanceof Identity) &amp;&amp; (contact.getNetwork() == forNw))&#10;                return (Identity) contact;&#10;        }&#10;        return null;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a585'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a591' name = 'getUserName' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a592' name = 'userId' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a593' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a594' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a595' language = 'java' body = '        for (int i = 0; i &lt; getContacts().size(); i ++) {&#10;            if (getContactAt(i).getUserId().equals(userId))&#10;                return getContactAt(i).getName();&#10;        }&#10;        return userId;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a591'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a596' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a597' name = 'conversation' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'composite'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a598'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a599' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a172'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a600' name = 'message' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a601'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a602' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a198'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a172' name = 'Conversation' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a87'/>
                  </UML:ModelElement.stereotype>
                </UML:Class>
                <UML:Generalization xmi.id = 'a603' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a198'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a604'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Association xmi.id = 'a605' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a155'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a606' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a607'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a608' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a172'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a609' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a610'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a611' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a187'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Generalization xmi.id = 'a612' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a588'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a203'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Association xmi.id = 'a613' name = 'BelongsToNetwork' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a614' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a615'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a616' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a604'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a617' name = 'network' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a618'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a619' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a570'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a588' name = 'Identity' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a612'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a620' name = 'password' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a107'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Generalization xmi.id = 'a621' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a203'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a604'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Association xmi.id = 'a622' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a623' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a624'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a625' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a172'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a626' name = 'contact' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a627'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a628' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a203'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a203' name = 'Contact' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a621'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a629' name = 'userId' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a107'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a630' name = 'name' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a107'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a631' name = 'status' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a107'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Class xmi.id = 'a604' name = 'NetworkSpecificData' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'true'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a87'/>
                  </UML:ModelElement.stereotype>
                </UML:Class>
                <UML:Class xmi.id = 'a198' name = 'Message' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a603'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a632' name = 'sender' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a107'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a633' name = 'recipient' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a107'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a573' name = 'send' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a634' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a635' language = 'java' body = '        if (getNetwork() != null) {&#10;            getNetwork().send(this);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a573'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a636' name = 'content' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a112'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Collaboration xmi.id = 'a637' name = 'ReceiveMessage' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Object xmi.id = 'a638' name = 'client' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a168'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a639'/>
                    <UML:LinkEnd xmi.idref = 'a640'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a641' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a642' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a643'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a640' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a638'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Object xmi.id = 'a643' name = 'viewFactory' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a642'/>
                  </UML:Instance.linkEnd>
                </UML:Object>
                <UML:CallAction xmi.id = 'a644' name = 'OnReceivedChangeAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a645' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a646' language = 'java' body = 'x'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a647'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:CallAction xmi.id = 'a648' name = 'Action_2' isSpecification = 'false'
                  isAsynchronous = 'false'/>
                <UML:Stimulus xmi.id = 'a649' name = 'onReceivedChange' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a650'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a638'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a651'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a644'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Message xmi.id = 'a652' name = 'Message_3' isSpecification = 'false'>
                  <UML:Message.predecessor>
                    <UML:Message xmi.idref = 'a653'/>
                  </UML:Message.predecessor>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a654'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Message xmi.id = 'a653' name = 'Message_1' isSpecification = 'false'>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a649'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:CollaborationInstanceSet xmi.id = 'a655' name = 'Collaboration_Instance_Set_1'
                  isSpecification = 'false'>
                  <UML:CollaborationInstanceSet.interactionInstanceSet>
                    <UML:InteractionInstanceSet xmi.id = 'a656' name = 'Collaboration_Instance_Set_2'
                      isSpecification = 'false'/>
                  </UML:CollaborationInstanceSet.interactionInstanceSet>
                  <UML:CollaborationInstanceSet.collaboration>
                    <UML:Collaboration xmi.idref = 'a637'/>
                  </UML:CollaborationInstanceSet.collaboration>
                  <UML:CollaborationInstanceSet.participatingInstance>
                    <UML:Object xmi.idref = 'a638'/>
                    <UML:Object xmi.idref = 'a643'/>
                    <UML:Object xmi.idref = 'a650'/>
                  </UML:CollaborationInstanceSet.participatingInstance>
                  <UML:CollaborationInstanceSet.participatingLink>
                    <UML:Link xmi.idref = 'a641'/>
                    <UML:Link xmi.idref = 'a651'/>
                  </UML:CollaborationInstanceSet.participatingLink>
                </UML:CollaborationInstanceSet>
                <UML:Stimulus xmi.id = 'a654' name = 'createMessageView' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a638'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a643'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a641'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a657'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Stimulus xmi.id = 'a658' name = 'stim_2' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a638'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a650'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a648'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Object xmi.id = 'a650' name = 'network' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a570'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a659'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a651' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a659' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a650'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a639' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a638'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:CallAction xmi.id = 'a657' name = 'CreateMessageViewAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a660' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a661' language = 'java' body = 'view'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                </UML:CallAction>
              </UML:Namespace.ownedElement>
            </UML:Collaboration>
            <UML:Association xmi.id = 'a662' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a155'/>
              </UML:ModelElement.stereotype>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a663' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a664'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a665' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a168'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a666' name = 'network' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a667'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a668' lower = '1' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a570'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Package xmi.id = 'a669' name = 'networking' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:DataType xmi.id = 'a670' name = 'Network[]' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                <UML:Class xmi.id = 'a570' name = 'Network' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a87'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a567' name = 'send' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a671' name = 'msg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a198'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a672' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a673' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a567'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a674' name = 'name' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a107'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a675' name = 'recvMsg' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:ModelElement.taggedValue>
                        <UML:TaggedValue xmi.id = 'a676' isSpecification = 'false'>
                          <UML:TaggedValue.dataValue>false</UML:TaggedValue.dataValue>
                          <UML:TaggedValue.type>
                            <UML:TagDefinition xmi.idref = 'a35'/>
                          </UML:TaggedValue.type>
                        </UML:TaggedValue>
                      </UML:ModelElement.taggedValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a198'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a677' name = 'login' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a678' name = 'uid' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a679' name = 'pwd' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a107'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a680' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a681' language = 'java' body = '        // your code here&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a677'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a682' name = 'logout' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a683' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a684' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a682'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a685' name = 'recvContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a203'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a686' name = 'addContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a687' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a203'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a688' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a689' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a686'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a690' name = 'removeContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a691' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a203'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a692' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a693' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a690'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a694' name = 'getDefault' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'classifier' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a695' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a670'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a696' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a697' language = 'java' body = '        String[] options = {&#10;            &quot;im.networking.jabber.mejabber.MEJabber&quot;,&#10;            &quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;,&#10;            &quot;im.networking.sms.SMS&quot;,&#10;            &quot;im.networking.local.Local&quot;&#10;        };&#10;        java.util.Vector networks = new java.util.Vector();&#10;        for (int i = 0; i &lt; options.length; i++) {&#10;            try {&#10;                networks.addElement(Class.forName(options[i]).newInstance());&#10;            } catch (Exception e) {&#10;            }&#10;        }&#10;        Network[] nwArray = new Network[networks.size()];&#10;        networks.copyInto(nwArray);&#10;        return nwArray;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a694'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Interface xmi.id = 'a576' name = 'ExceptionReporter' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Classifier.feature>
                <UML:Operation xmi.id = 'a698' name = 'report' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'true'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a699' name = 'e' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a59'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a700' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a701' language = 'java' body = ''/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a698'/>
                  </UML:Method.specification>
                </UML:Method>
              </UML:Classifier.feature>
            </UML:Interface>
            <UML:Class xmi.id = 'a168' name = 'InstantMessagingClient' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
              isActive = 'false'>
              <UML:ModelElement.clientDependency>
                <UML:Abstraction xmi.idref = 'a575'/>
                <UML:Dependency xmi.idref = 'a702'/>
              </UML:ModelElement.clientDependency>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a148'/>
                <UML:Stereotype xmi.idref = 'a75'/>
                <UML:Stereotype xmi.idref = 'a76'/>
              </UML:ModelElement.stereotype>
              <UML:ModelElement.taggedValue>
                <UML:TaggedValue xmi.id = 'a703' isSpecification = 'false'>
                  <UML:TaggedValue.dataValue>Title: InstantMessagingClient\n(C) 2005, Dennis Wagelaar, System and Software Engineering Lab, Vrije Universiteit Brussel\nA simple instant messaging client generated from a PIM</UML:TaggedValue.dataValue>
                  <UML:TaggedValue.type>
                    <UML:TagDefinition xmi.idref = 'a120'/>
                  </UML:TaggedValue.type>
                </UML:TaggedValue>
                <UML:TaggedValue xmi.id = 'a704' isSpecification = 'false'>
                  <UML:TaggedValue.dataValue>&lt;p&gt;&lt;/p&gt;</UML:TaggedValue.dataValue>
                  <UML:TaggedValue.type>
                    <UML:TagDefinition xmi.idref = 'a3'/>
                  </UML:TaggedValue.type>
                </UML:TaggedValue>
              </UML:ModelElement.taggedValue>
              <UML:Classifier.feature>
                <UML:Operation xmi.id = 'a705' name = 'init' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a706' name = 'start' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a707' name = 'stop' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a647' name = 'onRecvMsgChange' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a708' name = 'r' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a198'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Operation xmi.id = 'a709' name = 'onRecvContactChange' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a710' name = 'c' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a203'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a711' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a712' language = 'java' body = '        for (int i = 0; i &lt; getConversations().size(); i++) {&#10;            String contact = getConversationAt(i).getContact().getUserId();&#10;            if (contact.equals(r.getSender())) {&#10;                getConversationAt(i).setMessage(r);&#10;                return;&#10;            }&#10;        }&#10;        // create new conversation&#10;        im.model.Conversation conv = new im.model.Conversation();&#10;        new im.edit.ConversationEdit(conv);&#10;        addConversation(conv);&#10;        for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;            if (getContactList().getContactAt(i).getUserId().equals(r.getSender())) {&#10;                conv.setContact(getContactList().getContactAt(i));&#10;                break;&#10;            }&#10;        }&#10;        if (conv.getContact() == null) {&#10;            conv.setContact(new im.model.Contact());&#10;            conv.getContact().setUserId(r.getSender());&#10;        }&#10;        conv.setMessage(r);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a647'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a713' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a714' language = 'java' body = '        loadSettings();&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a705'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a715' name = 'report' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a716' name = 'e' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a59'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Operation xmi.id = 'a717' name = 'loadSettings' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Method xmi.id = 'a718' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a719' language = 'java' body = '        for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;            im.model.Contact listed = getContactList().getContactAt(i);&#10;            if (listed.getUserId().equals(c.getUserId())) {&#10;                if (c.getStatus() != null) {&#10;                    listed.setStatus(c.getStatus());&#10;                }&#10;                if (c.getName() != null) {&#10;                    listed.setName(c.getName());&#10;                }&#10;                return;&#10;            }&#10;        }&#10;        getContactList().addContact(c);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a709'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a720' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a721' language = 'java' body = '        try {&#10;            // ViewFactory&#10;            setViewFactory(im.view.ViewFactory.getDefault());&#10;            // Network&#10;            im.networking.Network[] networks = im.networking.Network.getDefault();&#10;            for (int i = 0; i &lt; networks.length; i++) {&#10;                addNetwork(networks[i]);&#10;            }&#10;            // Create and register edit/view&#10;            new im.edit.ContactListEdit(contactList);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a717'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a722' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a723' language = 'java' body = '        for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            im.model.Identity id = getContactList().getIdentity(getNetworkAt(i));&#10;            if (id != null) {&#10;                getNetworkAt(i).login(id.getUserId(), id.getPassword());&#10;            }&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a706'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a724' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a725' language = 'java' body = '        for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            if (getContactList().getIdentity(getNetworkAt(i)) != null) {&#10;                getNetworkAt(i).logout();&#10;            }&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a707'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a726' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a727' language = 'java' body = '        for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            if (getNetworkAt(i) instanceof ExceptionReporter) {&#10;                ((ExceptionReporter) getNetworkAt(i)).report(e);&#10;                return;&#10;            }&#10;        }&#10;        System.err.println(e.getMessage());&#10;        e.printStackTrace();&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a715'/>
                  </UML:Method.specification>
                </UML:Method>
              </UML:Classifier.feature>
            </UML:Class>
            <UML:Dependency xmi.id = 'a702' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a85'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a168'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Interface xmi.idref = 'a576'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Association xmi.id = 'a728' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a729' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a730'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a731' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a168'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a732' name = 'contactList' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a733'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a734' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:ModelElement.taggedValue>
                    <UML:TaggedValue xmi.id = 'a735' isSpecification = 'false'>
                      <UML:TaggedValue.dataValue>new im.model.ContactList()</UML:TaggedValue.dataValue>
                      <UML:TaggedValue.type>
                        <UML:TagDefinition xmi.idref = 'a137'/>
                      </UML:TaggedValue.type>
                    </UML:TaggedValue>
                  </UML:ModelElement.taggedValue>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a244'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Association xmi.id = 'a736' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a737' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a738'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a739' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a168'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a740' name = 'viewFactory' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a741'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a742' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a440'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:UseCase xmi.id = 'a48' name = 'Update contact list' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
      </UML:Namespace.ownedElement>
    </UML:Model>
  </XMI.content>
</XMI>
