<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<XMI xmi.version = '1.2' xmlns:UML = 'org.omg.xmi.namespace.UML' timestamp = 'Thu Jun 02 19:08:00 CEST 2005'>
  <XMI.header>
    <XMI.documentation>
      <XMI.exporter>Netbeans XMI Writer</XMI.exporter>
      <XMI.exporterVersion>1.0</XMI.exporterVersion>
    </XMI.documentation>
  </XMI.header>
  <XMI.content>
    <UML:Model xmi.id = 'a1' name = 'InstantMessengerModel' isSpecification = 'false'
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
      <UML:ModelElement.taggedValue>
        <UML:TaggedValue xmi.id = 'a2' isSpecification = 'false'>
          <UML:TaggedValue.dataValue>&lt;p&gt;(C) 2005, Dennis Wagelaar, System and Software Engineering Lab, Vrije Universiteit Brussel&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;li&gt;Neither the name of JabberWookie nor the names of its contributors may be used
to endorse or promote products derived from this software without specific
prior written permission.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</UML:TaggedValue.dataValue>
          <UML:TaggedValue.type>
            <UML:TagDefinition xmi.idref = 'a3'/>
          </UML:TaggedValue.type>
        </UML:TaggedValue>
      </UML:ModelElement.taggedValue>
      <UML:Namespace.ownedElement>
        <UML:Package xmi.id = 'a4' name = 'observer' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Interface xmi.id = 'a5' name = 'Observer' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Classifier.feature>
                <UML:Operation xmi.id = 'a6' name = 'update' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a7' name = 'name' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a8'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a9' name = 'value' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a10'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a11' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a12' language = 'java' body = ''/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a6'/>
                  </UML:Method.specification>
                </UML:Method>
              </UML:Classifier.feature>
            </UML:Interface>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Association xmi.id = 'a13' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a14' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a15'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a16' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a17'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a18' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a19'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a20' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a21'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = 'a22' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a23' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a24'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a25' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a17'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a26' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a27'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a28' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a29'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:UseCase xmi.id = 'a30' name = 'Receive message' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:TagDefinition xmi.id = 'a31' name = 'AppletInfo' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a32'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a33' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'a34' name = 'Singleton' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Include xmi.id = 'a35' isSpecification = 'false'>
          <UML:Include.addition>
            <UML:UseCase xmi.idref = 'a36'/>
          </UML:Include.addition>
          <UML:Include.base>
            <UML:UseCase xmi.idref = 'a29'/>
          </UML:Include.base>
        </UML:Include>
        <UML:Association xmi.id = 'a37' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a38' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a39'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a40' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a17'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a41' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a42'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a43' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a44'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = 'a45' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a46' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a47'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a48' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a30'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a49' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a50'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a51' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a52'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a53' name = 'Observable' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a54' name = 'invariant' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a55' name = 'initializer' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Operation</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Actor xmi.id = 'a52' name = 'Network' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Package xmi.id = 'a56' name = 'java' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a57' name = 'lang' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a58' name = 'String' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a59' name = 'Object' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a60' name = 'String[]' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a61' name = 'String[][]' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:DataType xmi.id = 'a62' name = 'void' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:DataType xmi.id = 'a63' name = 'int' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:DataType xmi.id = 'a64' name = 'double' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:DataType xmi.id = 'a65' name = 'boolean' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a66' name = 'ClassNotFoundException' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a67'/>
                  </UML:ModelElement.stereotype>
                  <UML:Namespace.ownedElement>
                    <UML:Exception xmi.id = 'a68' name = 'lcduiViewFactoryException' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Signal.context>
                        <UML:Operation xmi.idref = 'a69'/>
                      </UML:Signal.context>
                    </UML:Exception>
                  </UML:Namespace.ownedElement>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a70' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a71'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a72'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a73' name = 'util' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a74' name = 'Observable' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a75' name = 'TreeSet' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a76' name = 'ArrayList' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a77' name = 'Hashtable' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Interface xmi.id = 'a78' name = 'Collection' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a79' name = 'List' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a80' name = 'OrderedSet' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a81' name = 'Set' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a82' name = 'Observer' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Dependency xmi.id = 'a83' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a84'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a85'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a86' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a87'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a85'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a88' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a89'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a85'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a85' name = 'Vector' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Package xmi.id = 'a90' name = 'io' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a91' name = 'IOException' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Exception xmi.id = 'a92' name = 'JabberConnectException' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Signal.context>
                        <UML:Operation xmi.idref = 'a93'/>
                      </UML:Signal.context>
                    </UML:Exception>
                    <UML:Exception xmi.id = 'a94' name = 'MEJabberConnectException' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Signal.context>
                        <UML:Operation xmi.idref = 'a95'/>
                      </UML:Signal.context>
                    </UML:Exception>
                  </UML:Namespace.ownedElement>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'a96' name = 'Applet' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Package xmi.id = 'a97' name = 'com' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a98' name = 'jabberwookie' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Package xmi.id = 'a99' name = 'ns' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Package xmi.id = 'a100' name = 'jabber' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Namespace.ownedElement>
                        <UML:Package xmi.id = 'a101' name = 'iq' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Class xmi.id = 'a102' name = 'IQ' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Class xmi.id = 'a103' name = 'Presence' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Dependency xmi.id = 'a104' isSpecification = 'false'>
                          <UML:Dependency.client>
                            <UML:Class xmi.idref = 'a105'/>
                          </UML:Dependency.client>
                          <UML:Dependency.supplier>
                            <UML:Package xmi.idref = 'a101'/>
                          </UML:Dependency.supplier>
                        </UML:Dependency>
                        <UML:Class xmi.id = 'a106' name = 'Message' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                      </UML:Namespace.ownedElement>
                    </UML:Package>
                    <UML:Dependency xmi.id = 'a107' isSpecification = 'false'>
                      <UML:Dependency.client>
                        <UML:Class xmi.idref = 'a105'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Package xmi.idref = 'a100'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Class xmi.id = 'a108' name = 'Client2Server' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a109'/>
                    <UML:Dependency xmi.idref = 'a110'/>
                    <UML:Dependency xmi.idref = 'a111'/>
                  </UML:ModelElement.clientDependency>
                </UML:Class>
                <UML:Interface xmi.id = 'a112' name = 'PresenceListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Dependency xmi.id = 'a109' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a113'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a108'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a114'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Interface xmi.id = 'a114' name = 'MessageListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Dependency xmi.id = 'a110' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a113'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a108'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a112'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a111' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a113'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a108'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a115'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Interface xmi.id = 'a115' name = 'IQListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a116' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a105'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a98'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Package xmi.id = 'a117' name = 'im' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Abstraction xmi.id = 'a118' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a119'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a120'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Interface xmi.idref = 'a5'/>
              </UML:Dependency.supplier>
            </UML:Abstraction>
            <UML:Dependency xmi.id = 'a121' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a87'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a122'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a123' name = 'networking' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Dependency xmi.id = 'a124' name = 'accessor setRecvMsg()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a126'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a127'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a128' name = 'accessor getName()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a129'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a130'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a131' name = 'accessor setName()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a132'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a130'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Abstraction xmi.id = 'a133' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a105'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a112'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Generalization xmi.id = 'a134' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a135'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a136'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:DataType xmi.id = 'a137' name = 'Network[]' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                <UML:Generalization xmi.id = 'a138' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a105'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a136'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Abstraction xmi.id = 'a139' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a105'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a114'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Dependency xmi.id = 'a140' name = 'accessor setRecvContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a141'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a142'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Package xmi.id = 'a143' name = 'local' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a144' name = 'Local' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a145'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a146'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a147' name = 'Local' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a148'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a149' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a144'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a150' name = 'send' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a151' name = 'msg' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a152'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a153' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a154' language = 'java' body = '        msg.setRecipient(msg.getSender());&#10;        setRecvMsg(msg);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a150'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a155' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a156' language = 'java' body = '        setName(&quot;Local&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a147'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a157' name = 'report' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a158' name = 'e' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a159'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a160' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a161' language = 'java' body = '        im.model.Message msg = new im.model.Message();&#10;        msg.setSender(&quot;System&quot;);&#10;        msg.setContent(e.toString());&#10;        send(msg);&#10;        e.printStackTrace();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a157'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Generalization xmi.id = 'a146' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a144'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a136'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Dependency xmi.id = 'a162' name = 'accessor getRecvMsg()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a163'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a127'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Package xmi.id = 'a164' name = 'jabber' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Package xmi.id = 'a165' name = 'mejabber' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Namespace.ownedElement>
                        <UML:Association xmi.id = 'a166' isSpecification = 'false' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:Association.connection>
                            <UML:AssociationEnd xmi.id = 'a167' visibility = 'public' isSpecification = 'false'
                              isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                              changeability = 'changeable'>
                              <UML:AssociationEnd.multiplicity>
                                <UML:Multiplicity xmi.id = 'a168'>
                                  <UML:Multiplicity.range>
                                    <UML:MultiplicityRange xmi.id = 'a169' lower = '1' upper = '1'/>
                                  </UML:Multiplicity.range>
                                </UML:Multiplicity>
                              </UML:AssociationEnd.multiplicity>
                              <UML:AssociationEnd.participant>
                                <UML:Class xmi.idref = 'a71'/>
                              </UML:AssociationEnd.participant>
                            </UML:AssociationEnd>
                            <UML:AssociationEnd xmi.id = 'a170' name = 'socket' visibility = 'public'
                              isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                              targetScope = 'instance' changeability = 'changeable'>
                              <UML:AssociationEnd.multiplicity>
                                <UML:Multiplicity xmi.id = 'a171'>
                                  <UML:Multiplicity.range>
                                    <UML:MultiplicityRange xmi.id = 'a172' lower = '1' upper = '1'/>
                                  </UML:Multiplicity.range>
                                </UML:Multiplicity>
                              </UML:AssociationEnd.multiplicity>
                              <UML:AssociationEnd.participant>
                                <UML:Interface xmi.idref = 'a173'/>
                              </UML:AssociationEnd.participant>
                            </UML:AssociationEnd>
                          </UML:Association.connection>
                        </UML:Association>
                        <UML:Dependency xmi.id = 'a174' name = 'accessor getSocket()' isSpecification = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a125'/>
                          </UML:ModelElement.stereotype>
                          <UML:Dependency.client>
                            <UML:Operation xmi.idref = 'a175'/>
                          </UML:Dependency.client>
                          <UML:Dependency.supplier>
                            <UML:Attribute xmi.idref = 'a176'/>
                          </UML:Dependency.supplier>
                        </UML:Dependency>
                        <UML:Class xmi.id = 'a71' name = 'MEJabber' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                          <UML:ModelElement.clientDependency>
                            <UML:Dependency xmi.idref = 'a70'/>
                          </UML:ModelElement.clientDependency>
                          <UML:GeneralizableElement.generalization>
                            <UML:Generalization xmi.idref = 'a177'/>
                          </UML:GeneralizableElement.generalization>
                          <UML:Classifier.feature>
                            <UML:Operation xmi.id = 'a178' name = 'setSocket' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:ModelElement.clientDependency>
                                <UML:Dependency xmi.idref = 'a179'/>
                              </UML:ModelElement.clientDependency>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a180' name = 'socket' isSpecification = 'false'
                                  kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:Interface xmi.idref = 'a173'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a181' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a182' language = 'java' body = '// Begin Observable stanza&#10;if (this.socket != socket) {&#10;    // Begin original body&#10;this.socket = socket;&#10;    // End original body&#10;    notifyObservers(&quot;Socket&quot;, socket);&#10;}&#10;// End Observable stanza'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a178'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a175' name = 'getSocket' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:ModelElement.clientDependency>
                                <UML:Dependency xmi.idref = 'a174'/>
                              </UML:ModelElement.clientDependency>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a183' name = 'return' isSpecification = 'false'
                                  kind = 'return'>
                                  <UML:Parameter.type>
                                    <UML:Interface xmi.idref = 'a173'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a184' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a185' language = 'java' body = 'return socket;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a175'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Attribute xmi.id = 'a176' name = 'socket' visibility = 'private' isSpecification = 'false'
                              ownerScope = 'instance' changeability = 'changeable'>
                              <UML:Attribute.initialValue>
                                <UML:Expression xmi.id = 'a186' language = 'java' body = 'null'/>
                              </UML:Attribute.initialValue>
                              <UML:StructuralFeature.type>
                                <UML:Interface xmi.idref = 'a173'/>
                              </UML:StructuralFeature.type>
                            </UML:Attribute>
                            <UML:Attribute xmi.id = 'a187' name = 'connectError' visibility = 'private'
                              isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                              <UML:Attribute.initialValue>
                                <UML:Expression xmi.id = 'a188' language = 'java' body = '&quot;&quot;'/>
                              </UML:Attribute.initialValue>
                              <UML:StructuralFeature.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:StructuralFeature.type>
                            </UML:Attribute>
                            <UML:Operation xmi.id = 'a95' name = 'connect' visibility = 'protected'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a189' name = 'host' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a8'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a190' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a191' language = 'java' body = '        setSocket(connect(host, 5222));&#10;        if (getSocket() == null) {&#10;            throw new java.io.IOException(connectError);&#10;        }&#10;        setConnection(new com.jabberwookie.Client2Server(&#10;            getSocket().openInputStream(), getSocket().openOutputStream()));&#10;        if (!getConnection().open(host, 60000)) {&#10;            throw new java.io.IOException(&quot;Could not establish stream to &quot; + host + &quot;:5222 after 60 seconds&quot;);&#10;        }&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a95'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a192' name = 'connect' visibility = 'private' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a193' name = 'host' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a8'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                                <UML:Parameter xmi.id = 'a194' name = 'port' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a195'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                                <UML:Parameter xmi.id = 'a196' name = 'return' isSpecification = 'false'
                                  kind = 'return'>
                                  <UML:Parameter.type>
                                    <UML:Interface xmi.idref = 'a173'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a197' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a198' language = 'java' body = '        StreamConnection s = null;&#10;        try {&#10;            s = (StreamConnection) Connector.open(&quot;socket://&quot; + host + &quot;:&quot; + port);&#10;        } catch (Exception e) {&#10;            connectError = e.getMessage() + &quot; at MEJabber.connect(&quot; + host + &quot;, &quot; + port + &quot;)&quot;;&#10;        }&#10;        return s;&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a192'/>
                              </UML:Method.specification>
                            </UML:Method>
                          </UML:Classifier.feature>
                        </UML:Class>
                        <UML:Dependency xmi.id = 'a179' name = 'accessor setSocket()' isSpecification = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a125'/>
                          </UML:ModelElement.stereotype>
                          <UML:Dependency.client>
                            <UML:Operation xmi.idref = 'a178'/>
                          </UML:Dependency.client>
                          <UML:Dependency.supplier>
                            <UML:Attribute xmi.idref = 'a176'/>
                          </UML:Dependency.supplier>
                        </UML:Dependency>
                      </UML:Namespace.ownedElement>
                    </UML:Package>
                    <UML:Association xmi.id = 'a199' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a200' visibility = 'public' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a201'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a202' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a105'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a203' name = 'connection' visibility = 'public'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a204'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a205' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:ModelElement.taggedValue>
                            <UML:TaggedValue xmi.id = 'a206' isSpecification = 'false'>
                              <UML:TaggedValue.dataValue></UML:TaggedValue.dataValue>
                              <UML:TaggedValue.type>
                                <UML:TagDefinition xmi.idref = 'a207'/>
                              </UML:TaggedValue.type>
                            </UML:TaggedValue>
                          </UML:ModelElement.taggedValue>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a108'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                    <UML:Dependency xmi.id = 'a208' name = 'accessor setConnection()' isSpecification = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a125'/>
                      </UML:ModelElement.stereotype>
                      <UML:Dependency.client>
                        <UML:Operation xmi.idref = 'a209'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Attribute xmi.idref = 'a210'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                    <UML:Class xmi.id = 'a105' name = 'Jabber' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a133'/>
                        <UML:Abstraction xmi.idref = 'a139'/>
                        <UML:Abstraction xmi.idref = 'a211'/>
                        <UML:Dependency xmi.idref = 'a107'/>
                        <UML:Dependency xmi.idref = 'a116'/>
                        <UML:Dependency xmi.idref = 'a104'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a138'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Namespace.ownedElement>
                        <UML:Generalization xmi.id = 'a212' isSpecification = 'false'>
                          <UML:Generalization.child>
                            <UML:Class xmi.idref = 'a213'/>
                          </UML:Generalization.child>
                          <UML:Generalization.parent>
                            <UML:Class xmi.idref = 'a214'/>
                          </UML:Generalization.parent>
                        </UML:Generalization>
                        <UML:Class xmi.id = 'a213' name = 'ConnectedState' visibility = 'public'
                          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                          isActive = 'false'>
                          <UML:GeneralizableElement.generalization>
                            <UML:Generalization xmi.idref = 'a212'/>
                          </UML:GeneralizableElement.generalization>
                          <UML:Classifier.feature>
                            <UML:Operation xmi.id = 'a215' name = 'logout' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'/>
                            <UML:Method xmi.id = 'a216' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a217' language = 'java' body = '        Thread logout = new Thread() {&#10;            public void run() {&#10;                try {&#10;                    System.out.println(&quot;Closing connection for &quot; + getConnection().getServerName());&#10;                    Presence p = new Presence();&#10;                    p.setType(Const.UNAVAILABLE);&#10;                    getConnection().send(p);&#10;                    getConnection().close();&#10;                    synchronized(Jabber.this) {&#10;                        Jabber.this.state = new DisconnectedState();&#10;                    }&#10;                } catch (java.io.IOException e) {&#10;                    im.InstantMessagingClient.getInstance().report(e);&#10;                }&#10;            }&#10;        };&#10;        logout.start();&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a215'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a218' name = 'addContact' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a219' name = 'c' isSpecification = 'false' kind = 'in'>
                                  <UML:ModelElement.taggedValue>
                                    <UML:TaggedValue xmi.id = 'a220' isSpecification = 'false'>
                                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                      <UML:TaggedValue.type>
                                        <UML:TagDefinition xmi.idref = 'a221'/>
                                      </UML:TaggedValue.type>
                                    </UML:TaggedValue>
                                  </UML:ModelElement.taggedValue>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a222'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a223' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a224' language = 'java' body = '        if (!getConnection().isConnected()) {&#10;            Jabber.this.state = new DisconnectedState();&#10;            return;&#10;        }&#10;        Thread addContact = new Thread() {&#10;            public void run() {&#10;                try {&#10;                    Presence presence = new Presence(c.getUserId(), Const.SUBSCRIBE);&#10;                    System.out.println(&quot;Adding contact &quot; + presence);&#10;                    getConnection().send(presence);&#10;                    IQRoster roster = new IQRoster();&#10;                    roster.addItem(c.getUserId(), c.getName());&#10;                    IQ iq = new IQ(Const.SET);&#10;                    iq.addChild(roster);&#10;                    getConnection().send(iq);&#10;                } catch (java.io.IOException e) {&#10;                    im.InstantMessagingClient.getInstance().report(e);&#10;                }&#10;            }&#10;        };&#10;        addContact.start();&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a218'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a225' name = 'removeContact' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a226' name = 'c' isSpecification = 'false' kind = 'in'>
                                  <UML:ModelElement.taggedValue>
                                    <UML:TaggedValue xmi.id = 'a227' isSpecification = 'false'>
                                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                      <UML:TaggedValue.type>
                                        <UML:TagDefinition xmi.idref = 'a221'/>
                                      </UML:TaggedValue.type>
                                    </UML:TaggedValue>
                                  </UML:ModelElement.taggedValue>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a222'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a228' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a229' language = 'java' body = '        if (!getConnection().isConnected()) {&#10;            Jabber.this.state = new DisconnectedState();&#10;            return;&#10;        }&#10;        Thread removeContact = new Thread() {&#10;            public void run() {&#10;                try {&#10;                    IQRoster roster = new IQRoster();&#10;                    roster.addItem(c.getUserId());&#10;                    ((IQRoster.Item) roster.getChild(0)).setSubscription(Const.REMOVE);&#10;                    IQ iq = new IQ(Const.SET);&#10;                    iq.addChild(roster);&#10;                    getConnection().send(iq);&#10;                    Presence presence = new Presence(c.getUserId(), Const.UNSUBSCRIBE);&#10;                    System.out.println(&quot;Removing contact &quot; + presence);&#10;                    getConnection().send(presence);&#10;                } catch (java.io.IOException e) {&#10;                    im.InstantMessagingClient.getInstance().report(e);&#10;                }&#10;            }&#10;        };&#10;        removeContact.start();&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a225'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a230' name = 'send' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a231' name = 'msg' isSpecification = 'false' kind = 'in'>
                                  <UML:ModelElement.taggedValue>
                                    <UML:TaggedValue xmi.id = 'a232' isSpecification = 'false'>
                                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                      <UML:TaggedValue.type>
                                        <UML:TagDefinition xmi.idref = 'a221'/>
                                      </UML:TaggedValue.type>
                                    </UML:TaggedValue>
                                  </UML:ModelElement.taggedValue>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a152'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a233' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a234' language = 'java' body = '        if (!getConnection().isConnected()) {&#10;            Jabber.this.state = new DisconnectedState();&#10;            return;&#10;        }&#10;        Thread send = new Thread() {&#10;            public void run() {&#10;                try {&#10;                    Message message = new Message();&#10;                    message.setTo(msg.getRecipient());&#10;                    message.setFrom(msg.getSender());&#10;                    message.setBody(msg.getContent().toString());&#10;                    System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#10;                    getConnection().send(message);&#10;                } catch (java.io.IOException e) {&#10;                    im.InstantMessagingClient.getInstance().report(e);&#10;                }&#10;            }&#10;        };&#10;        send.start();&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a230'/>
                              </UML:Method.specification>
                            </UML:Method>
                          </UML:Classifier.feature>
                        </UML:Class>
                        <UML:Generalization xmi.id = 'a235' isSpecification = 'false'>
                          <UML:Generalization.child>
                            <UML:Class xmi.idref = 'a236'/>
                          </UML:Generalization.child>
                          <UML:Generalization.parent>
                            <UML:Class xmi.idref = 'a214'/>
                          </UML:Generalization.parent>
                        </UML:Generalization>
                        <UML:Class xmi.id = 'a214' name = 'State' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                          <UML:Classifier.feature>
                            <UML:Operation xmi.id = 'a237' name = 'login' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a238' name = 'uid' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a8'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                                <UML:Parameter xmi.id = 'a239' name = 'pwd' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a8'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a240' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a241' language = 'java' body = ''/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a237'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a242' name = 'logout' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'/>
                            <UML:Method xmi.id = 'a243' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a244' language = 'java' body = ''/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a242'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a245' name = 'addContact' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a246' name = 'c' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a222'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a247' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a248' language = 'java' body = ''/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a245'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a249' name = 'removeContact' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a250' name = 'c' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a222'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a251' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a252' language = 'java' body = ''/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a249'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a253' name = 'send' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a254' name = 'msg' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a152'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a255' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a256' language = 'java' body = ''/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a253'/>
                              </UML:Method.specification>
                            </UML:Method>
                          </UML:Classifier.feature>
                        </UML:Class>
                        <UML:Class xmi.id = 'a236' name = 'DisconnectedState' visibility = 'public'
                          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                          isActive = 'false'>
                          <UML:GeneralizableElement.generalization>
                            <UML:Generalization xmi.idref = 'a235'/>
                          </UML:GeneralizableElement.generalization>
                          <UML:Classifier.feature>
                            <UML:Operation xmi.id = 'a257' name = 'login' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a258' name = 'uid' isSpecification = 'false' kind = 'in'>
                                  <UML:ModelElement.taggedValue>
                                    <UML:TaggedValue xmi.id = 'a259' isSpecification = 'false'>
                                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                      <UML:TaggedValue.type>
                                        <UML:TagDefinition xmi.idref = 'a221'/>
                                      </UML:TaggedValue.type>
                                    </UML:TaggedValue>
                                  </UML:ModelElement.taggedValue>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a8'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                                <UML:Parameter xmi.id = 'a260' name = 'pwd' isSpecification = 'false' kind = 'in'>
                                  <UML:ModelElement.taggedValue>
                                    <UML:TaggedValue xmi.id = 'a261' isSpecification = 'false'>
                                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                      <UML:TaggedValue.type>
                                        <UML:TagDefinition xmi.idref = 'a221'/>
                                      </UML:TaggedValue.type>
                                    </UML:TaggedValue>
                                  </UML:ModelElement.taggedValue>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a8'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a262' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a263' language = 'java' body = '        Thread login = new Thread() {&#10;            public void run() {&#10;                try {&#10;                    java.util.Vector address = com.ssttr.util.Strings.tokenize(uid, &apos;@&apos;);&#10;                    String user = (String) address.elementAt(0);&#10;                    String server = (String) address.elementAt(1);&#10;                    address = com.ssttr.util.Strings.tokenize(server, &apos;/&apos;);&#10;                    server = (String) address.elementAt(0);&#10;                    String resource = (String) address.elementAt(1);&#10;                    connect(server);&#10;                    getConnection().setMessageListener(Jabber.this);&#10;                    getConnection().setIQListener(Jabber.this);&#10;                    getConnection().setPresenceListener(Jabber.this);&#10;                    boolean try_again;&#10;                    do {&#10;                        try_again = false;&#10;                        System.out.println(&quot;Logging in &quot; + uid);&#10;                        switch (getConnection().loginAny(user, resource,&#10;                                pwd, 30000)) {&#10;                        case Client2Server.LOGIN_BAD_PASS:&#10;                            throw new java.io.IOException(&quot;Bad password for &quot; + uid);&#10;                        case Client2Server.LOGIN_BAD_UID:&#10;                            if (!registerUser(user, pwd))&#10;                                throw new java.io.IOException(&#10;                                        &quot;Could not register user for &quot;&#10;                                                + uid);&#10;                            else&#10;                                try_again = true;&#10;                            break;&#10;                        case Client2Server.LOGIN_FAILED:&#10;                            throw new java.io.IOException(&quot;Login failed: unknown: &quot;&#10;                                    + uid);&#10;                        case Client2Server.LOGIN_PASS_EXP:&#10;                            System.out&#10;                                    .println(&quot;Your password has expired for &quot;&#10;                                            + uid);&#10;                            break;&#10;                        case Client2Server.LOGIN_OK:&#10;                            break;&#10;                        }&#10;                    } while (try_again);&#10;                    Presence pres = new Presence(Const.AVAILABLE,&#10;                            &quot;Available&quot;, 1);&#10;                    pres.setFrom(uid);&#10;                    getConnection().send(pres);&#10;                    incomingPresence(pres);&#10;                    getConnection().send(IQRoster.createGetRequest());&#10;                    synchronized(Jabber.this) {&#10;                            Jabber.this.state = new ConnectedState();&#10;                    }&#10;                } catch (Exception e) {&#10;                    im.InstantMessagingClient.getInstance().report(e);&#10;                }&#10;            }&#10;        };&#10;        login.start();&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a257'/>
                              </UML:Method.specification>
                            </UML:Method>
                          </UML:Classifier.feature>
                        </UML:Class>
                      </UML:Namespace.ownedElement>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a209' name = 'setConnection' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.clientDependency>
                            <UML:Dependency xmi.idref = 'a208'/>
                          </UML:ModelElement.clientDependency>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a264' name = 'connection' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a108'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a265' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a266' language = 'java' body = '// Begin Observable stanza&#10;if (this.connection != connection) {&#10;    // Begin original body&#10;this.connection = connection;&#10;    // End original body&#10;    notifyObservers(&quot;Connection&quot;, connection);&#10;}&#10;// End Observable stanza'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a209'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a267' name = 'getConnection' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.clientDependency>
                            <UML:Dependency xmi.idref = 'a268'/>
                          </UML:ModelElement.clientDependency>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a269' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a108'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a270' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a271' language = 'java' body = 'return connection;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a267'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a210' name = 'connection' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a272' language = 'java' body = ''/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a108'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a273' name = 'state' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a274' language = 'java' body = 'new DisconnectedState()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a214'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a275' name = 'Jabber' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a148'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a276' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a105'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a277' name = 'send' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a278' name = 'msg' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a152'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a279' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a280' language = 'java' body = '        state.send(msg);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a277'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a281' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a282' language = 'java' body = '        setName(&quot;Jabber&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a275'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a283' name = 'login' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a284' name = 'uid' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a285' name = 'pwd' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a286' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a287' language = 'java' body = '        this.uid = uid;&#10;        state.login(uid, pwd);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a283'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a288' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a289' language = 'java' body = '        System.out.println(&quot;Registering &quot; + user + &quot; at &quot; + getConnection().getServerName());&#10;        try {&#10;            java.util.Hashtable info = IQRegister.getRequiredRegInfo(getConnection());&#10;            String key, value;&#10;            for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#10;                key = (String) e.nextElement();&#10;                value = (String) info.get(key);&#10;                if (key.equals(Const.USERNAME))&#10;                    info.put(key, user);&#10;                else if (key.equals(Const.PASSWORD))&#10;                    info.put(key, pwd);&#10;                else if (key.equals(Const.EMAIL))&#10;                    info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#10;                else if (key.equals(Const.INSTRUCTIONS))&#10;                    ;&#10;                else&#10;                    System.err.println(&quot;Unknown registration parameter: &quot; + key);&#10;            }&#10;            Chunk chunk = getConnection().send(&#10;                IQRegister.createSetRequest(getConnection().getServerName(), info), 30000);&#10;            return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));&#10;        } catch (java.io.IOException e) {&#10;            im.InstantMessagingClient.getInstance().report(e);&#10;        }&#10;        return false;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a290'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a291' name = 'logout' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Operation xmi.id = 'a292' name = 'addContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a293' name = 'c' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a222'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a294' name = 'removeContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a295' name = 'c' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a222'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a296' name = 'incomingMessage' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a297' name = 'message' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a106'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a298' name = 'incomingIQ' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a299' name = 'iq' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a102'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a300' name = 'incomingPresence' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a301' name = 'presence' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a103'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a93' name = 'connect' visibility = 'protected'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a302' name = 'host' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a290' name = 'registerUser' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a303' name = 'user' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a304' name = 'pwd' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a305' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a306'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a307' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a308' language = 'java' body = '        System.out.println(&quot;Message: &quot; + message);&#10;        im.model.Message msg = new im.model.Message();&#10;        msg.setSender(stripResource(message.getFrom()));&#10;        msg.setRecipient(message.getTo());&#10;        msg.setContent(message.getBody());&#10;        setRecvMsg(msg);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a296'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a309' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a310' language = 'java' body = '        state.logout();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a291'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a311' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a312' language = 'java' body = '        java.util.Enumeration children = iq.getChildren().elements();&#10;        while (children.hasMoreElements()) {&#10;            com.ssttr.xml.XMLElement el = (com.ssttr.xml.XMLElement) children.nextElement();&#10;            if (el instanceof IQRoster) {&#10;                for (java.util.Enumeration items = el.enumerateChildren(); items.hasMoreElements();) {&#10;                    IQRoster.Item item = (IQRoster.Item) items.nextElement();&#10;                    System.out.println(&quot;Roster Item: &quot; + item);&#10;                    if (item.getSubscription().equals(Const.BOTH) || &#10;                            item.getSubscription().equals(Const.TO)) {&#10;                        im.model.Contact c = new im.model.Contact();&#10;                        c.setNetwork(this);&#10;                        c.setUserId(item.getJID());&#10;                        c.setName(item.getItemName());&#10;                        setRecvContact(c);&#10;                    }&#10;                }&#10;            } else {&#10;                System.out.println(&quot;Unknown iq element: &quot; + el);&#10;            }&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a298'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a313' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a314' language = 'java' body = '        String type = presence.getType();&#10;        if (type == null) type = &quot;&quot;;&#10;        if (type.equals(Const.SUBSCRIBE)) {&#10;            // someone wants to subscribe to our presence&#10;            // so we slightly re-write the packet to send back &#10;            presence.setType(Const.SUBSCRIBED);&#10;            System.out.println(presence.getFrom() + &quot; wants to subscribe to your presence, allowing.&quot;);&#10;        } else if (type.equals(Const.UNSUBSCRIBE)) {&#10;            // someone wants to unsubscribe from our presence&#10;            // so we slightly re-write the packet to send back &#10;            presence.setType(Const.UNSUBSCRIBED);&#10;            System.out.println(presence.getFrom() + &quot; wants to unsubscribe from your presence, allowing.&quot;);&#10;        } else if (type.equals(Const.SUBSCRIBED)) {&#10;            System.out.println(&quot;Subscribed to: &quot; + presence);&#10;        } else if (type.equals(Const.UNSUBSCRIBED)) {&#10;            System.out.println(&quot;Unsubscribed from: &quot; + presence);&#10;        } else if (type.equals(Const.UNAVAILABLE)) {&#10;            im.model.Contact c = new im.model.Contact();&#10;            c.setNetwork(this);&#10;            c.setUserId(stripResource(presence.getFrom()));&#10;            c.setStatus(&quot;offline&quot;);&#10;            setRecvContact(c);&#10;            return;&#10;        } else {&#10;            System.out.println(&quot;Received presence: &quot; + presence);&#10;            im.model.Contact c = new im.model.Contact();&#10;            c.setNetwork(this);&#10;            c.setUserId(stripResource(presence.getFrom()));&#10;            if (presence.getShow() != null)&#10;            &#9;c.setStatus(presence.getShow());&#10;            else&#10;            &#9;c.setStatus(Const.AVAILABLE);&#10;            setRecvContact(c);&#10;            return;&#10;        }&#10;        // make sure to return it to the sender and not ourselves&#10;        String from = presence.getTo();&#10;        presence.setTo(presence.getFrom());&#10;        presence.setFrom(from);&#10;        try {&#10;            getConnection().send(presence);&#10;        } catch (java.io.IOException e) {&#10;            im.InstantMessagingClient.getInstance().report(e);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a300'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a315' name = 'stripResource' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a316' name = 'jid' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a317' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a318' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a319' language = 'java' body = '        if (uid.equals(jid)) {&#10;            return jid;&#10;        } else { // strip resource bit if remote user&#10;            java.util.Vector strip = com.ssttr.util.Strings.tokenize(jid, &apos;/&apos;);&#10;            return (String) strip.elementAt(0);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a315'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a320' name = 'uid' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a321' language = 'java' body = '&quot;&quot;'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a322' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a323' language = 'java' body = '        state.addContact(c);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a292'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a324' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a325' language = 'java' body = '        state.removeContact(c);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a294'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a326' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a327' language = 'java' body = ''/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a93'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Dependency xmi.id = 'a268' name = 'accessor getConnection()' isSpecification = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a125'/>
                      </UML:ModelElement.stereotype>
                      <UML:Dependency.client>
                        <UML:Operation xmi.idref = 'a267'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Attribute xmi.idref = 'a210'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                    <UML:Association xmi.id = 'a328' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a329' visibility = 'private' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a330'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a331' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a105'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a332' name = 'state' visibility = 'private'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a333'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a334' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:ModelElement.taggedValue>
                            <UML:TaggedValue xmi.id = 'a335' isSpecification = 'false'>
                              <UML:TaggedValue.dataValue>new DisconnectedState()</UML:TaggedValue.dataValue>
                              <UML:TaggedValue.type>
                                <UML:TagDefinition xmi.idref = 'a207'/>
                              </UML:TaggedValue.type>
                            </UML:TaggedValue>
                          </UML:ModelElement.taggedValue>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a214'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                    <UML:Generalization xmi.id = 'a177' isSpecification = 'false'>
                      <UML:Generalization.child>
                        <UML:Class xmi.idref = 'a71'/>
                      </UML:Generalization.child>
                      <UML:Generalization.parent>
                        <UML:Class xmi.idref = 'a105'/>
                      </UML:Generalization.parent>
                    </UML:Generalization>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Class xmi.id = 'a136' name = 'Network' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a53'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a336' name = 'observers' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a337' language = 'java' body = 'new java.util.Vector()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a338' name = 'addObserver' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a339' name = 'observer' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a5'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a340' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a341' language = 'java' body = 'observers.addElement(observer);'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a338'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a342' name = 'deleteObserver' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a343' name = 'observer' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a5'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a344' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a345' language = 'java' body = 'observers.removeElement(observer);'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a342'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a346' name = 'notifyObservers' visibility = 'protected'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a347' name = 'name' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a348' name = 'value' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a349' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a350' language = 'java' body = 'for (int i = 0; i &lt; observers.size(); i++) {&#10;    ((observer.Observer) observers.elementAt(i)).update(name, value);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a346'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a126' name = 'setRecvMsg' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a124'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a351' name = 'recvMsg' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a152'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a352' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a353' language = 'java' body = '// Begin Observable stanza&#10;if (this.recvMsg != recvMsg) {&#10;    // Begin original body&#10;this.recvMsg = recvMsg;&#10;    // End original body&#10;    notifyObservers(&quot;RecvMsg&quot;, recvMsg);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a126'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a141' name = 'setRecvContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a140'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a354' name = 'recvContact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a355' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a356' language = 'java' body = '// Begin Observable stanza&#10;if (this.recvContact != recvContact) {&#10;    // Begin original body&#10;this.recvContact = recvContact;&#10;    // End original body&#10;    notifyObservers(&quot;RecvContact&quot;, recvContact);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a141'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a132' name = 'setName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a131'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a357' name = 'name' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a358' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a359' language = 'java' body = '// Begin Observable stanza&#10;if (this.name != name) {&#10;    // Begin original body&#10;this.name = name;&#10;    // End original body&#10;    notifyObservers(&quot;Name&quot;, name);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a132'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a163' name = 'getRecvMsg' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a162'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a360' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a152'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a361' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a362' language = 'java' body = 'return recvMsg;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a163'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a363' name = 'getRecvContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a364'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a365' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a366' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a367' language = 'java' body = 'return recvContact;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a363'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a129' name = 'getName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a128'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a368' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a369' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a370' language = 'java' body = 'return name;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a129'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a371' name = 'send' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a372' name = 'msg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a152'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a373' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a374' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a371'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a130' name = 'name' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a8'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a127' name = 'recvMsg' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:ModelElement.taggedValue>
                        <UML:TaggedValue xmi.id = 'a375' isSpecification = 'false'>
                          <UML:TaggedValue.dataValue>false</UML:TaggedValue.dataValue>
                          <UML:TaggedValue.type>
                            <UML:TagDefinition xmi.idref = 'a376'/>
                          </UML:TaggedValue.type>
                        </UML:TaggedValue>
                      </UML:ModelElement.taggedValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a152'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a377' name = 'login' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a378' name = 'uid' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a379' name = 'pwd' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a380' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a381' language = 'java' body = '        // your code here&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a377'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a382' name = 'logout' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a383' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a384' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a382'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a142' name = 'recvContact' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a222'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a385' name = 'addContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a386' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a387' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a388' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a385'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a389' name = 'removeContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a390' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a391' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a392' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a389'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a393' name = 'getDefault' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'classifier' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a394' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a137'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a395' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a396' language = 'java' body = '        String[] options = {&#10;            &quot;im.networking.jabber.mejabber.MEJabber&quot;,&#10;            &quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;,&#10;            &quot;im.networking.sms.SMS&quot;,&#10;            &quot;im.networking.local.Local&quot;&#10;        };&#10;        java.util.Vector networks = new java.util.Vector();&#10;        for (int i = 0; i &lt; options.length; i++) {&#10;            try {&#10;                networks.addElement(Class.forName(options[i]).newInstance());&#10;            } catch (Exception e) {&#10;            }&#10;        }&#10;        Network[] nwArray = new Network[networks.size()];&#10;        networks.copyInto(nwArray);&#10;        return nwArray;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a393'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Abstraction xmi.id = 'a145' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a144'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a397'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Dependency xmi.id = 'a364' name = 'accessor getRecvContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a363'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a142'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Abstraction xmi.id = 'a211' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a105'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a115'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Package xmi.id = 'a398' name = 'sms' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a135' name = 'SMS' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a134'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a399' name = 'SMS' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a148'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a400' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a135'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a401' name = 'send' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a402' name = 'msg' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a152'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a403' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a404' language = 'java' body = '        System.out.println(&quot;Sending &quot; + msg + &quot; via &quot; + getName());&#10;        // your code here&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a401'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a405' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a406' language = 'java' body = '        setName(&quot;SMS&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a399'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a407' name = 'accessor getConversations()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a408'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a409'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a410' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a89'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a122'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a411' name = 'accessor removeNetwork()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a412'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a413'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Association xmi.id = 'a414' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a415' name = 'list' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'composite'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a416'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a417' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a418'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a419' name = 'contact' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a420'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a421' lower = '0' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a222'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Association xmi.id = 'a422' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a423' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a424'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a425' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a120'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a426' name = 'conversation' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a427'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a428' lower = '0' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a429'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Class xmi.id = 'a120' name = 'InstantMessagingClient' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
              isActive = 'false'>
              <UML:ModelElement.clientDependency>
                <UML:Abstraction xmi.idref = 'a118'/>
                <UML:Abstraction xmi.idref = 'a430'/>
                <UML:Dependency xmi.idref = 'a431'/>
              </UML:ModelElement.clientDependency>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a432'/>
                <UML:Stereotype xmi.idref = 'a34'/>
                <UML:Stereotype xmi.idref = 'a96'/>
              </UML:ModelElement.stereotype>
              <UML:ModelElement.taggedValue>
                <UML:TaggedValue xmi.id = 'a433' isSpecification = 'false'>
                  <UML:TaggedValue.dataValue>Title: InstantMessagingClient\n(C) 2005, Dennis Wagelaar, System and Software Engineering Lab, Vrije Universiteit Brussel\nA simple instant messaging client generated from a PIM</UML:TaggedValue.dataValue>
                  <UML:TaggedValue.type>
                    <UML:TagDefinition xmi.idref = 'a31'/>
                  </UML:TaggedValue.type>
                </UML:TaggedValue>
                <UML:TaggedValue xmi.id = 'a434' isSpecification = 'false'>
                  <UML:TaggedValue.dataValue>&lt;p&gt;&lt;/p&gt;</UML:TaggedValue.dataValue>
                  <UML:TaggedValue.type>
                    <UML:TagDefinition xmi.idref = 'a3'/>
                  </UML:TaggedValue.type>
                </UML:TaggedValue>
              </UML:ModelElement.taggedValue>
              <UML:Classifier.feature>
                <UML:Operation xmi.id = 'a435' name = 'update' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a436' name = 'name' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a8'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a437' name = 'value' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a10'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a438' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a439' language = 'java' body = '&#10;if (name.equals(&quot;RecvMsg&quot;)) {&#10;    onRecvMsgChange((im.model.Message) value);&#10;}&#10;if (name.equals(&quot;RecvContact&quot;)) {&#10;    onRecvContactChange((im.model.Contact) value);&#10;}'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a435'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a440' name = 'setContactList' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a441'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a442' name = 'contactList' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a418'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a443' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a444' language = 'java' body = 'this.contactList = contactList;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a440'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a445' name = 'setViewFactory' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a446'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a447' name = 'viewFactory' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a448'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a449' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a450' language = 'java' body = 'this.viewFactory = viewFactory;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a445'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a451' name = 'getNetworks' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a452'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a453' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a454'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a455' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a456' language = 'java' body = 'return network;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a451'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a457' name = 'getContactList' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a458'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a459' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a418'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a460' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a461' language = 'java' body = 'return contactList;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a457'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a462' name = 'getViewFactory' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a463'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a464' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a448'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a465' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a466' language = 'java' body = 'return viewFactory;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a462'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a408' name = 'getConversations' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a407'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a467' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a454'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a468' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a469' language = 'java' body = 'return conversation;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a408'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a470' name = 'getNetworkAt' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a471'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a472' name = 'index' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a195'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a473' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a136'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a474' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a475' language = 'java' body = 'try {&#10;    return (im.networking.Network) network.elementAt(index);&#10;} catch (ArrayIndexOutOfBoundsException e) {&#10;    return null;&#10;}'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a470'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a476' name = 'getConversationAt' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a477'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a478' name = 'index' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a195'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a479' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a429'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a480' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a481' language = 'java' body = 'try {&#10;    return (im.model.Conversation) conversation.elementAt(index);&#10;} catch (ArrayIndexOutOfBoundsException e) {&#10;    return null;&#10;}'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a476'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a482' name = 'addNetwork' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a483'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a484' name = 'network' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a136'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a485' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a486' language = 'java' body = '// Begin subscribe stanza&#10;// Begin original body&#10;this.network.addElement(network);&#10;// End original body&#10;if (network != null) network.addObserver(this);&#10;// End subscribe stanza'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a482'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a487' name = 'addConversation' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a488'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a489' name = 'conversation' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a429'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a490' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a491' language = 'java' body = 'this.conversation.addElement(conversation);'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a487'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a492' name = 'insertNetwork' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a493'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a494' name = 'network' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a136'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a495' name = 'index' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a195'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a496' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a497' language = 'java' body = '// Begin subscribe stanza&#10;// Begin original body&#10;try {&#10;    this.network.insertElementAt(network, index);} catch (ArrayIndexOutOfBoundsException e) {&#10;    this.network.addElement(network);&#10;};&#10;// End original body&#10;if (network != null) network.addObserver(this);&#10;// End subscribe stanza'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a492'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a498' name = 'insertConversation' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a499'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a500' name = 'conversation' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a429'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a501' name = 'index' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a195'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a502' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a503' language = 'java' body = 'try {&#10;    this.conversation.insertElementAt(conversation, index);} catch (ArrayIndexOutOfBoundsException e) {&#10;    this.conversation.addElement(conversation);&#10;};'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a498'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a412' name = 'removeNetwork' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a411'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a504' name = 'network' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a136'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a505' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a506' language = 'java' body = '// Begin subscribe stanza&#10;if (network != null) network.deleteObserver(this);&#10;// Begin original body&#10;this.network.removeElement(network);&#10;// End original body&#10;// End subscribe stanza'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a412'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a507' name = 'removeConversation' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a508'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a509' name = 'conversation' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a429'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a510' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a511' language = 'java' body = 'this.conversation.removeElement(conversation);'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a507'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Attribute xmi.id = 'a409' name = 'conversation' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a512' language = 'java' body = 'new java.util.Vector()'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = 'a454'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = 'a413' name = 'network' visibility = 'private' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a513' language = 'java' body = 'new java.util.Vector()'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = 'a454'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = 'a514' name = 'contactList' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a515' language = 'java' body = 'new im.model.ContactList()'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:Class xmi.idref = 'a418'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = 'a516' name = 'viewFactory' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a517' language = 'java' body = 'null'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:Class xmi.idref = 'a448'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Operation xmi.id = 'a518' name = 'init' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a519' name = 'start' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a520' name = 'stop' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a521' name = 'onRecvMsgChange' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a522' name = 'r' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a152'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Operation xmi.id = 'a523' name = 'onRecvContactChange' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a524' name = 'c' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a222'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a525' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a526' language = 'java' body = '        for (int i = 0; i &lt; getConversations().size(); i++) {&#10;            String contact = getConversationAt(i).getContact().getUserId();&#10;            if (contact.equals(r.getSender())) {&#10;                getConversationAt(i).setMessage(r);&#10;                return;&#10;            }&#10;        }&#10;        // create new conversation&#10;        im.model.Conversation conv = new im.model.Conversation();&#10;        new im.edit.ConversationEdit(conv);&#10;        addConversation(conv);&#10;        for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;            if (getContactList().getContactAt(i).getUserId().equals(r.getSender())) {&#10;                conv.setContact(getContactList().getContactAt(i));&#10;                break;&#10;            }&#10;        }&#10;        if (conv.getContact() == null) {&#10;            conv.setContact(new im.model.Contact());&#10;            conv.getContact().setUserId(r.getSender());&#10;        }&#10;        conv.setMessage(r);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a521'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a527' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a528' language = 'java' body = '        loadSettings();&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a518'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a529' name = 'report' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a530' name = 'e' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a159'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Operation xmi.id = 'a531' name = 'loadSettings' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Method xmi.id = 'a532' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a533' language = 'java' body = '        for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;            im.model.Contact listed = getContactList().getContactAt(i);&#10;            if (listed.getUserId().equals(c.getUserId())) {&#10;                if (c.getStatus() != null) {&#10;                    listed.setStatus(c.getStatus());&#10;                }&#10;                if (c.getName() != null) {&#10;                    listed.setName(c.getName());&#10;                }&#10;                return;&#10;            }&#10;        }&#10;        getContactList().addContact(c);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a523'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a534' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a535' language = 'java' body = '        try {&#10;            // ViewFactory&#10;            setViewFactory(im.view.ViewFactory.getDefault());&#10;            // Network&#10;            im.networking.Network[] networks = im.networking.Network.getDefault();&#10;            for (int i = 0; i &lt; networks.length; i++) {&#10;                addNetwork(networks[i]);&#10;            }&#10;            // Create and register edit/view&#10;            new im.edit.ContactListEdit(contactList);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a531'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a536' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a537' language = 'java' body = '        for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            im.model.Identity id = getContactList().getIdentity(getNetworkAt(i));&#10;            if (id != null) {&#10;                getNetworkAt(i).login(id.getUserId(), id.getPassword());&#10;            }&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a519'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a538' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a539' language = 'java' body = '        for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            if (getContactList().getIdentity(getNetworkAt(i)) != null) {&#10;                getNetworkAt(i).logout();&#10;            }&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a520'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a540' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a541' language = 'java' body = '        for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            if (getNetworkAt(i) instanceof ExceptionReporter) {&#10;                ((ExceptionReporter) getNetworkAt(i)).report(e);&#10;                return;&#10;            }&#10;        }&#10;        System.err.println(e.getMessage());&#10;        e.printStackTrace();&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a529'/>
                  </UML:Method.specification>
                </UML:Method>
              </UML:Classifier.feature>
            </UML:Class>
            <UML:Dependency xmi.id = 'a441' name = 'accessor setContactList()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a440'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a514'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a471' name = 'accessor getNetworkAt()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a470'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a413'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Collaboration xmi.id = 'a542' name = 'ReceiveMessage' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Stimulus xmi.id = 'a543' name = 'createMessageView' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a544'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a545'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a546'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a547'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Object xmi.id = 'a545' name = 'viewFactory' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a548'/>
                  </UML:Instance.linkEnd>
                </UML:Object>
                <UML:CallAction xmi.id = 'a547' name = 'CreateMessageViewAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a549' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a550' language = 'java' body = 'view'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                </UML:CallAction>
                <UML:CallAction xmi.id = 'a551' name = 'OnReceivedChangeAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a552' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a553' language = 'java' body = 'x'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a521'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Stimulus xmi.id = 'a554' name = 'stim_2' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a544'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a555'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a556'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:CallAction xmi.id = 'a556' name = 'Action_2' isSpecification = 'false'
                  isAsynchronous = 'false'/>
                <UML:Message xmi.id = 'a557' name = 'Message_3' isSpecification = 'false'>
                  <UML:Message.predecessor>
                    <UML:Message xmi.idref = 'a558'/>
                  </UML:Message.predecessor>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a543'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:CollaborationInstanceSet xmi.id = 'a559' name = 'Collaboration_Instance_Set_1'
                  isSpecification = 'false'>
                  <UML:CollaborationInstanceSet.interactionInstanceSet>
                    <UML:InteractionInstanceSet xmi.id = 'a560' name = 'Collaboration_Instance_Set_2'
                      isSpecification = 'false'/>
                  </UML:CollaborationInstanceSet.interactionInstanceSet>
                  <UML:CollaborationInstanceSet.collaboration>
                    <UML:Collaboration xmi.idref = 'a542'/>
                  </UML:CollaborationInstanceSet.collaboration>
                  <UML:CollaborationInstanceSet.participatingInstance>
                    <UML:Object xmi.idref = 'a545'/>
                    <UML:Object xmi.idref = 'a555'/>
                    <UML:Object xmi.idref = 'a544'/>
                  </UML:CollaborationInstanceSet.participatingInstance>
                  <UML:CollaborationInstanceSet.participatingLink>
                    <UML:Link xmi.idref = 'a546'/>
                    <UML:Link xmi.idref = 'a561'/>
                  </UML:CollaborationInstanceSet.participatingLink>
                </UML:CollaborationInstanceSet>
                <UML:Stimulus xmi.id = 'a562' name = 'onReceivedChange' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a555'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a544'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a561'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a551'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Object xmi.id = 'a555' name = 'network' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a136'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a563'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a561' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a564' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a544'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a563' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a555'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Object xmi.id = 'a544' name = 'client' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a120'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a565'/>
                    <UML:LinkEnd xmi.idref = 'a564'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a546' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a548' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a545'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a565' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a544'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Message xmi.id = 'a558' name = 'Message_1' isSpecification = 'false'>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a562'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
              </UML:Namespace.ownedElement>
            </UML:Collaboration>
            <UML:Dependency xmi.id = 'a458' name = 'accessor getContactList()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a457'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a514'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Association xmi.id = 'a566' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a567' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a568'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a569' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a120'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a570' name = 'contactList' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a571'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a572' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:ModelElement.taggedValue>
                    <UML:TaggedValue xmi.id = 'a573' isSpecification = 'false'>
                      <UML:TaggedValue.dataValue>new im.model.ContactList()</UML:TaggedValue.dataValue>
                      <UML:TaggedValue.type>
                        <UML:TagDefinition xmi.idref = 'a207'/>
                      </UML:TaggedValue.type>
                    </UML:TaggedValue>
                  </UML:ModelElement.taggedValue>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a418'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Dependency xmi.id = 'a499' name = 'accessor insertConversation()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a498'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a409'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a493' name = 'accessor insertNetwork()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a492'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a413'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a483' name = 'accessor addNetwork()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a482'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a413'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a477' name = 'accessor getConversationAt()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a476'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a409'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a446' name = 'accessor setViewFactory()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a445'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a516'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Collaboration xmi.id = 'a574' name = 'SendMessage' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Object xmi.id = 'a575' name = 'message' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a152'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a576'/>
                    <UML:LinkEnd xmi.idref = 'a577'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a578' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a579' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a580'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a577' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a575'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Stimulus xmi.id = 'a581' name = 'stim_4' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a575'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a582'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:ReturnAction xmi.idref = 'a583'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:ReturnAction xmi.id = 'a583' name = 'Action_4' isSpecification = 'false'
                  isAsynchronous = 'true'/>
                <UML:Stimulus xmi.id = 'a584' name = 'stim_3' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a580'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a575'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:ReturnAction xmi.idref = 'a585'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Object xmi.id = 'a580' name = 'network' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a136'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a579'/>
                  </UML:Instance.linkEnd>
                </UML:Object>
                <UML:CallAction xmi.id = 'a586' name = 'SendAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a587' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a588' language = 'java' body = 'message'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a371'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Message xmi.id = 'a589' name = 'Message_2' isSpecification = 'false'>
                  <UML:Message.predecessor>
                    <UML:Message xmi.idref = 'a590'/>
                  </UML:Message.predecessor>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a591'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:CollaborationInstanceSet xmi.id = 'a592' name = 'Collaboration_Instance_Set_1'
                  isSpecification = 'false'>
                  <UML:CollaborationInstanceSet.interactionInstanceSet>
                    <UML:InteractionInstanceSet xmi.id = 'a593' name = 'Collaboration_Instance_Set_2'
                      isSpecification = 'false'/>
                  </UML:CollaborationInstanceSet.interactionInstanceSet>
                  <UML:CollaborationInstanceSet.collaboration>
                    <UML:Collaboration xmi.idref = 'a574'/>
                  </UML:CollaborationInstanceSet.collaboration>
                  <UML:CollaborationInstanceSet.participatingInstance>
                    <UML:Object xmi.idref = 'a575'/>
                    <UML:Object xmi.idref = 'a582'/>
                    <UML:Object xmi.idref = 'a580'/>
                  </UML:CollaborationInstanceSet.participatingInstance>
                  <UML:CollaborationInstanceSet.participatingLink>
                    <UML:Link xmi.idref = 'a578'/>
                    <UML:Link xmi.idref = 'a594'/>
                  </UML:CollaborationInstanceSet.participatingLink>
                </UML:CollaborationInstanceSet>
                <UML:Stimulus xmi.id = 'a595' name = 'send' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a582'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a575'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a594'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a596'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Message xmi.id = 'a590' name = 'Message_1' isSpecification = 'false'>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a595'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:CallAction xmi.id = 'a596' name = 'SendAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a597'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Stimulus xmi.id = 'a591' name = 'send' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a575'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a580'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a578'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a586'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Object xmi.id = 'a582' name = 'view' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a598'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a594' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a576' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a575'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a598' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a582'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:ReturnAction xmi.id = 'a585' name = 'Action_3' isSpecification = 'false'
                  isAsynchronous = 'true'/>
              </UML:Namespace.ownedElement>
            </UML:Collaboration>
            <UML:Package xmi.id = 'a599' name = 'edit' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Abstraction xmi.id = 'a600' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a601'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a5'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a602' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a603'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a5'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a604' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a605'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a5'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Dependency xmi.id = 'a606' name = 'accessor getContactEditAt()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a607'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a608'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a609' name = 'accessor setModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a610'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a611'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a612' name = 'accessor setView()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a613'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a614'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a615' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a616' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a617'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a618' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a601'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a619' name = 'view' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a620'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a621' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a622'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Association xmi.id = 'a623' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a624' name = 'listEdit' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'aggregate'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a625'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a626' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a603'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a627' name = 'contactEdit' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a628'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a629' lower = '0' upper = '-1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a605'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a601' name = 'ConversationEdit' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Abstraction xmi.idref = 'a600'/>
                    <UML:Abstraction xmi.idref = 'a630'/>
                  </UML:ModelElement.clientDependency>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a432'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a631' name = 'update' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a632' name = 'name' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a633' name = 'value' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a634' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a635' language = 'java' body = '&#10;if (name.equals(&quot;Message&quot;)) {&#10;    onMessageChange((im.model.Message) value);&#10;}&#10;if (name.equals(&quot;Contact&quot;)) {&#10;    onContactChange((im.model.Contact) value);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a631'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a636' name = 'setView' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a637'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a638' name = 'view' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a622'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a639' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a640' language = 'java' body = 'this.view = view;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a636'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a641' name = 'setModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a642'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a643' name = 'model' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a429'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a644' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a645' language = 'java' body = '// Begin subscribe stanza&#10;if (this.model != null) this.model.deleteObserver(this);&#10;// Begin original body&#10;this.model = model;&#10;// End original body&#10;if (model != null) model.addObserver(this);&#10;// End subscribe stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a641'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a646' name = 'getView' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a647'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a648' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a622'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a649' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a650' language = 'java' body = 'return view;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a646'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a651' name = 'getModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a652'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a653' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a429'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a654' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a655' language = 'java' body = 'return model;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a651'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a656' name = 'view' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a657' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Interface xmi.idref = 'a622'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a658' name = 'model' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a659' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a429'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a660' name = 'ConversationEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a148'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a661' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a429'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a662' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a601'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a663' name = 'onMessageChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a664' name = 'm' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a152'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a665' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a666' language = 'java' body = '        if (m.getContent() instanceof String) {&#10;            im.model.ContactList list =&#10;                im.InstantMessagingClient.getInstance().getContactList();&#10;            getView().addContent(list.getUserName(m.getSender())&#10;                + &quot;: &quot; + m.getContent());&#10;        } else {&#10;            getView().addContent(m.getContent());&#10;        }&#10;        getView().toFront();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a663'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a667' name = 'onContactChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a668' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a669' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a670' language = 'java' body = '        if (c.getName() != null) {&#10;            getView().setTitle(c.getName());&#10;        } else if (c.getUserId() != null) {&#10;            getView().setTitle(c.getUserId());&#10;        }&#10;        getView().toFront();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a667'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a671' name = 'onConversationClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a672' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a673' language = 'java' body = '        im.InstantMessagingClient.getInstance().removeConversation(getModel());&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a671'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a674' name = 'onConversationSend' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Operation xmi.id = 'a675' name = 'getSender' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a676' name = 'recipient' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a677' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a678' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a679' language = 'java' body = '        try {&#10;            im.model.Contact recipient = getModel().getContact();&#10;            if (recipient == null) {&#10;                throw new NullPointerException(&#10;                &quot;No recipient available in ConversationEdit.onConversationSend()&quot;);&#10;            }&#10;            im.model.Contact sender = getSender(recipient);&#10;            if (sender == null) {&#10;                throw new NullPointerException(&#10;                &quot;No sender available in ConversationEdit.onConversationSend()&quot;);&#10;            }&#10;            im.model.Message msg = new im.model.Message();&#10;            msg.setNetwork(recipient.getNetwork());&#10;            msg.setSender(sender.getUserId());&#10;            msg.setRecipient(recipient.getUserId());&#10;            msg.setContent(getView().getContent());&#10;            msg.send();&#10;            getModel().setMessage(msg);&#10;        } catch (Exception e) {&#10;            im.InstantMessagingClient.getInstance().report(e);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a674'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a680' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a681' language = 'java' body = '        setModel(c);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        setView(client.getViewFactory().createConversationView());&#10;        getView().addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a660'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a682' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a683' language = 'java' body = '        im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();&#10;        return c.getContactList().getIdentity(recipient.getNetwork());&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a675'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a637' name = 'accessor setView()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a636'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a656'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a605' name = 'ContactEdit' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Abstraction xmi.idref = 'a604'/>
                  </UML:ModelElement.clientDependency>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a432'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a684' name = 'update' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a685' name = 'name' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a686' name = 'value' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a687' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a688' language = 'java' body = '&#10;if (name.equals(&quot;Status&quot;)) {&#10;    onStatusChange((String) value);&#10;}&#10;if (name.equals(&quot;Name&quot;)) {&#10;    onNameChange((String) value);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a684'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a610' name = 'setModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a609'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a689' name = 'model' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a690' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a691' language = 'java' body = '// Begin subscribe stanza&#10;if (this.model != null) this.model.deleteObserver(this);&#10;// Begin original body&#10;this.model = model;&#10;// End original body&#10;if (model != null) model.addObserver(this);&#10;// End subscribe stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a610'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a692' name = 'setListEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a693'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a694' name = 'listEdit' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a603'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a695' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a696' language = 'java' body = 'if (this.listEdit != listEdit) {&#10;    if (this.listEdit != null) this.listEdit.removeContactEdit(this);&#10;    this.listEdit = listEdit;&#10;    if (listEdit != null) listEdit.addContactEdit(this);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a692'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a697' name = 'getModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a698'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a699' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a700' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a701' language = 'java' body = 'return model;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a697'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a702' name = 'getListEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a703'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a704' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a603'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a705' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a706' language = 'java' body = 'return listEdit;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a702'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a707' name = 'listEdit' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a708' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a603'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a611' name = 'model' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a709' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a222'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a710' name = 'ContactEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a148'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a711' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a712' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a605'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a713' name = 'onStatusChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a714' name = 's' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a715' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a716' language = 'java' body = '        onChange();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a713'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a717' name = 'onNameChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a718' name = 'n' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a719' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a720' language = 'java' body = '        onChange();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a717'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a721' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a722' language = 'java' body = '        setModel(c);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a710'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a723' name = 'onChange' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a724' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a725' language = 'java' body = '        &#9;int index = getListEdit().getContactEdits().indexOf(this);&#10;            if (index &gt; -1) {&#10;                getListEdit().getView().removeContact(index);&#10;                getListEdit().getView().addContact(formatContact(), index);&#10;            }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a723'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a726' name = 'formatContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a727' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a728' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a729' language = 'java' body = '        String name = getModel().getName();&#10;        String status = getModel().getStatus();&#10;        if (getModel() instanceof im.model.Identity) {&#10;            name = &quot;* &quot; + name;&#10;        } else {&#10;            name = &quot;  &quot; + name;&#10;        }&#10;        if (getModel().getNetwork() != null) {&#10;            name += &quot; - &quot; + getModel().getNetwork().getName();&#10;        }&#10;        if (status == null) {&#10;            status = &quot;offline&quot;;&#10;        }&#10;        name += &quot; (&quot; + status + &quot;)&quot;;&#10;        return name;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a726'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a730' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a731'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a732' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a733'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a734' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a603'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a735' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a736'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a737' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a418'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a738' name = 'accessor setModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a739'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a740'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a693' name = 'accessor setListEdit()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a692'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a707'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a741' name = 'accessor getModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a742'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a740'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a743' name = 'accessor addContactEdit()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a744'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a608'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a703' name = 'accessor getListEdit()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a702'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a707'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a652' name = 'accessor getModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a651'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a658'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a698' name = 'accessor getModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a697'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a611'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a603' name = 'ContactListEdit' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Abstraction xmi.idref = 'a602'/>
                    <UML:Abstraction xmi.idref = 'a745'/>
                    <UML:Abstraction xmi.idref = 'a746'/>
                  </UML:ModelElement.clientDependency>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a432'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a747' name = 'update' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a748' name = 'name' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a749' name = 'value' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a750' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a751' language = 'java' body = '&#10;if (name.equals(&quot;Contact&quot;)) {&#10;    onContactChange((im.model.Contact) value);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a747'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a739' name = 'setModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a738'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a752' name = 'model' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a418'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a753' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a754' language = 'java' body = '// Begin subscribe stanza&#10;if (this.model != null) this.model.deleteObserver(this);&#10;// Begin original body&#10;this.model = model;&#10;// End original body&#10;if (model != null) model.addObserver(this);&#10;// End subscribe stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a739'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a613' name = 'setView' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a612'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a755' name = 'view' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a756'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a757' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a758' language = 'java' body = 'this.view = view;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a613'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a742' name = 'getModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a741'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a759' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a418'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a760' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a761' language = 'java' body = 'return model;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a742'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a762' name = 'getContactEdits' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a763'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a764' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a454'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a765' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a766' language = 'java' body = 'return contactEdit;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a762'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a767' name = 'getView' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a768'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a769' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a756'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a770' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a771' language = 'java' body = 'return view;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a767'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a607' name = 'getContactEditAt' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a606'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a772' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a195'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a773' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a605'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a774' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a775' language = 'java' body = 'try {&#10;    return (im.edit.ContactEdit) contactEdit.elementAt(index);&#10;} catch (ArrayIndexOutOfBoundsException e) {&#10;    return null;&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a607'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a744' name = 'addContactEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a743'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a776' name = 'contactEdit' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a605'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a777' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a778' language = 'java' body = 'if (! this.contactEdit.contains(contactEdit)) {&#10;    this.contactEdit.addElement(contactEdit);&#10;    contactEdit.setListEdit(this);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a744'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a779' name = 'insertContactEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a780'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a781' name = 'contactEdit' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a605'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a782' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a195'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a783' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a784' language = 'java' body = 'if (! this.contactEdit.contains(contactEdit)) {&#10;    try {&#10;    this.contactEdit.insertElementAt(contactEdit, index);} catch (ArrayIndexOutOfBoundsException e) {&#10;    this.contactEdit.addElement(contactEdit);&#10;};&#10;    contactEdit.setListEdit(this);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a779'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a785' name = 'removeContactEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a786'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a787' name = 'contactEdit' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a605'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a788' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a789' language = 'java' body = 'if (this.contactEdit.contains(contactEdit)) {&#10;    this.contactEdit.removeElement(contactEdit);&#10;    contactEdit.setListEdit(null);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a785'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a740' name = 'model' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a790' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a418'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a614' name = 'view' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a791' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Interface xmi.idref = 'a756'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a608' name = 'contactEdit' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a792' language = 'java' body = 'new java.util.Vector()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a454'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a793' name = 'ContactListEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a148'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a794' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a603'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a795' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a418'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a796' name = 'onContactChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a797' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a798' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a799' language = 'java' body = '        int index = getModel().getContacts().indexOf(c);&#10;        if (index &gt; -1) {&#10;            ContactEdit edit = new ContactEdit(c);&#10;            insertContactEdit(edit, index);&#10;            getView().addContact(edit.formatContact(), index);&#10;        } else {&#10;            index = getContactEditIndex(c);&#10;            getView().removeContact(index);&#10;            removeContactEdit(getContactEditAt(index));&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a796'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a800' name = 'onContactListAdd' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a801' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a802' language = 'java' body = '        getView().setEnabled(false);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        im.view.NewContactDialog dlg =&#10;            client.getViewFactory().createNewContactDialog();&#10;        for (int i = 0; i &lt; client.getNetworks().size(); i++) {&#10;            dlg.addNetwork(client.getNetworkAt(i).getName());&#10;        }&#10;        dlg.addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a800'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a803' name = 'onContactListRemove' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a804' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a805' language = 'java' body = '        int index = getView().getSelectedContact();&#10;        if (index &gt; -1) {&#10;            im.model.Contact c = getModel().getContactAt(index);&#10;            if (c instanceof im.model.Identity) {&#10;                im.model.Identity id = (im.model.Identity) c;&#10;                id.getNetwork().logout();&#10;            } else {&#10;                c.getNetwork().removeContact(c);&#10;            }&#10;            getModel().removeContact(c);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a803'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a806' name = 'onContactListAction' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a807' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a808' language = 'java' body = '        int index = getView().getSelectedContact();&#10;        if (index &gt; -1) {&#10;            im.model.Contact c = getModel().getContactAt(index);&#10;            im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;            // reuse existing conversation, if any&#10;            for (int i = 0; i &lt; client.getConversations().size(); i++) {&#10;                im.model.Contact contact = client.getConversationAt(i).getContact();&#10;                if (contact.equals(c)) {&#10;                    client.getConversationAt(i).setContact(new im.model.Contact());&#10;                    client.getConversationAt(i).setContact(c);&#10;                    return;&#10;                }&#10;            }&#10;            // else new conversation&#10;            im.model.Conversation conv = new im.model.Conversation();&#10;            new ConversationEdit(conv);&#10;            client.addConversation(conv);&#10;            conv.setContact(c);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a806'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a809' name = 'onNewContactDialogClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a810' name = 'okClicked' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a306'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a811' name = 'dlg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a812'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a813' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a814' language = 'java' body = '        if (okClicked) {&#10;            im.model.Contact c;&#10;            im.networking.Network n =&#10;                im.InstantMessagingClient.getInstance().getNetworkAt(dlg.getNetwork());&#10;            if (getModel().getIdentity(n) == null) {&#10;                im.model.Identity id = new im.model.Identity();&#10;                id.setNetwork(n);&#10;                id.setUserId(dlg.getUid());&#10;                id.setName(dlg.getName());&#10;                id.setPassword(dlg.getPassword());&#10;                c = id;&#10;                getModel().addContact(c);&#10;                id.getNetwork().login(id.getUserId(), id.getPassword());&#10;            } else {&#10;                c = new im.model.Contact();&#10;                c.setNetwork(n);&#10;                c.setUserId(dlg.getUid());&#10;                c.setName(dlg.getName());&#10;                getModel().addContact(c);&#10;                c.getNetwork().addContact(c);&#10;            }&#10;        }&#10;        getView().setEnabled(true);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a809'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a815' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a816' language = 'java' body = '        setModel(c);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        setView(client.getViewFactory().createContactListView());&#10;        getView().addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a793'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a817' name = 'getContactEditIndex' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a818' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a819' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a195'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a820' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a821' language = 'java' body = '        for (int i = 0; i &lt; getContactEdits().size(); i++) {&#10;            if (getContactEditAt(i).getModel() == contact)&#10;                return i;&#10;        }&#10;        return -1;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a817'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a786' name = 'accessor removeContactEdit()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a785'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a608'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a647' name = 'accessor getView()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a646'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a656'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a780' name = 'accessor insertContactEdit()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a779'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a608'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a642' name = 'accessor setModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a641'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a658'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a768' name = 'accessor getView()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a767'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a614'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a822' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a823' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a824'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a825' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a603'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a826' name = 'view' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a827'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a828' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a756'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a763' name = 'accessor getContactEdits()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a762'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a608'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Association xmi.id = 'a829' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a830' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a831'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a832' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a120'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a833' name = 'viewFactory' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a834'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a835' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a448'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Dependency xmi.id = 'a431' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a113'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a120'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Interface xmi.idref = 'a397'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Interface xmi.id = 'a397' name = 'ExceptionReporter' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Classifier.feature>
                <UML:Operation xmi.id = 'a836' name = 'report' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'true'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a837' name = 'e' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a159'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a838' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a839' language = 'java' body = ''/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a836'/>
                  </UML:Method.specification>
                </UML:Method>
              </UML:Classifier.feature>
            </UML:Interface>
            <UML:Package xmi.id = 'a840' name = 'model' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Dependency xmi.id = 'a841' name = 'accessor getRecipient()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a842'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a843'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a152' name = 'Message' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a844'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a845' name = 'setRecipient' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a846'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a847' name = 'recipient' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a848' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a849' language = 'java' body = '// Begin Observable stanza&#10;if (this.recipient != recipient) {&#10;    // Begin original body&#10;this.recipient = recipient;&#10;    // End original body&#10;    notifyObservers(&quot;Recipient&quot;, recipient);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a845'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a850' name = 'setSender' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a851'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a852' name = 'sender' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a853' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a854' language = 'java' body = '// Begin Observable stanza&#10;if (this.sender != sender) {&#10;    // Begin original body&#10;this.sender = sender;&#10;    // End original body&#10;    notifyObservers(&quot;Sender&quot;, sender);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a850'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a855' name = 'setConversation' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a856'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a857' name = 'conversation' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a429'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a858' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a859' language = 'java' body = '// Begin Observable stanza&#10;if (this.conversation != conversation) {&#10;    // Begin original body&#10;if (this.conversation != conversation) {&#10;    this.conversation = conversation;&#10;    conversation.setMessage(this);&#10;}&#10;    // End original body&#10;    notifyObservers(&quot;Conversation&quot;, conversation);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a855'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a860' name = 'setContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a861'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a862' name = 'content' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a863' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a864' language = 'java' body = '// Begin Observable stanza&#10;if (this.content != content) {&#10;    // Begin original body&#10;this.content = content;&#10;    // End original body&#10;    notifyObservers(&quot;Content&quot;, content);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a860'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a842' name = 'getRecipient' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a841'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a865' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a866' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a867' language = 'java' body = 'return recipient;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a842'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a868' name = 'getSender' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a869'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a870' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a871' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a872' language = 'java' body = 'return sender;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a868'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a873' name = 'getConversation' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a874'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a875' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a429'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a876' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a877' language = 'java' body = 'return conversation;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a873'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a878' name = 'getContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a879'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a880' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a881' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a882' language = 'java' body = 'return content;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a878'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a883' name = 'conversation' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a884' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a429'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a885' name = 'sender' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a8'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a843' name = 'recipient' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a8'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a597' name = 'send' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a886' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a887' language = 'java' body = '        if (getNetwork() != null) {&#10;            getNetwork().send(this);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a597'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a888' name = 'content' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a10'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a889' name = 'accessor setContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a890'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a891'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a892' name = 'accessor setName()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a893'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a894'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a851' name = 'accessor setSender()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a850'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a885'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a895' name = 'accessor getNetwork()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a896'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a897'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a898' name = 'accessor setUserId()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a899'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a900'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a901' name = 'accessor getStatus()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a902'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a903'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a904' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a905' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a906'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a907' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a429'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a908' name = 'contact' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a909'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a910' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a222'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a911' name = 'accessor setPassword()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a912'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a913'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a861' name = 'accessor setContent()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a860'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a888'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a914' name = 'accessor getName()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a915'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a894'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a916' name = 'accessor insertContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a917'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a918'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a874' name = 'accessor getConversation()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a873'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a883'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a919' name = 'accessor getPassword()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a920'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a913'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Generalization xmi.id = 'a844' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a152'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a921'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Association xmi.id = 'a922' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a923' name = 'conversation' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'composite'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a924'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a925' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a429'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a926' name = 'message' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a927'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a928' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a152'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a879' name = 'accessor getContent()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a878'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a888'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a929' name = 'accessor getContactAt()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a930'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a918'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a931' name = 'accessor addContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a932'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a918'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Generalization xmi.id = 'a933' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a222'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a921'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a934' name = 'Identity' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a935'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a912' name = 'setPassword' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a911'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a936' name = 'password' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a937' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a938' language = 'java' body = '// Begin Observable stanza&#10;if (this.password != password) {&#10;    // Begin original body&#10;this.password = password;&#10;    // End original body&#10;    notifyObservers(&quot;Password&quot;, password);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a912'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a920' name = 'getPassword' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a919'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a939' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a940' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a941' language = 'java' body = 'return password;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a920'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a913' name = 'password' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a8'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a942' name = 'accessor getContacts()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a943'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a918'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a921' name = 'NetworkSpecificData' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'true'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a53'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a944' name = 'observers' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a945' language = 'java' body = 'new java.util.Vector()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a946' name = 'addObserver' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a947' name = 'observer' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a5'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a948' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a949' language = 'java' body = 'observers.addElement(observer);'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a946'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a950' name = 'deleteObserver' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a951' name = 'observer' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a5'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a952' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a953' language = 'java' body = 'observers.removeElement(observer);'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a950'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a954' name = 'notifyObservers' visibility = 'protected'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a955' name = 'name' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a956' name = 'value' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a957' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a958' language = 'java' body = 'for (int i = 0; i &lt; observers.size(); i++) {&#10;    ((observer.Observer) observers.elementAt(i)).update(name, value);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a954'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a959' name = 'setNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a960'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a961' name = 'network' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a136'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a962' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a963' language = 'java' body = '// Begin Observable stanza&#10;if (this.network != network) {&#10;    // Begin original body&#10;this.network = network;&#10;    // End original body&#10;    notifyObservers(&quot;Network&quot;, network);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a959'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a896' name = 'getNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a895'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a964' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a136'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a965' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a966' language = 'java' body = 'return network;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a896'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a897' name = 'network' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a967' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a136'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a968' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a731'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a969' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a970'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a971' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a222'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a972' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a973'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a974' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a605'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a975' name = 'accessor getContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a976'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a891'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a977' name = 'accessor removeContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a978'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a918'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a979' name = 'accessor getUserId()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a980'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a900'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a429' name = 'Conversation' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a53'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a981' name = 'observers' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a982' language = 'java' body = 'new java.util.Vector()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a983' name = 'addObserver' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a984' name = 'observer' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a5'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a985' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a986' language = 'java' body = 'observers.addElement(observer);'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a983'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a987' name = 'deleteObserver' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a988' name = 'observer' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a5'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a989' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a990' language = 'java' body = 'observers.removeElement(observer);'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a987'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a991' name = 'notifyObservers' visibility = 'protected'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a992' name = 'name' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a993' name = 'value' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a994' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a995' language = 'java' body = 'for (int i = 0; i &lt; observers.size(); i++) {&#10;    ((observer.Observer) observers.elementAt(i)).update(name, value);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a991'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a890' name = 'setContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a889'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a996' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a997' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a998' language = 'java' body = '// Begin Observable stanza&#10;if (this.contact != contact) {&#10;    // Begin original body&#10;this.contact = contact;&#10;    // End original body&#10;    notifyObservers(&quot;Contact&quot;, contact);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a890'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a999' name = 'setMessage' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a1000'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1001' name = 'message' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a152'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1002' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1003' language = 'java' body = '// Begin Observable stanza&#10;if (this.message != message) {&#10;    // Begin original body&#10;if (this.message != message) {&#10;    this.message = message;&#10;    message.setConversation(this);&#10;}&#10;    // End original body&#10;    notifyObservers(&quot;Message&quot;, message);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a999'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a976' name = 'getContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a975'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1004' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1005' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1006' language = 'java' body = 'return contact;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a976'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1007' name = 'getMessage' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a1008'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1009' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a152'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1010' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1011' language = 'java' body = 'return message;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1007'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a1012' name = 'message' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a1013' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a152'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a891' name = 'contact' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a1014' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a222'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a1008' name = 'accessor getMessage()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a1007'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a1012'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a418' name = 'ContactList' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a53'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a1015' name = 'observers' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a1016' language = 'java' body = 'new java.util.Vector()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a1017' name = 'addObserver' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1018' name = 'observer' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a5'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1019' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1020' language = 'java' body = 'observers.addElement(observer);'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1017'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1021' name = 'deleteObserver' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1022' name = 'observer' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a5'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1023' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1024' language = 'java' body = 'observers.removeElement(observer);'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1021'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1025' name = 'notifyObservers' visibility = 'protected'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1026' name = 'name' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a1027' name = 'value' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1028' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1029' language = 'java' body = 'for (int i = 0; i &lt; observers.size(); i++) {&#10;    ((observer.Observer) observers.elementAt(i)).update(name, value);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1025'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a943' name = 'getContacts' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a942'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1030' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a454'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1031' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1032' language = 'java' body = 'return contact;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a943'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a930' name = 'getContactAt' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a929'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1033' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a195'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a1034' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1035' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1036' language = 'java' body = 'try {&#10;    return (im.model.Contact) contact.elementAt(index);&#10;} catch (ArrayIndexOutOfBoundsException e) {&#10;    return null;&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a930'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a932' name = 'addContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a931'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1037' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1038' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1039' language = 'java' body = '// Begin Observable stanza&#10;if (! this.contact.contains(contact)) {&#10;    // Begin original body&#10;if (! this.contact.contains(contact)) {&#10;    this.contact.addElement(contact);&#10;    contact.setList(this);&#10;}&#10;    // End original body&#10;    notifyObservers(&quot;Contact&quot;, contact);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a932'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a917' name = 'insertContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a916'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1040' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a1041' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a195'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1042' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1043' language = 'java' body = '// Begin Observable stanza&#10;if (! this.contact.contains(contact)) {&#10;    // Begin original body&#10;if (! this.contact.contains(contact)) {&#10;    try {&#10;    this.contact.insertElementAt(contact, index);} catch (ArrayIndexOutOfBoundsException e) {&#10;    this.contact.addElement(contact);&#10;};&#10;    contact.setList(this);&#10;}&#10;    // End original body&#10;    notifyObservers(&quot;Contact&quot;, contact);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a917'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a978' name = 'removeContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a977'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1044' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a222'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1045' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1046' language = 'java' body = '// Begin Observable stanza&#10;if (this.contact.contains(contact)) {&#10;    // Begin original body&#10;if (this.contact.contains(contact)) {&#10;    this.contact.removeElement(contact);&#10;    contact.setList(null);&#10;}&#10;    // End original body&#10;    notifyObservers(&quot;Contact&quot;, contact);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a978'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a918' name = 'contact' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a1047' language = 'java' body = 'new java.util.Vector()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a454'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a1048' name = 'getIdentity' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1049' name = 'forNw' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a136'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a1050' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a934'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1051' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1052' language = 'java' body = '        for (int i = 0; i &lt; getContacts().size(); i ++) {&#10;            Contact contact = getContactAt(i);&#10;            if ((contact instanceof Identity) &amp;&amp; (contact.getNetwork() == forNw))&#10;                return (Identity) contact;&#10;        }&#10;        return null;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1048'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1053' name = 'getUserName' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1054' name = 'userId' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a1055' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1056' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1057' language = 'java' body = '        for (int i = 0; i &lt; getContacts().size(); i ++) {&#10;            if (getContactAt(i).getUserId().equals(userId))&#10;                return getContactAt(i).getName();&#10;        }&#10;        return userId;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1053'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a1058' name = 'accessor getList()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a1059'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a1060'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Generalization xmi.id = 'a935' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a934'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a222'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Dependency xmi.id = 'a1061' name = 'accessor setList()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a1062'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a1060'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a1063' name = 'BelongsToNetwork' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a1064' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a1065'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a1066' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a921'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a1067' name = 'network' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a1068'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a1069' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a136'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a846' name = 'accessor setRecipient()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a845'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a843'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a1000' name = 'accessor setMessage()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a999'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a1012'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a1070' name = 'accessor setStatus()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a1071'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a903'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a1072' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a731'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a1073' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a1074'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a1075' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a429'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a1076' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a1077'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a1078' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a601'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a960' name = 'accessor setNetwork()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a959'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a897'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a869' name = 'accessor getSender()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a868'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a885'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a222' name = 'Contact' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a933'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a899' name = 'setUserId' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a898'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1079' name = 'userId' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1080' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1081' language = 'java' body = '// Begin Observable stanza&#10;if (this.userId != userId) {&#10;    // Begin original body&#10;this.userId = userId;&#10;    // End original body&#10;    notifyObservers(&quot;UserId&quot;, userId);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a899'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1071' name = 'setStatus' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a1070'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1082' name = 'status' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1083' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1084' language = 'java' body = '// Begin Observable stanza&#10;if (this.status != status) {&#10;    // Begin original body&#10;this.status = status;&#10;    // End original body&#10;    notifyObservers(&quot;Status&quot;, status);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1071'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a893' name = 'setName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a892'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1085' name = 'name' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1086' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1087' language = 'java' body = '// Begin Observable stanza&#10;if (this.name != name) {&#10;    // Begin original body&#10;this.name = name;&#10;    // End original body&#10;    notifyObservers(&quot;Name&quot;, name);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a893'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1062' name = 'setList' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a1061'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1088' name = 'list' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a418'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1089' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1090' language = 'java' body = '// Begin Observable stanza&#10;if (this.list != list) {&#10;    // Begin original body&#10;if (this.list != list) {&#10;    if (this.list != null) this.list.removeContact(this);&#10;    this.list = list;&#10;    if (list != null) list.addContact(this);&#10;}&#10;    // End original body&#10;    notifyObservers(&quot;List&quot;, list);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1062'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a980' name = 'getUserId' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a979'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1091' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1092' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1093' language = 'java' body = 'return userId;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a980'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a902' name = 'getStatus' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a901'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1094' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1095' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1096' language = 'java' body = 'return status;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a902'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a915' name = 'getName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a914'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1097' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1098' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1099' language = 'java' body = 'return name;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a915'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1059' name = 'getList' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a1058'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1100' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a418'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1101' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1102' language = 'java' body = 'return list;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1059'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a1060' name = 'list' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a1103' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a418'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a900' name = 'userId' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a8'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a894' name = 'name' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a8'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a903' name = 'status' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a8'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a856' name = 'accessor setConversation()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a125'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a855'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a883'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a463' name = 'accessor getViewFactory()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a462'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a516'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Abstraction xmi.id = 'a430' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a119'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a120'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Interface xmi.idref = 'a397'/>
              </UML:Dependency.supplier>
            </UML:Abstraction>
            <UML:Dependency xmi.id = 'a508' name = 'accessor removeConversation()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a507'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a409'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a1104' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a84'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a122'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a488' name = 'accessor addConversation()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a487'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a409'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a452' name = 'accessor getNetworks()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a125'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a451'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a413'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a122' name = 'view' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Interface xmi.id = 'a756' name = 'ContactListView' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1105' name = 'addContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1106' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a1107' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a195'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1108' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1109' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1105'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1110' name = 'removeContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1111' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a195'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1112' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1113' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1110'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1114' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1115' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a1116'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1117' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1118' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1114'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1119' name = 'getSelectedContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1120' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a195'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1121' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1122' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1119'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1123' name = 'setEnabled' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1124' name = 'enabled' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a306'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1125' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1126' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1123'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Interface xmi.id = 'a1116' name = 'ContactListViewListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1127' name = 'onContactListAdd' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1128' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1129' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1127'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1130' name = 'onContactListRemove' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1131' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1132' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1130'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1133' name = 'onContactListAction' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1134' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1135' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1133'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Interface xmi.id = 'a812' name = 'NewContactDialog' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1136' name = 'getUid' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1137' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1138' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1139' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1136'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1140' name = 'getName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1141' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1142' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1143' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1140'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1144' name = 'getNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1145' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a195'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1146' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1147' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1144'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1148' name = 'getPassword' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1149' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a1150' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1151' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a1152'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1153' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1154' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1150'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a1155' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1156' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1148'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1157' name = 'addNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1158' name = 'n' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1159' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1160' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1157'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a630' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a601'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a1161'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a1152' name = 'NewContactDialogListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1162' name = 'onNewContactDialogClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1163' name = 'okClicked' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a306'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a1164' name = 'dlg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a812'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1165' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1166' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1162'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Package xmi.id = 'a1167' name = 'lcdui' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a89' name = 'LCDUIConversationView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a1168'/>
                        <UML:Dependency xmi.idref = 'a1169'/>
                        <UML:Dependency xmi.idref = 'a88'/>
                        <UML:Dependency xmi.idref = 'a410'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a1170'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a1171' name = 'messageField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1172' language = 'java' body = 'new TextField(&quot;&quot;, &quot;&quot;, 256, TextField.ANY)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1173'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1174' name = 'sendBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1175' language = 'java' body = 'new Command(&quot;Send&quot;, Command.SCREEN, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1176'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1177' name = 'closeBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1178' language = 'java' body = 'new Command(&quot;Close&quot;, Command.BACK, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1176'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1179' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1180' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a85'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1181' name = 'LCDUIConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a148'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1182' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a89'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1183' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1184' language = 'java' body = '        super(&quot;Message&quot;);&#10;        append(messageField);&#10;        addCommand(sendBtn);&#10;        addCommand(closeBtn);&#10;        setCommandListener(new CommandListener() {&#10;            public void commandAction(Command c, Displayable d) {&#10;                if (c.equals(sendBtn)) {&#10;                    notifySendClicked();&#10;                } else {&#10;                    notifyClose();&#10;                }&#10;            }&#10;        });&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        previousScreen = Display.getDisplay(client).getCurrent();&#10;        Display.getDisplay(client).setCurrent(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1181'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1185' name = 'getContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1186' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a10'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1187' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1188' language = 'java' body = '        return messageField.getString();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1185'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1189' name = 'addContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1190' name = 'content' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a10'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1191' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1192' language = 'java' body = '        if (content instanceof String) {&#10;            append(content.toString() + &quot;\n&quot;);&#10;        } else if (content instanceof Image) {&#10;            Image im = (Image) content;&#10;            append(im);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1189'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1193' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1194' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a1161'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1195' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1196' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1193'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1197' name = 'notifyClose' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1198' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1199' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationClose();&#10;        }&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        Display.getDisplay(client).setCurrent(previousScreen);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1197'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a1200' name = 'previousScreen' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1201'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1202' name = 'notifySendClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1203' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1204' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationSend();&#10;        }&#10;        messageField.setString(&quot;&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1202'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1205' name = 'toFront' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1206' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1207' language = 'java' body = '        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        Display.getDisplay(client).setCurrent(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1205'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a87' name = 'LCDUINewContactDialog' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a1208'/>
                        <UML:Dependency xmi.idref = 'a86'/>
                        <UML:Dependency xmi.idref = 'a121'/>
                        <UML:Dependency xmi.idref = 'a1209'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a1210'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a1211' name = 'okBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1212' language = 'java' body = 'new Command(&quot;OK&quot;, Command.OK, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1176'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1213' name = 'cancelBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1214' language = 'java' body = 'new Command(&quot;Cancel&quot;, Command.CANCEL, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1176'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1215' name = 'uidField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1216' language = 'java' body = 'new TextField(&quot;User ID&quot;, &quot;&quot;, 64, TextField.ANY)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1173'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1217' name = 'nameField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1218' language = 'java' body = 'new TextField(&quot;Name&quot;, &quot;&quot;, 64, TextField.ANY)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1173'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1219' name = 'networkField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1220' language = 'java' body = 'new ChoiceGroup(&quot;Network&quot;, Choice.EXCLUSIVE)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1221'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1222' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1223' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a85'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1224' name = 'LCDUINewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a148'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1225' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a87'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1226' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1227' language = 'java' body = '        super(&quot;Add new contact&quot;);&#10;        append(networkField);&#10;        append(uidField);&#10;        append(nameField);&#10;        append(passwordField);&#10;        addCommand(okBtn);&#10;        addCommand(cancelBtn);&#10;        setCommandListener(new CommandListener() {&#10;            public void commandAction(Command c, Displayable d) {&#10;                if (c.equals(okBtn)) {&#10;                    onOk();&#10;                } else {&#10;                    onCancel();&#10;                }&#10;            }&#10;        });&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        Display.getDisplay(client).setCurrent(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1224'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1228' name = 'getUid' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1229' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1230' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1231' language = 'java' body = '        return uidField.getString();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1228'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1232' name = 'getName' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1233' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1234' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1235' language = 'java' body = '        return nameField.getString();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1232'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1236' name = 'getNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1237' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a195'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1238' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1239' language = 'java' body = '        return networkField.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1236'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1240' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1241' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a1152'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1242' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1243' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1240'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1244' name = 'onOk' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1245' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1246' language = 'java' body = '        notifyListeners(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1244'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1247' name = 'onCancel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1248' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1249' language = 'java' body = '        notifyListeners(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1247'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1250' name = 'notifyListeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1251' name = 'okClicked' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a306'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1252' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1253' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((NewContactDialogListener) listeners.elementAt(i)).onNewContactDialogClose(okClicked, this);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1250'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a1254' name = 'passwordField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1255' language = 'java' body = 'new TextField(&quot;Password&quot;, &quot;&quot;, 64, TextField.PASSWORD)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1173'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1256' name = 'getPassword' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1257' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1258' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1259' language = 'java' body = '        return passwordField.getString();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1256'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1260' name = 'addNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1261' name = 'n' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1262' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1263' language = 'java' body = '        networkField.append(n, null);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1260'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a84' name = 'LCDUIContactListView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a1264'/>
                        <UML:Dependency xmi.idref = 'a83'/>
                        <UML:Dependency xmi.idref = 'a1104'/>
                        <UML:Dependency xmi.idref = 'a1265'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a1266'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a1267' name = 'addContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1268' language = 'java' body = 'new Command(&quot;Add&quot;, Command.SCREEN, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1176'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1269' name = 'removeContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1270' language = 'java' body = 'new Command(&quot;Remove&quot;, Command.ITEM, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1176'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1271' name = 'contactActionBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1272' language = 'java' body = 'new Command(&quot;Message&quot;, Command.ITEM, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1176'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1273' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1274' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a85'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1275' name = 'LCDUIContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a148'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1276' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a84'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1277' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1278' language = 'java' body = '        super(&quot;Instant Messenger&quot;, Choice.IMPLICIT);&#10;        addCommand(addContactBtn);&#10;        addCommand(contactActionBtn);&#10;        addCommand(removeContactBtn);&#10;        addCommand(exitBtn);&#10;        setCommandListener(new CommandListener() {&#10;            public void commandAction(Command c, Displayable d) {&#10;                if (c.equals(addContactBtn)) {&#10;                    notifyAddClicked();&#10;                } else if (c.equals(removeContactBtn)) {&#10;                    notifyRemoveClicked();&#10;                } else if (c.equals(contactActionBtn)) {&#10;                    notifyContactAction();&#10;                } else {&#10;                    im.InstantMessagingClient.getInstance().notifyDestroyed();&#10;                }&#10;            }&#10;        });&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        Display.getDisplay(client).setCurrent(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1275'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1279' name = 'addContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1280' name = 'contact' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a8'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a1281' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a195'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1282' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1283' language = 'java' body = '        insert(index, contact, null);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1279'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1284' name = 'removeContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1285' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a195'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1286' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1287' language = 'java' body = '        delete(index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1284'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1288' name = 'getSelectedContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1289' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a195'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1290' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1291' language = 'java' body = '        return getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1288'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1292' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1293' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a1116'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1294' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1295' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1292'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1296' name = 'notifyAddClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1297' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1298' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAdd();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1296'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1299' name = 'notifyRemoveClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1300' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1301' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListRemove();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1299'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1302' name = 'notifyContactAction' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1303' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1304' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAction();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1302'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1305' name = 'setEnabled' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1306' name = 'enabled' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a306'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1307' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1308' language = 'java' body = '        if (enabled) {&#10;            im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;            Display.getDisplay(client).setCurrent(this);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1305'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a1309' name = 'exitBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1310' language = 'java' body = 'new Command(&quot;Exit&quot;, Command.EXIT, 1)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1176'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a1311' name = 'LCDUIViewFactory' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a1312'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a1313' name = 'createContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1314' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a756'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1315' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1316' language = 'java' body = '        return new LCDUIContactListView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1313'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1317' name = 'createNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1318' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a812'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1319' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1320' language = 'java' body = '        return new LCDUINewContactDialog();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1317'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1321' name = 'createConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1322' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a622'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1323' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1324' language = 'java' body = '        return new LCDUIConversationView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1321'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a69' name = 'LCDUIViewFactory' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a148'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1325' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a1311'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1326' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1327' language = 'java' body = '        // fail factory creation if LCDUI not available&#10;        Class.forName(&quot;javax.microedition.lcdui.Display&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a69'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Interface xmi.id = 'a1161' name = 'ConversationViewListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1328' name = 'onConversationSend' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1329' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1330' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1328'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1331' name = 'onConversationClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1332' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1333' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1331'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a1168' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a89'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a622'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a745' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a603'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a1152'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Generalization xmi.id = 'a1312' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a1311'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a448'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Abstraction xmi.id = 'a1264' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a84'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a756'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Class xmi.id = 'a448' name = 'ViewFactory' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1334' name = 'createContactListView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1335' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a756'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1336' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1337' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1334'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1338' name = 'createNewContactDialog' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1339' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a812'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1340' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1341' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1338'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1342' name = 'createConversationView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1343' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a622'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1344' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1345' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1342'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1346' name = 'getDefault' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'classifier' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1347' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a448'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1348' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1349' language = 'java' body = '        String[] options = {&#10;            &quot;im.view.swing.SwingViewFactory&quot;,&#10;            &quot;im.view.awt.AWTViewFactory&quot;,&#10;            &quot;im.view.lcdui.LCDUIViewFactory&quot;&#10;        };&#10;        ViewFactory factory = null;&#10;        for (int i = 0; i &lt; options.length &amp;&amp; factory == null; i++) {&#10;            try {&#10;               factory = (ViewFactory) Class.forName(options[i]).newInstance();&#10;            } catch (Exception e) {&#10;            }&#10;        }&#10;        return factory;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1346'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Abstraction xmi.id = 'a746' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a603'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a1116'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a622' name = 'ConversationView' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1350' name = 'getContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1351' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1352' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1353' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1350'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1354' name = 'addContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1355' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a10'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1356' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1357' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1354'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1358' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1359' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a1161'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1360' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1361' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1358'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1362' name = 'setTitle' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1363' name = 't' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a8'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1364' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1365' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1362'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1366' name = 'toFront' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1367' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1368' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1366'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a1208' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a119'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a87'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a812'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Association xmi.id = 'a1369' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a731'/>
              </UML:ModelElement.stereotype>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a1370' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a1371'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a1372' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a120'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a1373' name = 'network' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a1374'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a1375' lower = '1' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a136'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'a1376' name = 'ValueObject' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:UseCase xmi.id = 'a36' name = 'Update contact list' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Stereotype xmi.id = 'a1377' name = 'postcondition' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Include xmi.id = 'a1378' isSpecification = 'false'>
          <UML:Include.addition>
            <UML:UseCase xmi.idref = 'a36'/>
          </UML:Include.addition>
          <UML:Include.base>
            <UML:UseCase xmi.idref = 'a44'/>
          </UML:Include.base>
        </UML:Include>
        <UML:UseCase xmi.id = 'a29' name = 'Remove contact' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:UseCase.include>
            <UML:Include xmi.idref = 'a35'/>
          </UML:UseCase.include>
        </UML:UseCase>
        <UML:Association xmi.id = 'a1379' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1380' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1381'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1382' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a29'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1383' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1384'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1385' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a52'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a1386' name = 'instantiates' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a113' name = 'use' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'a1387' name = 'ParameterInfo' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1388'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1389' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Package xmi.id = 'a1390' name = 'javax' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a1391' name = 'microedition' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Dependency xmi.id = 'a1209' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a87'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a1392'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Package xmi.id = 'a1392' name = 'lcdui' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a1393' name = 'List' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Generalization xmi.id = 'a1266' isSpecification = 'false'>
                      <UML:Generalization.child>
                        <UML:Class xmi.idref = 'a84'/>
                      </UML:Generalization.child>
                      <UML:Generalization.parent>
                        <UML:Class xmi.idref = 'a1393'/>
                      </UML:Generalization.parent>
                    </UML:Generalization>
                    <UML:Class xmi.id = 'a1394' name = 'Form' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Generalization xmi.id = 'a1210' isSpecification = 'false'>
                      <UML:Generalization.child>
                        <UML:Class xmi.idref = 'a87'/>
                      </UML:Generalization.child>
                      <UML:Generalization.parent>
                        <UML:Class xmi.idref = 'a1394'/>
                      </UML:Generalization.parent>
                    </UML:Generalization>
                    <UML:Class xmi.id = 'a1395' name = 'StringItem' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a1176' name = 'Command' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a1396' name = 'TextBox' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a1221' name = 'ChoiceGroup' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Generalization xmi.id = 'a1170' isSpecification = 'false'>
                      <UML:Generalization.child>
                        <UML:Class xmi.idref = 'a89'/>
                      </UML:Generalization.child>
                      <UML:Generalization.parent>
                        <UML:Class xmi.idref = 'a1394'/>
                      </UML:Generalization.parent>
                    </UML:Generalization>
                    <UML:Class xmi.id = 'a1201' name = 'Displayable' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Class xmi.id = 'a1173' name = 'TextField' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Dependency xmi.id = 'a1169' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a89'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a1392'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Package xmi.id = 'a72' name = 'io' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Interface xmi.id = 'a173' name = 'StreamConnection' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Dependency xmi.id = 'a1265' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a84'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a1392'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'a119' name = 'realize' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Abstraction</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a125' name = 'accessor' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a432' name = 'Observer' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a1397' name = 'process' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a1398' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1399' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1400'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1401' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a52'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1402' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1403'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1404' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a21'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:UseCase xmi.id = 'a21' name = 'Send message' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Stereotype xmi.id = 'a1405' name = 'Socket' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a67' name = 'exception' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'a3' name = 'documentation' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1406'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1407' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Association xmi.id = 'a1408' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1409' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1410'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1411' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a17'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1412' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1413'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1414' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a36'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:TagDefinition xmi.id = 'a207' name = 'gentleware-initialValue' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1415'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1416' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Association xmi.id = 'a1417' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1418' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1419'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1420' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a17'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1421' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1422'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1423' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a30'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:TagDefinition xmi.id = 'a221' name = 'final' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1424'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1425' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:DataType xmi.id = 'a159' name = 'Exception' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Package xmi.id = 'a1426' name = 'ocl' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:DataType xmi.id = 'a306' name = 'Boolean' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1427' name = 'Set' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1428' name = 'Collection' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1429' name = 'OclType' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a195' name = 'Integer' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a10' name = 'OclAny' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1430' name = 'Real' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a454' name = 'Sequence' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1431' name = 'Bag' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a8' name = 'String' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:UseCase xmi.id = 'a44' name = 'Add contact' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:UseCase.include>
            <UML:Include xmi.idref = 'a1378'/>
          </UML:UseCase.include>
        </UML:UseCase>
        <UML:Stereotype xmi.id = 'a148' name = 'create' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Association xmi.id = 'a1432' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1433' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1434'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1435' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a44'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1436' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1437'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1438' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a52'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:TagDefinition xmi.id = 'a376' name = 'transient' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1439'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1440' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Association xmi.id = 'a1441' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1442' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1443'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1444' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a36'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1445' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1446'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1447' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a52'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Actor xmi.id = 'a17' name = 'User' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Stereotype xmi.id = 'a731' name = 'subscribe' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Association</UML:Stereotype.baseClass>
        </UML:Stereotype>
      </UML:Namespace.ownedElement>
    </UML:Model>
  </XMI.content>
</XMI>
