<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<XMI xmi.version = '1.2' xmlns:UML = 'org.omg.xmi.namespace.UML' timestamp = 'Wed Jun 01 16:12:12 CEST 2005'>
  <XMI.header>
    <XMI.documentation>
      <XMI.exporter>Netbeans XMI Writer</XMI.exporter>
      <XMI.exporterVersion>1.0</XMI.exporterVersion>
    </XMI.documentation>
  </XMI.header>
  <XMI.content>
    <UML:Model xmi.id = 'a1' name = 'InstantMessengerModel' isSpecification = 'false'
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
      <UML:ModelElement.taggedValue>
        <UML:TaggedValue xmi.id = 'a2' isSpecification = 'false'>
          <UML:TaggedValue.dataValue>&lt;p&gt;(C) 2005, Dennis Wagelaar, System and Software Engineering Lab, Vrije Universiteit Brussel&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;li&gt;Neither the name of JabberWookie nor the names of its contributors may be used
to endorse or promote products derived from this software without specific
prior written permission.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</UML:TaggedValue.dataValue>
          <UML:TaggedValue.type>
            <UML:TagDefinition xmi.idref = 'a3'/>
          </UML:TaggedValue.type>
        </UML:TaggedValue>
      </UML:ModelElement.taggedValue>
      <UML:Namespace.ownedElement>
        <UML:TagDefinition xmi.id = 'a4' name = 'gentleware-initialValue' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a5'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a6' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'a7' name = 'Observable' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Package xmi.id = 'a8' name = 'java' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a9' name = 'io' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a10' name = 'IOException' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Exception xmi.id = 'a11' name = 'DefaultJabberConnectException' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Signal.context>
                        <UML:Operation xmi.idref = 'a12'/>
                      </UML:Signal.context>
                    </UML:Exception>
                    <UML:Exception xmi.id = 'a13' name = 'JabberConnectException' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Signal.context>
                        <UML:Operation xmi.idref = 'a14'/>
                      </UML:Signal.context>
                    </UML:Exception>
                  </UML:Namespace.ownedElement>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a15' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a16'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a17'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a18' name = 'util' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a19' name = 'Observable' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Dependency xmi.id = 'a20' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a21'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a22'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Interface xmi.id = 'a23' name = 'OrderedSet' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a24' name = 'Hashtable' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Dependency xmi.id = 'a25' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a26'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a22'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a27' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a28'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a22'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a29' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a30'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a22'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a31' name = 'TreeSet' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Interface xmi.id = 'a32' name = 'Observer' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a33' name = 'List' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Dependency xmi.id = 'a34' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a35'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a22'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a36' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a37'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a22'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a38' name = 'ArrayList' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Interface xmi.id = 'a39' name = 'Set' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a40' name = 'Collection' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a22' name = 'Vector' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a41' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a26'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a42'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a43' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a21'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a42'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a44' name = 'lang' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a45' name = 'String[]' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a46' name = 'ClassNotFoundException' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a47'/>
                  </UML:ModelElement.stereotype>
                  <UML:Namespace.ownedElement>
                    <UML:Exception xmi.id = 'a48' name = 'awtViewFactoryException' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Signal.context>
                        <UML:Operation xmi.idref = 'a49'/>
                      </UML:Signal.context>
                    </UML:Exception>
                    <UML:Exception xmi.id = 'a50' name = 'swingViewFactoryException' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Signal.context>
                        <UML:Operation xmi.idref = 'a51'/>
                      </UML:Signal.context>
                    </UML:Exception>
                  </UML:Namespace.ownedElement>
                </UML:Class>
                <UML:DataType xmi.id = 'a52' name = 'void' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:DataType xmi.id = 'a53' name = 'int' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a54' name = 'String[][]' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a55' name = 'String' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:DataType xmi.id = 'a56' name = 'double' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a57' name = 'Object' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:DataType xmi.id = 'a58' name = 'boolean' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Package xmi.id = 'a17' name = 'net' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a59' name = 'Socket' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Association xmi.id = 'a60' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a61' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a62'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a63' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a16'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a64' name = 'socket' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a65'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a66' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a59'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a67' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a28'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a42'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a68' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a35'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a42'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a69' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a30'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a42'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a42' name = 'awt' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a70' name = 'Panel' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Package xmi.id = 'a71' name = 'event' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Dependency xmi.id = 'a72' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a35'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a71'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a73' name = 'TextField' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Dependency xmi.id = 'a74' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a21'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a71'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a75' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a28'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a71'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a76' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a37'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a71'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a77' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a30'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a71'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Generalization xmi.id = 'a78' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a21'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a70'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a79' name = 'TextArea' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a80' name = 'Label' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a81' name = 'List' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Generalization xmi.id = 'a82' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a26'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a83'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a84' name = 'Choice' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Generalization xmi.id = 'a85' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a30'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a83'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a83' name = 'Frame' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a86' name = 'Button' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a87' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a37'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a42'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Include xmi.id = 'a88' isSpecification = 'false'>
          <UML:Include.addition>
            <UML:UseCase xmi.idref = 'a89'/>
          </UML:Include.addition>
          <UML:Include.base>
            <UML:UseCase xmi.idref = 'a90'/>
          </UML:Include.base>
        </UML:Include>
        <UML:Stereotype xmi.id = 'a91' name = 'use' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Package xmi.id = 'a92' name = 'im' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Dependency xmi.id = 'a93' name = 'accessor addNetwork()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a95'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a96'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Association xmi.id = 'a97' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a98' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a99'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a100' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a101'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a102' name = 'contactList' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a103'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a104' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:ModelElement.taggedValue>
                    <UML:TaggedValue xmi.id = 'a105' isSpecification = 'false'>
                      <UML:TaggedValue.dataValue>new im.model.ContactList()</UML:TaggedValue.dataValue>
                      <UML:TaggedValue.type>
                        <UML:TagDefinition xmi.idref = 'a4'/>
                      </UML:TaggedValue.type>
                    </UML:TaggedValue>
                  </UML:ModelElement.taggedValue>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a106'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Dependency xmi.id = 'a107' name = 'accessor removeConversation()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a108'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a109'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a110' name = 'accessor setViewFactory()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a111'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a112'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a113' name = 'accessor setContactList()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a114'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a115'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Abstraction xmi.id = 'a116' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a117'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a101'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Interface xmi.idref = 'a32'/>
              </UML:Dependency.supplier>
            </UML:Abstraction>
            <UML:Package xmi.id = 'a118' name = 'edit' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Dependency xmi.id = 'a119' name = 'accessor setModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a120'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a121'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a122' name = 'accessor setView()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a123'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a124'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a125' name = 'accessor getView()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a126'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a127'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a128' name = 'accessor setView()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a129'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a127'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a130' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a131' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a132'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a133' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a134'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a135' name = 'view' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a136'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a137' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a138'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a139' name = 'accessor setModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a140'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a141'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a142' name = 'accessor removeContactEdit()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a143'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a144'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Abstraction xmi.id = 'a145' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a146'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a32'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Dependency xmi.id = 'a147' name = 'accessor getModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a148'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a121'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a134' name = 'ConversationEdit' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Abstraction xmi.idref = 'a149'/>
                    <UML:Abstraction xmi.idref = 'a150'/>
                  </UML:ModelElement.clientDependency>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a151'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a152' name = 'update' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a153' name = 'o' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a19'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a154' name = 'arg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a57'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a155' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a156' language = 'java' body = 'if (arg instanceof java.util.Hashtable) {&#10;    java.util.Hashtable e = (java.util.Hashtable) arg;&#10;    String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#10;    Class[] parmTypes = { (Class) e.get(&quot;class&quot;) };&#10;    try {&#10;        java.lang.reflect.Method m = getClass().getDeclaredMethod(mName, parmTypes);&#10;        Object[] args = { e.get(&quot;value&quot;) };&#10;        m.invoke(this, args);&#10;    } catch (NoSuchMethodException nex) {&#10;        // no handler&#10;    } catch (Exception ex) {&#10;        // wrong handler configuration&#10;        ex.printStackTrace();&#10;    }&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a152'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a123' name = 'setView' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a122'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a157' name = 'view' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a138'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a158' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a159' language = 'java' body = 'this.view = view;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a123'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a140' name = 'setModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a139'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a160' name = 'model' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a161'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a162' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a163' language = 'java' body = '// Begin subscribe stanza&#10;if (this.model != null) this.model.deleteObserver(this);&#10;// Begin original body&#10;this.model = model;&#10;// End original body&#10;if (model != null) model.addObserver(this);&#10;// End subscribe stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a140'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a164' name = 'getView' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a165'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a166' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a138'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a167' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a168' language = 'java' body = 'return view;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a164'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a169' name = 'getModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a170'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a171' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a161'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a172' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a173' language = 'java' body = 'return model;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a169'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a141' name = 'model' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a174' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a161'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a124' name = 'view' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a175' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Interface xmi.idref = 'a138'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a176' name = 'ConversationEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a177'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a178' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a161'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a179' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a134'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a180' name = 'onMessageChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a181' name = 'm' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a182'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a183' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a184' language = 'java' body = '        if (m.getContent() instanceof String) {&#10;            im.model.ContactList list =&#10;                im.InstantMessagingClient.getInstance().getContactList();&#10;            getView().addContent(list.getUserName(m.getSender())&#10;                + &quot;: &quot; + m.getContent());&#10;        } else {&#10;            getView().addContent(m.getContent());&#10;        }&#10;        getView().toFront();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a180'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a185' name = 'onContactChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a186' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a188' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a189' language = 'java' body = '        getView().setTitle(getModel().getContact().getName());&#10;        getView().toFront();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a185'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a190' name = 'onConversationClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a191' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a192' language = 'java' body = '        im.InstantMessagingClient.getInstance().removeConversation(getModel());&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a190'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a193' name = 'onConversationSend' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Operation xmi.id = 'a194' name = 'getSender' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a195' name = 'recipient' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a196' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a197' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a198' language = 'java' body = '        im.model.Contact recipient = getModel().getContact();&#10;        im.model.Contact sender = getSender(recipient);&#10;        im.model.Message msg = new im.model.Message();&#10;        msg.setNetwork(recipient.getNetwork());&#10;        msg.setSender(sender.getUserId());&#10;        msg.setRecipient(recipient.getUserId());&#10;        msg.setContent(getView().getContent());&#10;        msg.send();&#10;        getModel().setMessage(msg);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a193'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a199' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a200' language = 'java' body = '        setModel(c);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        setView(client.getViewFactory().createConversationView());&#10;        getView().addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a176'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a201' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a202' language = 'java' body = '        im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();&#10;        return c.getContactList().getIdentity(recipient.getNetwork());&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a194'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a203' name = 'accessor setListEdit()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a204'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a205'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a206' name = 'accessor getContactEdits()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a207'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a144'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a170' name = 'accessor getModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a169'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a141'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a208' name = 'accessor getContactEditAt()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a209'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a144'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a210' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a211' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a212'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a213' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a146'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a214' name = 'view' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a215'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a216' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a217'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a218' name = 'accessor getModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a219'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a220'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a221' name = 'ContactEdit' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Abstraction xmi.idref = 'a222'/>
                  </UML:ModelElement.clientDependency>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a151'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a223' name = 'update' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a224' name = 'o' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a19'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a225' name = 'arg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a57'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a226' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a227' language = 'java' body = 'if (arg instanceof java.util.Hashtable) {&#10;    java.util.Hashtable e = (java.util.Hashtable) arg;&#10;    String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#10;    Class[] parmTypes = { (Class) e.get(&quot;class&quot;) };&#10;    try {&#10;        java.lang.reflect.Method m = getClass().getDeclaredMethod(mName, parmTypes);&#10;        Object[] args = { e.get(&quot;value&quot;) };&#10;        m.invoke(this, args);&#10;    } catch (NoSuchMethodException nex) {&#10;        // no handler&#10;    } catch (Exception ex) {&#10;        // wrong handler configuration&#10;        ex.printStackTrace();&#10;    }&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a223'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a204' name = 'setListEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a203'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a228' name = 'listEdit' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a146'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a229' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a230' language = 'java' body = 'if (this.listEdit != listEdit) {&#10;    if (this.listEdit != null) this.listEdit.removeContactEdit(this);&#10;    this.listEdit = listEdit;&#10;    if (listEdit != null) listEdit.addContactEdit(this);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a204'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a231' name = 'setModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a232'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a233' name = 'model' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a234' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a235' language = 'java' body = '// Begin subscribe stanza&#10;if (this.model != null) this.model.deleteObserver(this);&#10;// Begin original body&#10;this.model = model;&#10;// End original body&#10;if (model != null) model.addObserver(this);&#10;// End subscribe stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a231'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a236' name = 'getListEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a237'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a238' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a146'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a239' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a240' language = 'java' body = 'return listEdit;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a236'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a219' name = 'getModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a218'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a241' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a242' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a243' language = 'java' body = 'return model;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a219'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a220' name = 'model' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a244' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a187'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a205' name = 'listEdit' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a245' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a146'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a246' name = 'ContactEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a177'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a247' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a248' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a221'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a249' name = 'onStatusChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a250' name = 's' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a252' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a253' language = 'java' body = '        onChange();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a249'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a254' name = 'onNameChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a255' name = 'n' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a256' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a257' language = 'java' body = '        onChange();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a254'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a258' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a259' language = 'java' body = '        setModel(c);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a246'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a260' name = 'onChange' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a261' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a262' language = 'java' body = '        &#9;int index = getListEdit().getContactEdits().indexOf(this);&#10;            if (index &gt; -1) {&#10;                getListEdit().getView().removeContact(index);&#10;                getListEdit().getView().addContact(formatContact(), index);&#10;            }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a260'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a263' name = 'formatContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a264' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a265' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a266' language = 'java' body = '        String name = getModel().getName();&#10;        String status = getModel().getStatus();&#10;        if (getModel() instanceof im.model.Identity) {&#10;            name = &quot;* &quot; + name;&#10;        } else {&#10;            name = &quot;  &quot; + name;&#10;        }&#10;        if (getModel().getNetwork() != null) {&#10;            name += &quot; - &quot; + getModel().getNetwork().getName();&#10;        }&#10;        if (status == null) {&#10;            status = &quot;offline&quot;;&#10;        }&#10;        name += &quot; (&quot; + status + &quot;)&quot;;&#10;        return name;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a263'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a232' name = 'accessor setModel()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a231'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a220'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a165' name = 'accessor getView()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a164'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a124'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a267' name = 'accessor insertContactEdit()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a268'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a144'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a146' name = 'ContactListEdit' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Abstraction xmi.idref = 'a269'/>
                    <UML:Abstraction xmi.idref = 'a270'/>
                    <UML:Abstraction xmi.idref = 'a145'/>
                  </UML:ModelElement.clientDependency>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a151'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a271' name = 'update' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a272' name = 'o' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a19'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a273' name = 'arg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a57'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a274' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a275' language = 'java' body = 'if (arg instanceof java.util.Hashtable) {&#10;    java.util.Hashtable e = (java.util.Hashtable) arg;&#10;    String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#10;    Class[] parmTypes = { (Class) e.get(&quot;class&quot;) };&#10;    try {&#10;        java.lang.reflect.Method m = getClass().getDeclaredMethod(mName, parmTypes);&#10;        Object[] args = { e.get(&quot;value&quot;) };&#10;        m.invoke(this, args);&#10;    } catch (NoSuchMethodException nex) {&#10;        // no handler&#10;    } catch (Exception ex) {&#10;        // wrong handler configuration&#10;        ex.printStackTrace();&#10;    }&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a271'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a120' name = 'setModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a119'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a276' name = 'model' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a106'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a277' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a278' language = 'java' body = '// Begin subscribe stanza&#10;if (this.model != null) this.model.deleteObserver(this);&#10;// Begin original body&#10;this.model = model;&#10;// End original body&#10;if (model != null) model.addObserver(this);&#10;// End subscribe stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a120'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a129' name = 'setView' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a128'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a279' name = 'view' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a217'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a280' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a281' language = 'java' body = 'this.view = view;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a129'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a207' name = 'getContactEdits' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a206'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a282' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a283'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a284' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a285' language = 'java' body = 'return contactEdit;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a207'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a148' name = 'getModel' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a147'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a286' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a106'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a287' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a288' language = 'java' body = 'return model;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a148'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a126' name = 'getView' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a125'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a289' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a217'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a290' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a291' language = 'java' body = 'return view;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a126'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a209' name = 'getContactEditAt' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a208'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a292' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a293'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a294' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a221'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a295' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a296' language = 'java' body = 'try {&#10;    return (im.edit.ContactEdit) contactEdit.get(index);&#10;} catch (IndexOutOfBoundsException e) {&#10;    return null;&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a209'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a297' name = 'addContactEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a298'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a299' name = 'contactEdit' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a221'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a300' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a301' language = 'java' body = 'if (! this.contactEdit.contains(contactEdit)) {&#10;    this.contactEdit.add(contactEdit);&#10;    contactEdit.setListEdit(this);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a297'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a268' name = 'insertContactEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a267'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a302' name = 'contactEdit' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a221'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a303' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a293'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a304' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a305' language = 'java' body = 'if (! this.contactEdit.contains(contactEdit)) {&#10;    try {&#10;    this.contactEdit.add(index, contactEdit);&#10;} catch (IndexOutOfBoundsException e) {&#10;    this.contactEdit.add(contactEdit);&#10;};&#10;    contactEdit.setListEdit(this);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a268'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a143' name = 'removeContactEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a142'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a306' name = 'contactEdit' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a221'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a307' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a308' language = 'java' body = 'if (this.contactEdit.contains(contactEdit)) {&#10;    this.contactEdit.remove(contactEdit);&#10;    contactEdit.setListEdit(null);&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a143'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a121' name = 'model' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a309' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a106'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a144' name = 'contactEdit' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a310' language = 'java' body = 'new java.util.ArrayList()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a283'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a127' name = 'view' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a311' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Interface xmi.idref = 'a217'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a312' name = 'ContactListEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a177'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a313' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a146'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a314' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a106'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a315' name = 'onContactChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a316' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a317' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a318' language = 'java' body = '        int index = getModel().getContacts().indexOf(c);&#10;        if (index &gt; -1) {&#10;            ContactEdit edit = new ContactEdit(c);&#10;            insertContactEdit(edit, index);&#10;            getView().addContact(edit.formatContact(), index);&#10;        } else {&#10;            index = getContactEditIndex(c);&#10;            getView().removeContact(index);&#10;            removeContactEdit(getContactEditAt(index));&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a315'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a319' name = 'onContactListAdd' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a320' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a321' language = 'java' body = '        getView().setEnabled(false);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        im.view.NewContactDialog dlg =&#10;            client.getViewFactory().createNewContactDialog();&#10;        for (int i = 0; i &lt; client.getNetworks().size(); i++) {&#10;            dlg.addNetwork(client.getNetworkAt(i).getName());&#10;        }&#10;        dlg.addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a319'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a322' name = 'onContactListRemove' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a323' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a324' language = 'java' body = '        int index = getView().getSelectedContact();&#10;        if (index &gt; -1) {&#10;            im.model.Contact c = getModel().getContactAt(index);&#10;            if (c instanceof im.model.Identity) {&#10;                im.model.Identity id = (im.model.Identity) c;&#10;                id.getNetwork().logout();&#10;            } else {&#10;                c.getNetwork().removeContact(c);&#10;            }&#10;            getModel().removeContact(c);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a322'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a325' name = 'onContactListAction' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a326' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a327' language = 'java' body = '        int index = getView().getSelectedContact();&#10;        if (index &gt; -1) {&#10;            im.model.Contact c = getModel().getContactAt(index);&#10;            im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;            // reuse existing conversation, if any&#10;            for (int i = 0; i &lt; client.getConversations().size(); i++) {&#10;                im.model.Contact contact = client.getConversationAt(i).getContact();&#10;                if (contact.equals(c)) {&#10;                    client.getConversationAt(i).setContact(new im.model.Contact());&#10;                    client.getConversationAt(i).setContact(c);&#10;                    return;&#10;                }&#10;            }&#10;            // else new conversation&#10;            im.model.Conversation conv = new im.model.Conversation();&#10;            new ConversationEdit(conv);&#10;            client.addConversation(conv);&#10;            conv.setContact(c);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a325'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a328' name = 'onNewContactDialogClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a329' name = 'okClicked' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a330'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a331' name = 'dlg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a332'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a333' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a334' language = 'java' body = '        if (okClicked) {&#10;            im.model.Contact c;&#10;            im.networking.Network n =&#10;                im.InstantMessagingClient.getInstance().getNetworkAt(dlg.getNetwork());&#10;            if (getModel().getIdentity(n) == null) {&#10;                im.model.Identity id = new im.model.Identity();&#10;                id.setNetwork(n);&#10;                id.setUserId(dlg.getUid());&#10;                id.setName(dlg.getName());&#10;                id.setPassword(dlg.getPassword());&#10;                c = id;&#10;                getModel().addContact(c);&#10;                id.getNetwork().login(id.getUserId(), id.getPassword());&#10;            } else {&#10;                c = new im.model.Contact();&#10;                c.setNetwork(n);&#10;                c.setUserId(dlg.getUid());&#10;                c.setName(dlg.getName());&#10;                getModel().addContact(c);&#10;                c.getNetwork().addContact(c);&#10;            }&#10;        }&#10;        getView().setEnabled(true);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a328'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a335' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a336' language = 'java' body = '        setModel(c);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        setView(client.getViewFactory().createContactListView());&#10;        getView().addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a312'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a337' name = 'getContactEditIndex' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a338' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a339' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a293'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a340' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a341' language = 'java' body = '        for (int i = 0; i &lt; getContactEdits().size(); i++) {&#10;            if (getContactEditAt(i).getModel() == contact)&#10;                return i;&#10;        }&#10;        return -1;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a337'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a342' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a343' name = 'listEdit' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'aggregate'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a344'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a345' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a146'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a346' name = 'contactEdit' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a347'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a348' lower = '0' upper = '-1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a221'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a237' name = 'accessor getListEdit()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a236'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a205'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a349' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a350'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a351' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a352'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a353' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a146'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a354' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a355'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a356' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a106'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Abstraction xmi.id = 'a222' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a221'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a32'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a149' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a134'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a32'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Dependency xmi.id = 'a298' name = 'accessor addContactEdit()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a297'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a144'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a357' name = 'accessor insertNetwork()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a358'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a96'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a359' name = 'accessor getContactList()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a360'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a115'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Association xmi.id = 'a361' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a362' name = 'list' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'composite'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a363'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a364' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a106'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a365' name = 'contact' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a366'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a367' lower = '0' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a187'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Dependency xmi.id = 'a368' name = 'accessor getConversations()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a369'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a109'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a370' name = 'networking' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Dependency xmi.id = 'a371' name = 'accessor getRecvContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a372'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a373'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a374' name = 'accessor getName()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a375'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a376'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a377' name = 'accessor setName()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a378'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a376'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Abstraction xmi.id = 'a379' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a380'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a381'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Generalization xmi.id = 'a382' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a383'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a19'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Abstraction xmi.id = 'a384' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a380'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a385'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Package xmi.id = 'a386' name = 'jabber' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Dependency xmi.id = 'a387' name = 'accessor setConnection()' isSpecification = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a94'/>
                      </UML:ModelElement.stereotype>
                      <UML:Dependency.client>
                        <UML:Operation xmi.idref = 'a388'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Attribute xmi.idref = 'a389'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                    <UML:Package xmi.id = 'a390' name = 'defaultjabber' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Namespace.ownedElement>
                        <UML:Dependency xmi.id = 'a391' name = 'accessor getSocket()' isSpecification = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a94'/>
                          </UML:ModelElement.stereotype>
                          <UML:Dependency.client>
                            <UML:Operation xmi.idref = 'a392'/>
                          </UML:Dependency.client>
                          <UML:Dependency.supplier>
                            <UML:Attribute xmi.idref = 'a393'/>
                          </UML:Dependency.supplier>
                        </UML:Dependency>
                        <UML:Dependency xmi.id = 'a394' name = 'accessor setSocket()' isSpecification = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a94'/>
                          </UML:ModelElement.stereotype>
                          <UML:Dependency.client>
                            <UML:Operation xmi.idref = 'a395'/>
                          </UML:Dependency.client>
                          <UML:Dependency.supplier>
                            <UML:Attribute xmi.idref = 'a393'/>
                          </UML:Dependency.supplier>
                        </UML:Dependency>
                        <UML:Class xmi.id = 'a16' name = 'DefaultJabber' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                          <UML:ModelElement.clientDependency>
                            <UML:Dependency xmi.idref = 'a15'/>
                          </UML:ModelElement.clientDependency>
                          <UML:GeneralizableElement.generalization>
                            <UML:Generalization xmi.idref = 'a396'/>
                          </UML:GeneralizableElement.generalization>
                          <UML:Classifier.feature>
                            <UML:Operation xmi.id = 'a395' name = 'setSocket' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:ModelElement.clientDependency>
                                <UML:Dependency xmi.idref = 'a394'/>
                              </UML:ModelElement.clientDependency>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a397' name = 'socket' isSpecification = 'false'
                                  kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a59'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a398' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a399' language = 'java' body = '// Begin Observable stanza&#10;if (this.socket != socket) {&#10;    // Begin original body&#10;this.socket = socket;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Socket&quot;);&#10;    e.put(&quot;class&quot;, java.net.Socket.class);&#10;    if (socket != null) {&#10;        e.put(&quot;value&quot;, socket);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a395'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a392' name = 'getSocket' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:ModelElement.clientDependency>
                                <UML:Dependency xmi.idref = 'a391'/>
                              </UML:ModelElement.clientDependency>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a400' name = 'return' isSpecification = 'false'
                                  kind = 'return'>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a59'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a401' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a402' language = 'java' body = 'return socket;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a392'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Attribute xmi.id = 'a393' name = 'socket' visibility = 'private' isSpecification = 'false'
                              ownerScope = 'instance' changeability = 'changeable'>
                              <UML:Attribute.initialValue>
                                <UML:Expression xmi.id = 'a403' language = 'java' body = 'null'/>
                              </UML:Attribute.initialValue>
                              <UML:StructuralFeature.type>
                                <UML:Class xmi.idref = 'a59'/>
                              </UML:StructuralFeature.type>
                            </UML:Attribute>
                            <UML:Attribute xmi.id = 'a404' name = 'connectError' visibility = 'private'
                              isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                              <UML:Attribute.initialValue>
                                <UML:Expression xmi.id = 'a405' language = 'java' body = '&quot;&quot;'/>
                              </UML:Attribute.initialValue>
                              <UML:StructuralFeature.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:StructuralFeature.type>
                            </UML:Attribute>
                            <UML:Operation xmi.id = 'a12' name = 'connect' visibility = 'protected'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a406' name = 'host' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a251'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a407' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a408' language = 'java' body = '        setSocket(connect(host, 5222));&#10;        if (getSocket() == null) {&#10;            throw new java.io.IOException(connectError);&#10;        }&#10;        setConnection(new com.jabberwookie.Client2Server(&#10;            getSocket().getInputStream(), getSocket().getOutputStream()));&#10;        if (!getConnection().open(host, 60000)) {&#10;            throw new java.io.IOException(&quot;Could not establish stream to &quot; + host + &quot;:5222 after 60 seconds&quot;);&#10;        }&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a12'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a409' name = 'connect' visibility = 'private' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a410' name = 'host' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a251'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                                <UML:Parameter xmi.id = 'a411' name = 'port' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a293'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                                <UML:Parameter xmi.id = 'a412' name = 'return' isSpecification = 'false'
                                  kind = 'return'>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a59'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a413' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a414' language = 'java' body = '        Socket s = null;&#10;        try {&#10;            InetAddress[] hosts = InetAddress.getAllByName(host);&#10;            java.util.Stack exceptions = new java.util.Stack();&#10;            for (int i = 0; i &lt; hosts.length; i++) {&#10;                try {&#10;                    s = new Socket(hosts[i], port);&#10;                    break;&#10;                } catch (Exception e) {&#10;                    exceptions.push(e);&#10;                }&#10;            }&#10;            StringBuffer sb = new StringBuffer();&#10;            while (!exceptions.empty()) {&#10;                sb.append(((Exception) exceptions.pop()).getMessage());&#10;            }&#10;            connectError = sb.toString();&#10;        } catch (Exception e) {&#10;            connectError = e.getMessage();&#10;        }&#10;        return s;&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a409'/>
                              </UML:Method.specification>
                            </UML:Method>
                          </UML:Classifier.feature>
                        </UML:Class>
                      </UML:Namespace.ownedElement>
                    </UML:Package>
                    <UML:Class xmi.id = 'a380' name = 'Jabber' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a379'/>
                        <UML:Abstraction xmi.idref = 'a384'/>
                        <UML:Abstraction xmi.idref = 'a415'/>
                        <UML:Dependency xmi.idref = 'a416'/>
                        <UML:Dependency xmi.idref = 'a417'/>
                        <UML:Dependency xmi.idref = 'a418'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a419'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Namespace.ownedElement>
                        <UML:Class xmi.id = 'a420' name = 'DisconnectedState' visibility = 'public'
                          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                          isActive = 'false'>
                          <UML:GeneralizableElement.generalization>
                            <UML:Generalization xmi.idref = 'a421'/>
                          </UML:GeneralizableElement.generalization>
                          <UML:Classifier.feature>
                            <UML:Operation xmi.id = 'a422' name = 'login' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a423' name = 'uid' isSpecification = 'false' kind = 'in'>
                                  <UML:ModelElement.taggedValue>
                                    <UML:TaggedValue xmi.id = 'a424' isSpecification = 'false'>
                                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                      <UML:TaggedValue.type>
                                        <UML:TagDefinition xmi.idref = 'a425'/>
                                      </UML:TaggedValue.type>
                                    </UML:TaggedValue>
                                  </UML:ModelElement.taggedValue>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a251'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                                <UML:Parameter xmi.id = 'a426' name = 'pwd' isSpecification = 'false' kind = 'in'>
                                  <UML:ModelElement.taggedValue>
                                    <UML:TaggedValue xmi.id = 'a427' isSpecification = 'false'>
                                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                      <UML:TaggedValue.type>
                                        <UML:TagDefinition xmi.idref = 'a425'/>
                                      </UML:TaggedValue.type>
                                    </UML:TaggedValue>
                                  </UML:ModelElement.taggedValue>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a251'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a428' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a429' language = 'java' body = '        Thread login = new Thread() {&#10;            public void run() {&#10;                try {&#10;                    java.util.Vector address = Strings.tokenize(uid, &apos;@&apos;);&#10;                    String user = (String) address.elementAt(0);&#10;                    String server = (String) address.elementAt(1);&#10;                    address = Strings.tokenize(server, &apos;/&apos;);&#10;                    server = (String) address.elementAt(0);&#10;                    String resource = (String) address.elementAt(1);&#10;                    connect(server);&#10;                    getConnection().setMessageListener(Jabber.this);&#10;                    getConnection().setIQListener(Jabber.this);&#10;                    getConnection().setPresenceListener(Jabber.this);&#10;                    boolean try_again;&#10;                    do {&#10;                        try_again = false;&#10;                        System.out.println(&quot;Logging in &quot; + uid);&#10;                        switch (getConnection().loginAny(user, resource,&#10;                                pwd, 30000)) {&#10;                        case Client2Server.LOGIN_BAD_PASS:&#10;                            throw new IOException(&quot;Bad password for &quot; + uid);&#10;                        case Client2Server.LOGIN_BAD_UID:&#10;                            if (!registerUser(user, pwd))&#10;                                throw new IOException(&#10;                                        &quot;Could not register user for &quot;&#10;                                                + uid);&#10;                            else&#10;                                try_again = true;&#10;                            break;&#10;                        case Client2Server.LOGIN_FAILED:&#10;                            throw new IOException(&quot;Login failed: unknown: &quot;&#10;                                    + uid);&#10;                        case Client2Server.LOGIN_PASS_EXP:&#10;                            System.out&#10;                                    .println(&quot;Your password has expired for &quot;&#10;                                            + uid);&#10;                            break;&#10;                        case Client2Server.LOGIN_OK:&#10;                            break;&#10;                        }&#10;                    } while (try_again);&#10;                    Presence pres = new Presence(Const.AVAILABLE,&#10;                            &quot;Available&quot;, 1);&#10;                    pres.setFrom(uid);&#10;                    getConnection().send(pres);&#10;                    incomingPresence(pres);&#10;                    getConnection().send(IQRoster.createGetRequest());&#10;                    synchronized(Jabber.this) {&#10;                            Jabber.this.state = new ConnectedState();&#10;                    }&#10;                } catch (IOException e) {&#10;                    System.err.println(e.getMessage());&#10;                    e.printStackTrace();&#10;                }&#10;            }&#10;        };&#10;        login.start();&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a422'/>
                              </UML:Method.specification>
                            </UML:Method>
                          </UML:Classifier.feature>
                        </UML:Class>
                        <UML:Generalization xmi.id = 'a421' isSpecification = 'false'>
                          <UML:Generalization.child>
                            <UML:Class xmi.idref = 'a420'/>
                          </UML:Generalization.child>
                          <UML:Generalization.parent>
                            <UML:Class xmi.idref = 'a430'/>
                          </UML:Generalization.parent>
                        </UML:Generalization>
                        <UML:Generalization xmi.id = 'a431' isSpecification = 'false'>
                          <UML:Generalization.child>
                            <UML:Class xmi.idref = 'a432'/>
                          </UML:Generalization.child>
                          <UML:Generalization.parent>
                            <UML:Class xmi.idref = 'a430'/>
                          </UML:Generalization.parent>
                        </UML:Generalization>
                        <UML:Class xmi.id = 'a430' name = 'State' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                          <UML:Classifier.feature>
                            <UML:Operation xmi.id = 'a433' name = 'login' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a434' name = 'uid' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a251'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                                <UML:Parameter xmi.id = 'a435' name = 'pwd' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:DataType xmi.idref = 'a251'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a436' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a437' language = 'java' body = ''/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a433'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a438' name = 'logout' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'/>
                            <UML:Method xmi.id = 'a439' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a440' language = 'java' body = ''/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a438'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a441' name = 'addContact' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a442' name = 'c' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a187'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a443' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a444' language = 'java' body = ''/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a441'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a445' name = 'removeContact' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a446' name = 'c' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a187'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a447' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a448' language = 'java' body = ''/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a445'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a449' name = 'send' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a450' name = 'msg' isSpecification = 'false' kind = 'in'>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a182'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a451' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a452' language = 'java' body = ''/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a449'/>
                              </UML:Method.specification>
                            </UML:Method>
                          </UML:Classifier.feature>
                        </UML:Class>
                        <UML:Class xmi.id = 'a432' name = 'ConnectedState' visibility = 'public'
                          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                          isActive = 'false'>
                          <UML:GeneralizableElement.generalization>
                            <UML:Generalization xmi.idref = 'a431'/>
                          </UML:GeneralizableElement.generalization>
                          <UML:Classifier.feature>
                            <UML:Operation xmi.id = 'a453' name = 'logout' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'/>
                            <UML:Method xmi.id = 'a454' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a455' language = 'java' body = '        Thread logout = new Thread() {&#10;            public void run() {&#10;                try {&#10;                System.out.println(&quot;Closing connection for &quot; + getConnection().getServerName());&#10;                Presence p = new Presence();&#10;                p.setType(Const.UNAVAILABLE);&#10;                getConnection().send(p);&#10;                getConnection().close();&#10;                synchronized(Jabber.this) {&#10;                    Jabber.this.state = new DisconnectedState();&#10;                }&#10;                } catch (java.io.IOException e) {&#10;                e.printStackTrace();&#10;                }&#10;            }&#10;        };&#10;        logout.start();&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a453'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a456' name = 'addContact' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a457' name = 'c' isSpecification = 'false' kind = 'in'>
                                  <UML:ModelElement.taggedValue>
                                    <UML:TaggedValue xmi.id = 'a458' isSpecification = 'false'>
                                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                      <UML:TaggedValue.type>
                                        <UML:TagDefinition xmi.idref = 'a425'/>
                                      </UML:TaggedValue.type>
                                    </UML:TaggedValue>
                                  </UML:ModelElement.taggedValue>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a187'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a459' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a460' language = 'java' body = '        if (!getConnection().isConnected()) {&#10;            Jabber.this.state = new DisconnectedState();&#10;            return;&#10;        }&#10;        Thread addContact = new Thread() {&#10;            public void run() {&#10;                try {&#10;                    Presence presence = new Presence(c.getUserId(), Const.SUBSCRIBE);&#10;                    System.out.println(&quot;Adding contact &quot; + presence);&#10;                    getConnection().send(presence);&#10;                    IQRoster roster = new IQRoster();&#10;                    roster.addItem(c.getUserId(), c.getName());&#10;                    IQ iq = new IQ(Const.SET);&#10;                    iq.addChild(roster);&#10;                    getConnection().send(iq);&#10;                } catch (java.io.IOException e) {&#10;                    System.err.println(e.getMessage());&#10;                    e.printStackTrace();&#10;                }&#10;            }&#10;        };&#10;        addContact.start();&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a456'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a461' name = 'removeContact' visibility = 'public'
                              isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a462' name = 'c' isSpecification = 'false' kind = 'in'>
                                  <UML:ModelElement.taggedValue>
                                    <UML:TaggedValue xmi.id = 'a463' isSpecification = 'false'>
                                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                      <UML:TaggedValue.type>
                                        <UML:TagDefinition xmi.idref = 'a425'/>
                                      </UML:TaggedValue.type>
                                    </UML:TaggedValue>
                                  </UML:ModelElement.taggedValue>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a187'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a464' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a465' language = 'java' body = '        if (!getConnection().isConnected()) {&#10;            Jabber.this.state = new DisconnectedState();&#10;            return;&#10;        }&#10;        Thread removeContact = new Thread() {&#10;            public void run() {&#10;                try {&#10;                IQRoster roster = new IQRoster();&#10;                roster.addItem(c.getUserId());&#10;                ((IQRoster.Item) roster.getChild(0)).setSubscription(Const.REMOVE);&#10;                IQ iq = new IQ(Const.SET);&#10;                iq.addChild(roster);&#10;                getConnection().send(iq);&#10;                Presence presence = new Presence(c.getUserId(), Const.UNSUBSCRIBE);&#10;                System.out.println(&quot;Removing contact &quot; + presence);&#10;                getConnection().send(presence);&#10;                } catch (java.io.IOException e) {&#10;                System.err.println(e.getMessage());&#10;                e.printStackTrace();&#10;                }&#10;            }&#10;        };&#10;        removeContact.start();&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a461'/>
                              </UML:Method.specification>
                            </UML:Method>
                            <UML:Operation xmi.id = 'a466' name = 'send' visibility = 'public' isSpecification = 'false'
                              ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                              isLeaf = 'false' isAbstract = 'false'>
                              <UML:BehavioralFeature.parameter>
                                <UML:Parameter xmi.id = 'a467' name = 'msg' isSpecification = 'false' kind = 'in'>
                                  <UML:ModelElement.taggedValue>
                                    <UML:TaggedValue xmi.id = 'a468' isSpecification = 'false'>
                                      <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                      <UML:TaggedValue.type>
                                        <UML:TagDefinition xmi.idref = 'a425'/>
                                      </UML:TaggedValue.type>
                                    </UML:TaggedValue>
                                  </UML:ModelElement.taggedValue>
                                  <UML:Parameter.type>
                                    <UML:Class xmi.idref = 'a182'/>
                                  </UML:Parameter.type>
                                </UML:Parameter>
                              </UML:BehavioralFeature.parameter>
                            </UML:Operation>
                            <UML:Method xmi.id = 'a469' isSpecification = 'false' isQuery = 'false'>
                              <UML:Method.body>
                                <UML:ProcedureExpression xmi.id = 'a470' language = 'java' body = '        if (!getConnection().isConnected()) {&#10;            Jabber.this.state = new DisconnectedState();&#10;            return;&#10;        }&#10;        Thread send = new Thread() {&#10;            public void run() {&#10;                try {&#10;                Message message = new Message();&#10;                message.setTo(msg.getRecipient());&#10;                message.setFrom(msg.getSender());&#10;                message.setBody(msg.getContent().toString());&#10;                System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#10;                getConnection().send(message);&#10;                } catch (java.io.IOException e) {&#10;                System.err.println(e.getMessage());&#10;                }&#10;            }&#10;        };&#10;        send.start();&#10;'/>
                              </UML:Method.body>
                              <UML:Method.specification>
                                <UML:Operation xmi.idref = 'a466'/>
                              </UML:Method.specification>
                            </UML:Method>
                          </UML:Classifier.feature>
                        </UML:Class>
                      </UML:Namespace.ownedElement>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a388' name = 'setConnection' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.clientDependency>
                            <UML:Dependency xmi.idref = 'a387'/>
                          </UML:ModelElement.clientDependency>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a471' name = 'connection' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a472'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a473' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a474' language = 'java' body = '// Begin Observable stanza&#10;if (this.connection != connection) {&#10;    // Begin original body&#10;this.connection = connection;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Connection&quot;);&#10;    e.put(&quot;class&quot;, com.jabberwookie.Client2Server.class);&#10;    if (connection != null) {&#10;        e.put(&quot;value&quot;, connection);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a388'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a475' name = 'getConnection' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.clientDependency>
                            <UML:Dependency xmi.idref = 'a476'/>
                          </UML:ModelElement.clientDependency>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a477' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a472'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a478' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a479' language = 'java' body = 'return connection;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a475'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a389' name = 'connection' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a480' language = 'java' body = ''/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a472'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a481' name = 'state' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a482' language = 'java' body = 'new DisconnectedState()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a430'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a483' name = 'Jabber' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a177'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a484' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a380'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a485' name = 'send' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a486' name = 'msg' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a182'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a487' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a488' language = 'java' body = '        state.send(msg);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a485'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a489' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a490' language = 'java' body = '        setName(&quot;Jabber&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a483'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a491' name = 'login' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a492' name = 'uid' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a493' name = 'pwd' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a494' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a495' language = 'java' body = '        this.uid = uid;&#10;        state.login(uid, pwd);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a491'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a496' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a497' language = 'java' body = '        System.out.println(&quot;Registering &quot; + user + &quot; at &quot; + getConnection().getServerName());&#10;        try {&#10;            java.util.Hashtable info = IQRegister.getRequiredRegInfo(getConnection());&#10;            String key, value;&#10;            for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#10;                key = (String) e.nextElement();&#10;                value = (String) info.get(key);&#10;                if (key.equals(Const.USERNAME))&#10;                    info.put(key, user);&#10;                else if (key.equals(Const.PASSWORD))&#10;                    info.put(key, pwd);&#10;                else if (key.equals(Const.EMAIL))&#10;                    info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#10;                else if (key.equals(Const.INSTRUCTIONS))&#10;                    ;&#10;                else&#10;                    System.err.println(&quot;Unknown registration parameter: &quot; + key);&#10;            }&#10;            Chunk chunk = getConnection().send(&#10;                IQRegister.createSetRequest(getConnection().getServerName(), info), 30000);&#10;            return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));&#10;        } catch (java.io.IOException e) {&#10;            System.err.println(e.getMessage());&#10;            e.printStackTrace();&#10;        }&#10;        return false;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a498'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a499' name = 'logout' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Operation xmi.id = 'a500' name = 'addContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a501' name = 'c' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a187'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a502' name = 'removeContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a503' name = 'c' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a187'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a504' name = 'incomingMessage' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a505' name = 'message' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a506'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a507' name = 'incomingIQ' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a508' name = 'iq' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a509'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a510' name = 'incomingPresence' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a511' name = 'presence' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a512'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a14' name = 'connect' visibility = 'protected'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a513' name = 'host' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a498' name = 'registerUser' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a514' name = 'user' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a515' name = 'pwd' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a516' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a330'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a517' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a518' language = 'java' body = '        System.out.println(&quot;Message: &quot; + message);&#10;        im.model.Message msg = new im.model.Message();&#10;        msg.setSender(stripResource(message.getFrom()));&#10;        msg.setRecipient(message.getTo());&#10;        msg.setContent(message.getBody());&#10;        setRecvMsg(msg);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a504'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a519' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a520' language = 'java' body = '        state.logout();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a499'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a521' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a522' language = 'java' body = '        java.util.Enumeration children = iq.getChildren().elements();&#10;        while (children.hasMoreElements()) {&#10;            com.ssttr.xml.XMLElement el = (com.ssttr.xml.XMLElement) children.nextElement();&#10;            if (el instanceof IQRoster) {&#10;                for (java.util.Enumeration items = el.enumerateChildren(); items.hasMoreElements();) {&#10;                    IQRoster.Item item = (IQRoster.Item) items.nextElement();&#10;                    System.out.println(&quot;Roster Item: &quot; + item);&#10;                    if (item.getSubscription().equals(Const.BOTH) || &#10;                            item.getSubscription().equals(Const.TO)) {&#10;                        im.model.Contact c = new im.model.Contact();&#10;                        c.setNetwork(this);&#10;                        c.setUserId(item.getJID());&#10;                        c.setName(item.getItemName());&#10;                        setRecvContact(c);&#10;                    }&#10;                }&#10;            } else {&#10;                System.out.println(&quot;Unknown iq element: &quot; + el);&#10;            }&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a507'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a523' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a524' language = 'java' body = '        String type = presence.getType();&#10;        if (type == null) type = &quot;&quot;;&#10;        if (type.equals(Const.SUBSCRIBE)) {&#10;            // someone wants to subscribe to our presence&#10;            // so we slightly re-write the packet to send back &#10;            presence.setType(Const.SUBSCRIBED);&#10;            System.out.println(presence.getFrom() + &quot; wants to subscribe to your presence, allowing.&quot;);&#10;        } else if (type.equals(Const.UNSUBSCRIBE)) {&#10;            // someone wants to unsubscribe from our presence&#10;            // so we slightly re-write the packet to send back &#10;            presence.setType(Const.UNSUBSCRIBED);&#10;            System.out.println(presence.getFrom() + &quot; wants to unsubscribe from your presence, allowing.&quot;);&#10;        } else if (type.equals(Const.SUBSCRIBED)) {&#10;            System.out.println(&quot;Subscribed to: &quot; + presence);&#10;        } else if (type.equals(Const.UNSUBSCRIBED)) {&#10;            System.out.println(&quot;Unsubscribed from: &quot; + presence);&#10;        } else if (type.equals(Const.UNAVAILABLE)) {&#10;            im.model.Contact c = new im.model.Contact();&#10;            c.setNetwork(this);&#10;            c.setUserId(stripResource(presence.getFrom()));&#10;            c.setStatus(&quot;offline&quot;);&#10;            setRecvContact(c);&#10;            return;&#10;        } else {&#10;            System.out.println(&quot;Received presence: &quot; + presence);&#10;            im.model.Contact c = new im.model.Contact();&#10;            c.setNetwork(this);&#10;            c.setUserId(stripResource(presence.getFrom()));&#10;            if (presence.getShow() != null)&#10;            &#9;c.setStatus(presence.getShow());&#10;            else&#10;            &#9;c.setStatus(Const.AVAILABLE);&#10;            setRecvContact(c);&#10;            return;&#10;        }&#10;        // make sure to return it to the sender and not ourselves&#10;        String from = presence.getTo();&#10;        presence.setTo(presence.getFrom());&#10;        presence.setFrom(from);&#10;        try {&#10;            getConnection().send(presence);&#10;        } catch (java.io.IOException e) {&#10;            e.printStackTrace();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a510'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a525' name = 'stripResource' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a526' name = 'jid' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a527' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a528' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a529' language = 'java' body = '        if (uid.equals(jid)) {&#10;            return jid;&#10;        } else { // strip resource bit if remote user&#10;            Vector strip = com.ssttr.util.Strings.tokenize(jid, &apos;/&apos;);&#10;            return (String) strip.elementAt(0);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a525'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a530' name = 'uid' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a531' language = 'java' body = '&quot;&quot;'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a532' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a533' language = 'java' body = '        state.addContact(c);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a500'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a534' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a535' language = 'java' body = '        state.removeContact(c);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a502'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a536' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a537' language = 'java' body = ''/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a14'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Generalization xmi.id = 'a396' isSpecification = 'false'>
                      <UML:Generalization.child>
                        <UML:Class xmi.idref = 'a16'/>
                      </UML:Generalization.child>
                      <UML:Generalization.parent>
                        <UML:Class xmi.idref = 'a380'/>
                      </UML:Generalization.parent>
                    </UML:Generalization>
                    <UML:Association xmi.id = 'a538' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a539' visibility = 'private' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a540'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a541' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a380'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a542' name = 'state' visibility = 'private'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a543'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a544' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:ModelElement.taggedValue>
                            <UML:TaggedValue xmi.id = 'a545' isSpecification = 'false'>
                              <UML:TaggedValue.dataValue>new DisconnectedState()</UML:TaggedValue.dataValue>
                              <UML:TaggedValue.type>
                                <UML:TagDefinition xmi.idref = 'a4'/>
                              </UML:TaggedValue.type>
                            </UML:TaggedValue>
                          </UML:ModelElement.taggedValue>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a430'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                    <UML:Dependency xmi.id = 'a476' name = 'accessor getConnection()' isSpecification = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a94'/>
                      </UML:ModelElement.stereotype>
                      <UML:Dependency.client>
                        <UML:Operation xmi.idref = 'a475'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Attribute xmi.idref = 'a389'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                    <UML:Association xmi.id = 'a546' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a547' visibility = 'public' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a548'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a549' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a380'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a550' name = 'connection' visibility = 'public'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a551'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a552' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:ModelElement.taggedValue>
                            <UML:TaggedValue xmi.id = 'a553' isSpecification = 'false'>
                              <UML:TaggedValue.dataValue></UML:TaggedValue.dataValue>
                              <UML:TaggedValue.type>
                                <UML:TagDefinition xmi.idref = 'a4'/>
                              </UML:TaggedValue.type>
                            </UML:TaggedValue>
                          </UML:ModelElement.taggedValue>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a472'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Class xmi.id = 'a383' name = 'Network' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a7'/>
                  </UML:ModelElement.stereotype>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a382'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a378' name = 'setName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a377'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a554' name = 'name' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a555' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a556' language = 'java' body = '// Begin Observable stanza&#10;if (this.name != name) {&#10;    // Begin original body&#10;this.name = name;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Name&quot;);&#10;    e.put(&quot;class&quot;, String.class);&#10;    if (name != null) {&#10;        e.put(&quot;value&quot;, name);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a378'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a557' name = 'setRecvContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a558'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a559' name = 'recvContact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a560' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a561' language = 'java' body = '// Begin Observable stanza&#10;if (this.recvContact != recvContact) {&#10;    // Begin original body&#10;this.recvContact = recvContact;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;RecvContact&quot;);&#10;    e.put(&quot;class&quot;, im.model.Contact.class);&#10;    if (recvContact != null) {&#10;        e.put(&quot;value&quot;, recvContact);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a557'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a562' name = 'setRecvMsg' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a563'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a564' name = 'recvMsg' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a182'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a565' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a566' language = 'java' body = '// Begin Observable stanza&#10;if (this.recvMsg != recvMsg) {&#10;    // Begin original body&#10;this.recvMsg = recvMsg;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;RecvMsg&quot;);&#10;    e.put(&quot;class&quot;, im.model.Message.class);&#10;    if (recvMsg != null) {&#10;        e.put(&quot;value&quot;, recvMsg);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a562'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a375' name = 'getName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a374'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a567' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a568' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a569' language = 'java' body = 'return name;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a375'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a372' name = 'getRecvContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a371'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a570' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a571' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a572' language = 'java' body = 'return recvContact;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a372'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a573' name = 'getRecvMsg' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a574'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a575' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a182'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a576' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a577' language = 'java' body = 'return recvMsg;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a573'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a578' name = 'send' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a579' name = 'msg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a182'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a580' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a581' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a578'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a376' name = 'name' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a251'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a582' name = 'recvMsg' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:ModelElement.taggedValue>
                        <UML:TaggedValue xmi.id = 'a583' isSpecification = 'false'>
                          <UML:TaggedValue.dataValue>false</UML:TaggedValue.dataValue>
                          <UML:TaggedValue.type>
                            <UML:TagDefinition xmi.idref = 'a584'/>
                          </UML:TaggedValue.type>
                        </UML:TaggedValue>
                      </UML:ModelElement.taggedValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a182'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a585' name = 'login' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a586' name = 'uid' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a587' name = 'pwd' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a588' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a589' language = 'java' body = '        // your code here&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a585'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a590' name = 'logout' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a591' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a592' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a590'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a373' name = 'recvContact' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a187'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a593' name = 'addContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a594' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a595' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a596' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a593'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a597' name = 'removeContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a598' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a599' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a600' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a597'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a601' name = 'getDefault' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'classifier' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a602' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a603'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a604' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a605' language = 'java' body = '        String[] options = {&#10;            &quot;im.networking.jabber.mejabber.MEJabber&quot;,&#10;            &quot;im.networking.jabber.defaultjabber.DefaultJabber&quot;,&#10;            &quot;im.networking.sms.SMS&quot;&#10;        };&#10;        java.util.Vector networks = new java.util.Vector();&#10;        for (int i = 0; i &lt; options.length; i++) {&#10;            try {&#10;                networks.addElement(Class.forName(options[i]).newInstance());&#10;            } catch (Exception e) {&#10;            }&#10;        }&#10;        Network[] nwArray = new Network[networks.size()];&#10;        networks.copyInto(nwArray);&#10;        return nwArray;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a601'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a563' name = 'accessor setRecvMsg()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a562'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a582'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a574' name = 'accessor getRecvMsg()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a573'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a582'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a558' name = 'accessor setRecvContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a557'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a373'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Abstraction xmi.id = 'a415' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a380'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a606'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Generalization xmi.id = 'a419' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a380'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a383'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:DataType xmi.id = 'a603' name = 'Network[]' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a607' name = 'accessor getNetworkAt()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a608'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a96'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Association xmi.id = 'a609' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a350'/>
              </UML:ModelElement.stereotype>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a610' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a611'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a612' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a101'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a613' name = 'network' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a614'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a615' lower = '1' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a383'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Association xmi.id = 'a616' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a617' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a618'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a619' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a101'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a620' name = 'conversation' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a621'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a622' lower = '0' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a161'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Dependency xmi.id = 'a623' name = 'accessor getConversationAt()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a624'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a109'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a625' name = 'accessor addConversation()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a626'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a109'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a627' name = 'accessor insertConversation()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a628'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a109'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a629' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a30'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a630'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a631' name = 'model' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Dependency xmi.id = 'a632' name = 'accessor getSender()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a633'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a634'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a635' name = 'accessor getStatus()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a636'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a637'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a638' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a350'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a639' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a640'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a641' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a161'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a642' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a643'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a644' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a134'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a645' name = 'accessor getContactAt()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a646'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a647'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a106' name = 'ContactList' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a7'/>
                  </UML:ModelElement.stereotype>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a648'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a649' name = 'getContacts' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a650'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a651' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a283'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a652' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a653' language = 'java' body = 'return contact;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a649'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a646' name = 'getContactAt' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a645'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a654' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a293'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a655' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a656' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a657' language = 'java' body = 'try {&#10;    return (im.model.Contact) contact.get(index);&#10;} catch (IndexOutOfBoundsException e) {&#10;    return null;&#10;}'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a646'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a658' name = 'addContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a659'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a660' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a661' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a662' language = 'java' body = '// Begin Observable stanza&#10;if (! this.contact.contains(contact)) {&#10;    // Begin original body&#10;if (! this.contact.contains(contact)) {&#10;    this.contact.add(contact);&#10;    contact.setList(this);&#10;}&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Contact&quot;);&#10;    e.put(&quot;class&quot;, im.model.Contact.class);&#10;    if (contact != null) {&#10;        e.put(&quot;value&quot;, contact);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a658'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a663' name = 'insertContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a664'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a665' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a666' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a293'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a667' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a668' language = 'java' body = '// Begin Observable stanza&#10;if (! this.contact.contains(contact)) {&#10;    // Begin original body&#10;if (! this.contact.contains(contact)) {&#10;    try {&#10;    this.contact.add(index, contact);&#10;} catch (IndexOutOfBoundsException e) {&#10;    this.contact.add(contact);&#10;};&#10;    contact.setList(this);&#10;}&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Contact&quot;);&#10;    e.put(&quot;class&quot;, im.model.Contact.class);&#10;    if (contact != null) {&#10;        e.put(&quot;value&quot;, contact);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a663'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a669' name = 'removeContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a670'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a671' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a672' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a673' language = 'java' body = '// Begin Observable stanza&#10;if (this.contact.contains(contact)) {&#10;    // Begin original body&#10;if (this.contact.contains(contact)) {&#10;    this.contact.remove(contact);&#10;    contact.setList(null);&#10;}&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Contact&quot;);&#10;    e.put(&quot;class&quot;, im.model.Contact.class);&#10;    if (contact != null) {&#10;        e.put(&quot;value&quot;, contact);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a669'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a647' name = 'contact' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a674' language = 'java' body = 'new java.util.ArrayList()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a283'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a675' name = 'getIdentity' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a676' name = 'forNw' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a383'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a677' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a678'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a679' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a680' language = 'java' body = '        for (int i = 0; i &lt; getContacts().size(); i ++) {&#10;            Contact contact = getContactAt(i);&#10;            if ((contact instanceof Identity) &amp;&amp; (contact.getNetwork() == forNw))&#10;                return (Identity) contact;&#10;        }&#10;        return null;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a675'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a681' name = 'getUserName' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a682' name = 'userId' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a683' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a684' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a685' language = 'java' body = '        for (int i = 0; i &lt; getContacts().size(); i ++) {&#10;            if (getContactAt(i).getUserId().equals(userId))&#10;                return getContactAt(i).getName();&#10;        }&#10;        return userId;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a681'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a659' name = 'accessor addContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a658'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a647'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a686' name = 'NetworkSpecificData' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'true'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a7'/>
                  </UML:ModelElement.stereotype>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a687'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a688' name = 'setNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a689'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a690' name = 'network' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a383'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a691' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a692' language = 'java' body = '// Begin Observable stanza&#10;if (this.network != network) {&#10;    // Begin original body&#10;this.network = network;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Network&quot;);&#10;    e.put(&quot;class&quot;, im.networking.Network.class);&#10;    if (network != null) {&#10;        e.put(&quot;value&quot;, network);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a688'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a693' name = 'getNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a694'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a695' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a383'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a696' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a697' language = 'java' body = 'return network;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a693'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a698' name = 'network' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a699' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a383'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a700' name = 'accessor setName()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a701'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a702'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a670' name = 'accessor removeContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a669'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a647'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a703' name = 'accessor getList()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a704'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a705'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Generalization xmi.id = 'a706' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a187'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a686'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Dependency xmi.id = 'a707' name = 'accessor getPassword()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a708'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a709'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a710' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a711' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a712'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a713' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a161'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a714' name = 'contact' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a715'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a716' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a187'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a717' name = 'accessor getConversation()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a718'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a719'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Generalization xmi.id = 'a720' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a161'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a19'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Dependency xmi.id = 'a721' name = 'accessor getName()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a722'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a702'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a723' name = 'accessor getRecipient()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a724'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a725'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a726' name = 'accessor getContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a727'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a728'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a729' name = 'accessor getContent()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a730'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a731'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a732' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a733' name = 'conversation' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'composite'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a734'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a735' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a161'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a736' name = 'message' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a737'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a738' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a182'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a739' name = 'accessor setContent()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a740'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a731'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Generalization xmi.id = 'a741' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a678'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a187'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a678' name = 'Identity' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a741'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a742' name = 'setPassword' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a743'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a744' name = 'password' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a745' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a746' language = 'java' body = '// Begin Observable stanza&#10;if (this.password != password) {&#10;    // Begin original body&#10;this.password = password;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Password&quot;);&#10;    e.put(&quot;class&quot;, String.class);&#10;    if (password != null) {&#10;        e.put(&quot;value&quot;, password);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a742'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a708' name = 'getPassword' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a707'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a747' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a748' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a749' language = 'java' body = 'return password;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a708'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a709' name = 'password' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a251'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a750' name = 'accessor setMessage()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a751'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a752'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a753' name = 'accessor setContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a754'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a728'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a755' name = 'accessor setUserId()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a756'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a757'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a758' name = 'accessor getUserId()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a759'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a757'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a743' name = 'accessor setPassword()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a742'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a709'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Generalization xmi.id = 'a648' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a106'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a19'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a161' name = 'Conversation' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a7'/>
                  </UML:ModelElement.stereotype>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a720'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a751' name = 'setMessage' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a750'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a760' name = 'message' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a182'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a761' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a762' language = 'java' body = '// Begin Observable stanza&#10;if (this.message != message) {&#10;    // Begin original body&#10;if (this.message != message) {&#10;    this.message = message;&#10;    message.setConversation(this);&#10;}&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Message&quot;);&#10;    e.put(&quot;class&quot;, im.model.Message.class);&#10;    if (message != null) {&#10;        e.put(&quot;value&quot;, message);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a751'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a754' name = 'setContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a753'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a763' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a764' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a765' language = 'java' body = '// Begin Observable stanza&#10;if (this.contact != contact) {&#10;    // Begin original body&#10;this.contact = contact;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Contact&quot;);&#10;    e.put(&quot;class&quot;, im.model.Contact.class);&#10;    if (contact != null) {&#10;        e.put(&quot;value&quot;, contact);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a754'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a766' name = 'getMessage' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a767'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a768' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a182'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a769' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a770' language = 'java' body = 'return message;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a766'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a727' name = 'getContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a726'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a771' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a187'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a772' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a773' language = 'java' body = 'return contact;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a727'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a752' name = 'message' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a774' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a182'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a728' name = 'contact' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a775' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a187'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Class xmi.id = 'a187' name = 'Contact' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a706'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a776' name = 'setStatus' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a777'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a778' name = 'status' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a779' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a780' language = 'java' body = '// Begin Observable stanza&#10;if (this.status != status) {&#10;    // Begin original body&#10;this.status = status;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Status&quot;);&#10;    e.put(&quot;class&quot;, String.class);&#10;    if (status != null) {&#10;        e.put(&quot;value&quot;, status);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a776'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a701' name = 'setName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a700'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a781' name = 'name' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a782' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a783' language = 'java' body = '// Begin Observable stanza&#10;if (this.name != name) {&#10;    // Begin original body&#10;this.name = name;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Name&quot;);&#10;    e.put(&quot;class&quot;, String.class);&#10;    if (name != null) {&#10;        e.put(&quot;value&quot;, name);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a701'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a784' name = 'setList' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a785'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a786' name = 'list' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a106'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a787' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a788' language = 'java' body = '// Begin Observable stanza&#10;if (this.list != list) {&#10;    // Begin original body&#10;if (this.list != list) {&#10;    if (this.list != null) this.list.removeContact(this);&#10;    this.list = list;&#10;    if (list != null) list.addContact(this);&#10;}&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;List&quot;);&#10;    e.put(&quot;class&quot;, im.model.ContactList.class);&#10;    if (list != null) {&#10;        e.put(&quot;value&quot;, list);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a784'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a756' name = 'setUserId' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a755'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a789' name = 'userId' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a790' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a791' language = 'java' body = '// Begin Observable stanza&#10;if (this.userId != userId) {&#10;    // Begin original body&#10;this.userId = userId;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;UserId&quot;);&#10;    e.put(&quot;class&quot;, String.class);&#10;    if (userId != null) {&#10;        e.put(&quot;value&quot;, userId);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a756'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a636' name = 'getStatus' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a635'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a792' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a793' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a794' language = 'java' body = 'return status;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a636'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a722' name = 'getName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a721'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a795' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a796' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a797' language = 'java' body = 'return name;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a722'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a704' name = 'getList' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a703'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a798' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a106'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a799' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a800' language = 'java' body = 'return list;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a704'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a759' name = 'getUserId' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a758'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a801' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a802' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a803' language = 'java' body = 'return userId;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a759'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a705' name = 'list' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a804' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a106'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a757' name = 'userId' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a251'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a702' name = 'name' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a251'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a637' name = 'status' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a251'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Generalization xmi.id = 'a805' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a182'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a686'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Dependency xmi.id = 'a806' name = 'accessor setRecipient()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a807'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a725'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a767' name = 'accessor getMessage()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a766'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a752'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a808' name = 'accessor setSender()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a809'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a634'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a777' name = 'accessor setStatus()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a776'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a637'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a689' name = 'accessor setNetwork()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a688'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a698'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a182' name = 'Message' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a805'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a810' name = 'setConversation' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a811'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a812' name = 'conversation' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a161'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a813' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a814' language = 'java' body = '// Begin Observable stanza&#10;if (this.conversation != conversation) {&#10;    // Begin original body&#10;if (this.conversation != conversation) {&#10;    this.conversation = conversation;&#10;    conversation.setMessage(this);&#10;}&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Conversation&quot;);&#10;    e.put(&quot;class&quot;, im.model.Conversation.class);&#10;    if (conversation != null) {&#10;        e.put(&quot;value&quot;, conversation);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a810'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a807' name = 'setRecipient' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a806'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a815' name = 'recipient' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a816' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a817' language = 'java' body = '// Begin Observable stanza&#10;if (this.recipient != recipient) {&#10;    // Begin original body&#10;this.recipient = recipient;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Recipient&quot;);&#10;    e.put(&quot;class&quot;, String.class);&#10;    if (recipient != null) {&#10;        e.put(&quot;value&quot;, recipient);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a807'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a740' name = 'setContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a739'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a818' name = 'content' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a819'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a820' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a821' language = 'java' body = '// Begin Observable stanza&#10;if (this.content != content) {&#10;    // Begin original body&#10;this.content = content;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Content&quot;);&#10;    e.put(&quot;class&quot;, Object.class);&#10;    if (content != null) {&#10;        e.put(&quot;value&quot;, content);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a740'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a809' name = 'setSender' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a808'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a822' name = 'sender' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a823' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a824' language = 'java' body = '// Begin Observable stanza&#10;if (this.sender != sender) {&#10;    // Begin original body&#10;this.sender = sender;&#10;    // End original body&#10;    setChanged();&#10;    java.util.Hashtable e = new java.util.Hashtable();&#10;    e.put(&quot;name&quot;, &quot;Sender&quot;);&#10;    e.put(&quot;class&quot;, String.class);&#10;    if (sender != null) {&#10;        e.put(&quot;value&quot;, sender);&#10;    }&#10;    notifyObservers(e);&#10;}&#10;// End Observable stanza'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a809'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a718' name = 'getConversation' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a717'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a825' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a161'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a826' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a827' language = 'java' body = 'return conversation;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a718'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a724' name = 'getRecipient' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a723'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a828' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a829' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a830' language = 'java' body = 'return recipient;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a724'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a730' name = 'getContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a729'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a831' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a819'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a832' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a833' language = 'java' body = 'return content;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a730'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a633' name = 'getSender' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a632'/>
                      </UML:ModelElement.clientDependency>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a834' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a835' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a836' language = 'java' body = 'return sender;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a633'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a719' name = 'conversation' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a837' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a161'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a634' name = 'sender' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a251'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a725' name = 'recipient' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a251'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a838' name = 'send' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a839' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a840' language = 'java' body = '        if (getNetwork() != null) {&#10;            getNetwork().send(this);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a838'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a731' name = 'content' visibility = 'private' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a819'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Dependency xmi.id = 'a785' name = 'accessor setList()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a784'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a705'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a811' name = 'accessor setConversation()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a810'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a719'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Generalization xmi.id = 'a687' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a686'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a19'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Dependency xmi.id = 'a694' name = 'accessor getNetwork()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a693'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a698'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a841' name = 'BelongsToNetwork' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a842' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a843'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a844' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a686'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a845' name = 'network' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a846'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a847' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a383'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Dependency xmi.id = 'a650' name = 'accessor getContacts()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a649'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a647'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a664' name = 'accessor insertContact()' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a94'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Operation xmi.idref = 'a663'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Attribute xmi.idref = 'a647'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Association xmi.id = 'a848' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a350'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a849' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a850'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a851' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a187'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a852' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a853'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a854' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a221'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a855' name = 'accessor getNetworks()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a856'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a96'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a857' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a28'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a630'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a630' name = 'view' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Interface xmi.id = 'a332' name = 'NewContactDialog' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a858' name = 'getUid' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a859' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a860' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a861' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a858'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a862' name = 'getName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a863' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a864' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a865' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a862'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a866' name = 'getNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a867' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a293'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a868' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a869' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a866'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a870' name = 'getPassword' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a871' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a872' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a873' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a874'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a875' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a876' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a872'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a877' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a878' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a870'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a879' name = 'addNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a880' name = 'n' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a881' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a882' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a879'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a269' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a146'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a874'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Package xmi.id = 'a883' name = 'awt' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Dependency xmi.id = 'a884' isSpecification = 'false'>
                      <UML:Dependency.client>
                        <UML:Class xmi.idref = 'a26'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Package xmi.idref = 'a71'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                    <UML:Class xmi.id = 'a885' name = 'AWTViewFactory' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a886'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a887' name = 'createContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a888' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a217'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a889' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a890' language = 'java' body = '        return new AWTContactListView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a887'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a891' name = 'createNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a892' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a332'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a893' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a894' language = 'java' body = '        return new AWTNewContactDialog();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a891'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a895' name = 'createConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a896' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a138'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a897' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a898' language = 'java' body = '        return new AWTConversationView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a895'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a49' name = 'AWTViewFactory' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a177'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a899' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a885'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a900' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a901' language = 'java' body = '        // fail factory creation if AWT not available&#10;        Class.forName(&quot;java.awt.Toolkit&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a49'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a21' name = 'AWTContactListView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a902'/>
                        <UML:Dependency xmi.idref = 'a74'/>
                        <UML:Dependency xmi.idref = 'a903'/>
                        <UML:Dependency xmi.idref = 'a20'/>
                        <UML:Dependency xmi.idref = 'a43'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a78'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a904' name = 'AWTContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a177'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a905' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a21'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a906' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a907' language = 'java' body = '        addContactBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifyAddClicked();&#10;            }&#10;        });&#10;        removeContactBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifyRemoveClicked();&#10;            }&#10;        });&#10;        list.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifyContactAction();&#10;            }&#10;        });&#10;        setLayout(new BorderLayout());&#10;        add(list, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new FlowLayout());&#10;        btnPanel.add(addContactBtn);&#10;        btnPanel.add(removeContactBtn);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        im.InstantMessagingClient.getInstance().add(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a904'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a908' name = 'list' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a909' language = 'java' body = 'new List()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a81'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a910' name = 'addContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a911' language = 'java' body = 'new Button(&quot;Add&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a86'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a912' name = 'removeContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a913' language = 'java' body = 'new Button(&quot;Remove&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a86'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a914' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a915' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a70'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a916' name = 'addContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a917' name = 'contact' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a918' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a293'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a919' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a920' language = 'java' body = '        list.add(contact, index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a916'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a921' name = 'removeContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a922' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a293'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a923' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a924' language = 'java' body = '        list.remove(index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a921'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a925' name = 'getSelectedContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a926' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a293'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a927' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a928' language = 'java' body = '        return list.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a925'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a929' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a930' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a931'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a932' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a933' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a929'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a934' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a935' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a22'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a936' name = 'notifyAddClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a937' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a938' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAdd();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a936'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a939' name = 'notifyRemoveClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a940' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a941' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListRemove();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a939'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a942' name = 'notifyContactAction' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a943' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a944' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAction();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a942'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a30' name = 'AWTConversationView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a945'/>
                        <UML:Dependency xmi.idref = 'a69'/>
                        <UML:Dependency xmi.idref = 'a629'/>
                        <UML:Dependency xmi.idref = 'a77'/>
                        <UML:Dependency xmi.idref = 'a29'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a85'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a946' name = 'AWTConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a177'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a947' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a30'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a948' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a949' language = 'java' body = '        addWindowListener(new WindowAdapter() {&#10;            public void windowClosing(WindowEvent e) {&#10;                notifyClose();&#10;            }&#10;        });&#10;        sendBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifySendClicked();&#10;            }&#10;        });&#10;        messageField.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifySendClicked();&#10;            }&#10;        });&#10;        setTitle(&quot;Message&quot;);&#10;        setLayout(new BorderLayout());&#10;        textConvField.setEditable(false);&#10;        convPanel.setLayout(new BorderLayout());&#10;        convPanel.add(textConvField, BorderLayout.CENTER);&#10;        add(convPanel, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new BorderLayout());&#10;        btnPanel.add(sendBtn, BorderLayout.EAST);&#10;        btnPanel.add(messageField, BorderLayout.CENTER);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;        setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a946'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a950' name = 'messageField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a951' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a73'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a952' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a953' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a70'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a954' name = 'sendBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a955' language = 'java' body = 'new Button(&quot;Send&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a86'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a956' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a957' language = 'java' body = '        return messageField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a958'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a959' name = 'convPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a960' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a70'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a961' name = 'addContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a962' name = 'content' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a819'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a958' name = 'getContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a963' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a819'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a964' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a965' language = 'java' body = '        if (content instanceof String) {&#10;            textConvField.append(content.toString() + &quot;\n&quot;);&#10;        } else if (content instanceof Image) {&#10;            Image im = (Image) content;&#10;            convPanel.setSize(im.getWidth(convPanel), im.getHeight(convPanel));&#10;            Graphics g = convPanel.getGraphics();&#10;            g.drawImage(im, 1, 1, convPanel);&#10;            g.finalize();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a961'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a966' name = 'textConvField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a967' language = 'java' body = 'new TextArea()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a79'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a968' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a969' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a22'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a970' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a971' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a972'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a973' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a974' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a970'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a975' name = 'notifyClose' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a976' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a977' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationClose();&#10;        }&#10;        setVisible(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a975'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a978' name = 'notifySendClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a979' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a980' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationSend();&#10;        }&#10;        messageField.setText(&quot;&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a978'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a981' name = 'setVisible' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a982' name = 'visible' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a330'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a983' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a984' language = 'java' body = '        if (!isShowing() &amp;&amp; visible) {&#10;            pop();&#10;        }&#10;        super.setVisible(visible);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a981'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a985' name = 'pop' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a986' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a987' language = 'java' body = '        im.InstantMessagingClient.getInstance().play(getClass().getResource(&quot;pop.au&quot;));&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a985'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a26' name = 'AWTNewContactDialog' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a988'/>
                        <UML:Dependency xmi.idref = 'a25'/>
                        <UML:Dependency xmi.idref = 'a884'/>
                        <UML:Dependency xmi.idref = 'a989'/>
                        <UML:Dependency xmi.idref = 'a41'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a82'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a990' name = 'AWTNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a177'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a991' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a26'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a992' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a993' language = 'java' body = '        this.addWindowListener(new WindowAdapter() {&#10;            public void windowClosing(WindowEvent e) {&#10;                onCancel();&#10;            }&#10;        });&#10;        cancelBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                onCancel();&#10;            }&#10;        });&#10;        okBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                onOk();&#10;            }&#10;        });&#10;        setTitle(&quot;Add new contact&quot;);&#10;        setLayout(new BorderLayout());&#10;        dlgPanel.setLayout(new GridLayout(4,2));&#10;        dlgPanel.add(network);&#10;        dlgPanel.add(networkField);&#10;        dlgPanel.add(uid);&#10;        dlgPanel.add(uidField);&#10;        dlgPanel.add(name);&#10;        dlgPanel.add(nameField);&#10;        dlgPanel.add(password);&#10;        passwordField.setEchoChar(&apos;*&apos;);&#10;        dlgPanel.add(passwordField);&#10;        add(dlgPanel, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new FlowLayout());&#10;        btnPanel.add(okBtn);&#10;        btnPanel.add(cancelBtn);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;        setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a990'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a994' name = 'dlgPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a995' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a70'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a996' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a997' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a70'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a998' name = 'okBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a999' language = 'java' body = 'new Button(&quot;OK&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a86'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1000' name = 'cancelBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1001' language = 'java' body = 'new Button(&quot;Cancel&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a86'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1002' name = 'uid' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1003' language = 'java' body = 'new Label(&quot;User ID&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a80'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1004' name = 'name' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1005' language = 'java' body = 'new Label(&quot;Name&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a80'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1006' name = 'uidField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1007' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a73'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1008' name = 'nameField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1009' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a73'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1010' name = 'network' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1011' language = 'java' body = 'new Label(&quot;Network&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a80'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1012' name = 'networkField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1013' language = 'java' body = 'new Choice()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a84'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1014' name = 'getUid' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1015' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1016' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1017' language = 'java' body = '        return uidField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1014'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1018' name = 'getName' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1019' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1020' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1021' language = 'java' body = '        return nameField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1018'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1022' name = 'getNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1023' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a293'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1024' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1025' language = 'java' body = '        return networkField.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1022'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1026' name = 'getPassword' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1027' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a1028' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1029' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a874'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a1030' name = 'onOk' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1031' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1032' language = 'java' body = '        setVisible(false);&#10;        notifyListeners(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1030'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1033' name = 'onCancel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1034' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1035' language = 'java' body = '        setVisible(false);&#10;        notifyListeners(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1033'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a1036' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1037' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a22'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a1038' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1039' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1028'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1040' name = 'notifyListeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1041' name = 'okClicked' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a330'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1042' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1043' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((NewContactDialogListener) listeners.elementAt(i)).onNewContactDialogClose(okClicked, this);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1040'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a1044' name = 'password' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1045' language = 'java' body = 'new Label(&quot;Password&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a80'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1046' name = 'passwordField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1047' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a73'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a1048' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1049' language = 'java' body = '        return passwordField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1026'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1050' name = 'addNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1051' name = 'n' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1052' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1053' language = 'java' body = '        networkField.add(n);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1050'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Generalization xmi.id = 'a886' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a885'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a1054'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Interface xmi.id = 'a138' name = 'ConversationView' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1055' name = 'getContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1056' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a819'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1057' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1058' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1055'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1059' name = 'addContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1060' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a819'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1061' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1062' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1059'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1063' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1064' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a972'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1065' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1066' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1063'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1067' name = 'setTitle' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1068' name = 't' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1069' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1070' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1067'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1071' name = 'toFront' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1072' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1073' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1071'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Package xmi.id = 'a1074' name = 'swing' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a28' name = 'SwingContactListView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a1075'/>
                        <UML:Dependency xmi.idref = 'a75'/>
                        <UML:Dependency xmi.idref = 'a857'/>
                        <UML:Dependency xmi.idref = 'a27'/>
                        <UML:Dependency xmi.idref = 'a1076'/>
                        <UML:Dependency xmi.idref = 'a67'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a1077'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a1078' name = 'list' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1079' language = 'java' body = 'new JList()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1080'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1081' name = 'addContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1082' language = 'java' body = 'new JButton(&quot;Add&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1083'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1084' name = 'removeContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1085' language = 'java' body = 'new JButton(&quot;Remove&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1083'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1086' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1087' language = 'java' body = 'new JPanel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1088'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1089' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1090' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a22'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1091' name = 'SwingContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a177'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1092' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a28'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1093' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1094' language = 'java' body = '        addContactBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifyAddClicked();&#10;            }&#10;        });&#10;        removeContactBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifyRemoveClicked();&#10;            }&#10;        });&#10;        list.addMouseListener(new MouseAdapter() {&#10;            public void mouseClicked(MouseEvent e) {&#10;                if (e.getClickCount() == 2) {&#10;                    notifyContactAction();&#10;                }&#10;            }&#10;        });&#10;        setLayout(new BorderLayout());&#10;        listScroll.getViewport().setView(list);&#10;        add(listScroll, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new FlowLayout());&#10;        btnPanel.add(addContactBtn);&#10;        btnPanel.add(removeContactBtn);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        im.InstantMessagingClient.getInstance().add(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1091'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a1095' name = 'listScroll' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1096' language = 'java' body = 'new JScrollPane()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1097'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1098' name = 'addContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1099' name = 'contact' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a1100' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a293'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1101' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1102' language = 'java' body = '        listAdd(contact, index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1098'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1103' name = 'removeContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1104' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a293'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1105' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1106' language = 'java' body = '        listRemove(index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1103'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1107' name = 'getSelectedContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1108' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a293'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1109' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1110' language = 'java' body = '        return list.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1107'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1111' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1112' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a931'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1113' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1114' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1111'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1115' name = 'notifyAddClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1116' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1117' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAdd();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1115'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1118' name = 'notifyRemoveClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1119' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1120' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListRemove();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1118'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1121' name = 'notifyContactAction' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1122' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1123' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAction();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1121'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1124' name = 'listAdd' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1125' name = 'item' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a1126' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a293'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1127' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1128' language = 'java' body = '        Vector listData = new Vector();&#10;        ListModel listModel = list.getModel();&#10;        for (int i = 0; i &lt; listModel.getSize(); i++) {&#10;            if (i == index) {&#10;                listData.addElement(item);&#10;            }&#10;            listData.addElement(listModel.getElementAt(i));&#10;        }&#10;        if (index == listModel.getSize()) {&#10;            listData.addElement(item);&#10;        }&#10;        list.setListData(listData);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1124'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1129' name = 'listRemove' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1130' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a293'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1131' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1132' language = 'java' body = '        Vector listData = new Vector();&#10;        ListModel listModel = list.getModel();&#10;        for (int i = 0; i &lt; listModel.getSize(); i++) {&#10;            if (i != index) {&#10;                listData.addElement(listModel.getElementAt(i));&#10;            }&#10;        }&#10;        list.setListData(listData);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1129'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a1133' name = 'SwingViewFactory' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a1134'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a1135' name = 'createContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1136' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a217'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1137' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1138' language = 'java' body = '        return new SwingContactListView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1135'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1139' name = 'createNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1140' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a332'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1141' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1142' language = 'java' body = '        return new SwingNewContactDialog();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1139'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1143' name = 'createConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1144' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a138'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1145' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1146' language = 'java' body = '        return new SwingConversationView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1143'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a51' name = 'SwingViewFactory' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a177'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1147' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a1133'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1148' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1149' language = 'java' body = '        // fail factory creation if Swing not available&#10;        Class.forName(&quot;javax.swing.UIManager&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a51'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a37' name = 'SwingNewContactDialog' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a1150'/>
                        <UML:Dependency xmi.idref = 'a76'/>
                        <UML:Dependency xmi.idref = 'a1151'/>
                        <UML:Dependency xmi.idref = 'a1152'/>
                        <UML:Dependency xmi.idref = 'a87'/>
                        <UML:Dependency xmi.idref = 'a36'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a1153'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a1154' name = 'dlgPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1155' language = 'java' body = 'new JPanel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1088'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1156' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1157' language = 'java' body = 'new JPanel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1088'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1158' name = 'okBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1159' language = 'java' body = 'new JButton(&quot;OK&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1083'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1160' name = 'cancelBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1161' language = 'java' body = 'new JButton(&quot;Cancel&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1083'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1162' name = 'uid' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1163' language = 'java' body = 'new JLabel(&quot;User ID&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1164'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1165' name = 'name' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1166' language = 'java' body = 'new JLabel(&quot;Name&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1164'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1167' name = 'uidField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1168' language = 'java' body = 'new JTextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1169'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1170' name = 'nameField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1171' language = 'java' body = 'new JTextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1169'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1172' name = 'network' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1173' language = 'java' body = 'new JLabel(&quot;Network&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1164'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1174' name = 'networkField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1175' language = 'java' body = 'new JComboBox()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1176'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1177' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1178' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a22'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1179' name = 'SwingNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a177'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1180' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a37'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1181' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1182' language = 'java' body = '        this.addWindowListener(new WindowAdapter() {&#10;            public void windowClosing(WindowEvent e) {&#10;                onCancel();&#10;            }&#10;        });&#10;        cancelBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                onCancel();&#10;            }&#10;        });&#10;        okBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                onOk();&#10;            }&#10;        });&#10;        setTitle(&quot;Add new contact&quot;);&#10;        getContentPane().setLayout(new BorderLayout());&#10;        dlgPanel.setLayout(new GridLayout(4,2));&#10;        dlgPanel.add(network);&#10;        dlgPanel.add(networkField);&#10;        dlgPanel.add(uid);&#10;        dlgPanel.add(uidField);&#10;        dlgPanel.add(name);&#10;        dlgPanel.add(nameField);&#10;        dlgPanel.add(password);&#10;        dlgPanel.add(passwordField);&#10;        getContentPane().add(dlgPanel, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new FlowLayout());&#10;        btnPanel.add(okBtn);&#10;        btnPanel.add(cancelBtn);&#10;        getContentPane().add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;        setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1179'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1183' name = 'makeObject' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1184' name = 's' isSpecification = 'false' kind = 'in'>
                              <UML:ModelElement.taggedValue>
                                <UML:TaggedValue xmi.id = 'a1185' isSpecification = 'false'>
                                  <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                  <UML:TaggedValue.type>
                                    <UML:TagDefinition xmi.idref = 'a425'/>
                                  </UML:TaggedValue.type>
                                </UML:TaggedValue>
                              </UML:ModelElement.taggedValue>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a1186' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a819'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1187' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1188' language = 'java' body = '        return new Object() {&#10;            public String toString() {&#10;                return s;&#10;            }&#10;        };&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1183'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1189' name = 'getUid' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1190' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1191' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1192' language = 'java' body = '        return uidField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1189'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1193' name = 'getName' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1194' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1195' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1196' language = 'java' body = '        return nameField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1193'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1197' name = 'getNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1198' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a293'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1199' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1200' language = 'java' body = '        return networkField.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1197'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1201' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1202' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a874'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1203' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1204' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1201'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1205' name = 'onOk' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1206' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1207' language = 'java' body = '        setVisible(false);&#10;        notifyListeners(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1205'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1208' name = 'onCancel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1209' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1210' language = 'java' body = '        setVisible(false);&#10;        notifyListeners(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1208'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1211' name = 'notifyListeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1212' name = 'okClicked' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a330'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1213' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1214' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((NewContactDialogListener) listeners.elementAt(i)).onNewContactDialogClose(okClicked, this);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1211'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a1215' name = 'password' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1216' language = 'java' body = 'new JLabel(&quot;Password&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1164'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1217' name = 'passwordField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1218' language = 'java' body = 'new JPasswordField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1219'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1220' name = 'getPassword' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1221' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1222' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1223' language = 'java' body = '        return passwordField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1220'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1224' name = 'addNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1225' name = 'n' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a251'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1226' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1227' language = 'java' body = '        networkField.addItem(makeObject(n));&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1224'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a35' name = 'SwingConversationView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a1228'/>
                        <UML:Dependency xmi.idref = 'a1229'/>
                        <UML:Dependency xmi.idref = 'a1230'/>
                        <UML:Dependency xmi.idref = 'a68'/>
                        <UML:Dependency xmi.idref = 'a72'/>
                        <UML:Dependency xmi.idref = 'a34'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a1231'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a1232' name = 'messageField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1233' language = 'java' body = 'new JTextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1169'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1234' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1235' language = 'java' body = 'new JPanel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1088'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1236' name = 'sendBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1237' language = 'java' body = 'new JButton(&quot;Send&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1083'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1238' name = 'convPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1239' language = 'java' body = 'new JPanel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1088'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1240' name = 'textConvField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1241' language = 'java' body = 'new JTextPane()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1242'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1243' name = 'textConvScroll' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1244' language = 'java' body = 'new JScrollPane()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a1097'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a1245' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a1246' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a22'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a1247' name = 'SwingConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a177'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1248' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a35'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1249' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1250' language = 'java' body = '        addWindowListener(new WindowAdapter() {&#10;            public void windowClosing(WindowEvent e) {&#10;                notifyClose();&#10;            }&#10;        });&#10;        sendBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifySendClicked();&#10;            }&#10;        });&#10;        messageField.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifySendClicked();&#10;            }&#10;        });&#10;        setTitle(&quot;Message&quot;);&#10;        getContentPane().setLayout(new BorderLayout());&#10;        textConvField.setEditable(false);&#10;        textConvScroll.setPreferredSize(new Dimension(500, 300));&#10;        textConvScroll.getViewport().setView(textConvField);&#10;        convPanel.setLayout(new BorderLayout());&#10;        convPanel.add(textConvScroll, BorderLayout.CENTER);&#10;        getContentPane().add(convPanel, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new BorderLayout());&#10;        btnPanel.add(sendBtn, BorderLayout.EAST);&#10;        btnPanel.add(messageField, BorderLayout.CENTER);&#10;        getContentPane().add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;        setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1247'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1251' name = 'getContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1252' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a819'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1253' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1254' language = 'java' body = '        return messageField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1251'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1255' name = 'addContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1256' name = 'content' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a819'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1257' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1258' language = 'java' body = '        if (content instanceof String) {&#10;            textConvField.setText(textConvField.getText() + content.toString() + &quot;\n&quot;);&#10;        } else if (content instanceof Image) {&#10;            Image im = (Image) content;&#10;            convPanel.setSize(im.getWidth(convPanel), im.getHeight(convPanel));&#10;            Graphics g = convPanel.getGraphics();&#10;            g.drawImage(im, 1, 1, convPanel);&#10;            g.finalize();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1255'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1259' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1260' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a972'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1261' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1262' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1259'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1263' name = 'notifyClose' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1264' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1265' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationClose();&#10;        }&#10;        setVisible(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1263'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1266' name = 'notifySendClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1267' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1268' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationSend();&#10;        }&#10;        messageField.setText(&quot;&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1266'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1269' name = 'setVisible' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a1270' name = 'visible' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a330'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a1271' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1272' language = 'java' body = '        if (!isShowing() &amp;&amp; visible) {&#10;            pop();&#10;        }&#10;        super.setVisible(visible);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1269'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a1273' name = 'pop' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a1274' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a1275' language = 'java' body = '        im.InstantMessagingClient.getInstance().play(getClass().getResource(&quot;pop.wav&quot;));&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a1273'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Interface xmi.id = 'a217' name = 'ContactListView' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1276' name = 'addContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1277' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a251'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a1278' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a293'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1279' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1280' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1276'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1281' name = 'removeContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1282' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a293'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1283' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1284' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1281'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1285' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1286' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a931'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1287' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1288' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1285'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1289' name = 'getSelectedContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1290' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a293'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1291' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1292' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1289'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1293' name = 'setEnabled' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1294' name = 'enabled' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a330'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1295' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1296' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1293'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a1075' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a28'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a217'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a270' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a146'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a931'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Class xmi.id = 'a1054' name = 'ViewFactory' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1297' name = 'createContactListView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1298' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a217'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1299' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1300' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1297'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1301' name = 'createNewContactDialog' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1302' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a332'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1303' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1304' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1301'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1305' name = 'createConversationView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1306' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a138'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1307' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1308' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1305'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1309' name = 'getDefault' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'classifier' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1310' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a1054'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1311' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1312' language = 'java' body = '        String[] options = {&#10;            &quot;im.view.swing.SwingViewFactory&quot;,&#10;            &quot;im.view.awt.AWTViewFactory&quot;,&#10;            &quot;im.view.lcdui.LCDUIViewFactory&quot;&#10;        };&#10;        ViewFactory factory = null;&#10;        for (int i = 0; i &lt; options.length &amp;&amp; factory == null; i++) {&#10;            try {&#10;               factory = (ViewFactory) Class.forName(options[i]).newInstance();&#10;            } catch (Exception e) {&#10;            }&#10;        }&#10;        return factory;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1309'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Abstraction xmi.id = 'a1228' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a35'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a138'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Generalization xmi.id = 'a1134' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a1133'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a1054'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Abstraction xmi.id = 'a988' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a26'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a332'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a1150' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a37'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a332'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a945' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a30'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a138'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a931' name = 'ContactListViewListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1313' name = 'onContactListAdd' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1314' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1315' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1313'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1316' name = 'onContactListRemove' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1317' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1318' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1316'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1319' name = 'onContactListAction' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1320' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1321' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1319'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a902' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a21'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a217'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a972' name = 'ConversationViewListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1322' name = 'onConversationSend' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1323' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1324' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1322'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a1325' name = 'onConversationClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a1326' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1327' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1325'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Interface xmi.id = 'a874' name = 'NewContactDialogListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a1328' name = 'onNewContactDialogClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1329' name = 'okClicked' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a330'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a1330' name = 'dlg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a332'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1331' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1332' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a1328'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a150' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a117'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a134'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a972'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a1151' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a37'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a630'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Collaboration xmi.id = 'a1333' name = 'SendMessage' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:ReturnAction xmi.id = 'a1334' name = 'Action_3' isSpecification = 'false'
                  isAsynchronous = 'true'/>
                <UML:Object xmi.id = 'a1335' name = 'message' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a182'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a1336'/>
                    <UML:LinkEnd xmi.idref = 'a1337'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a1338' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a1339' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a1340'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a1337' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a1335'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:CallAction xmi.id = 'a1341' name = 'SendAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a1342' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a1343' language = 'java' body = 'message'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a578'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Message xmi.id = 'a1344' name = 'Message_2' isSpecification = 'false'>
                  <UML:Message.predecessor>
                    <UML:Message xmi.idref = 'a1345'/>
                  </UML:Message.predecessor>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a1346'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:CollaborationInstanceSet xmi.id = 'a1347' name = 'Collaboration_Instance_Set_1'
                  isSpecification = 'false'>
                  <UML:CollaborationInstanceSet.interactionInstanceSet>
                    <UML:InteractionInstanceSet xmi.id = 'a1348' name = 'Collaboration_Instance_Set_2'
                      isSpecification = 'false'/>
                  </UML:CollaborationInstanceSet.interactionInstanceSet>
                  <UML:CollaborationInstanceSet.collaboration>
                    <UML:Collaboration xmi.idref = 'a1333'/>
                  </UML:CollaborationInstanceSet.collaboration>
                  <UML:CollaborationInstanceSet.participatingInstance>
                    <UML:Object xmi.idref = 'a1340'/>
                    <UML:Object xmi.idref = 'a1335'/>
                    <UML:Object xmi.idref = 'a1349'/>
                  </UML:CollaborationInstanceSet.participatingInstance>
                  <UML:CollaborationInstanceSet.participatingLink>
                    <UML:Link xmi.idref = 'a1350'/>
                    <UML:Link xmi.idref = 'a1338'/>
                  </UML:CollaborationInstanceSet.participatingLink>
                </UML:CollaborationInstanceSet>
                <UML:Object xmi.id = 'a1349' name = 'view' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a1351'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a1350' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a1336' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a1335'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a1351' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a1349'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Stimulus xmi.id = 'a1352' name = 'stim_4' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a1335'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a1349'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:ReturnAction xmi.idref = 'a1353'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:ReturnAction xmi.id = 'a1353' name = 'Action_4' isSpecification = 'false'
                  isAsynchronous = 'true'/>
                <UML:Object xmi.id = 'a1340' name = 'network' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a383'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a1339'/>
                  </UML:Instance.linkEnd>
                </UML:Object>
                <UML:Message xmi.id = 'a1345' name = 'Message_1' isSpecification = 'false'>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a1354'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:CallAction xmi.id = 'a1355' name = 'SendAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a838'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Stimulus xmi.id = 'a1356' name = 'stim_3' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a1340'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a1335'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:ReturnAction xmi.idref = 'a1334'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Stimulus xmi.id = 'a1346' name = 'send' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a1335'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a1340'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a1338'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a1341'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Stimulus xmi.id = 'a1354' name = 'send' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a1349'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a1335'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a1350'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a1355'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
              </UML:Namespace.ownedElement>
            </UML:Collaboration>
            <UML:Dependency xmi.id = 'a989' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a26'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a630'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a1357' name = 'accessor removeNetwork()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a1358'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a96'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a1230' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a35'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a630'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a1359' name = 'accessor getViewFactory()' isSpecification = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a94'/>
              </UML:ModelElement.stereotype>
              <UML:Dependency.client>
                <UML:Operation xmi.idref = 'a1360'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Attribute xmi.idref = 'a112'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Collaboration xmi.id = 'a1361' name = 'ReceiveMessage' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Message xmi.id = 'a1362' name = 'Message_1' isSpecification = 'false'>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a1363'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Stimulus xmi.id = 'a1363' name = 'onReceivedChange' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a1364'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a1365'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a1366'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a1367'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Object xmi.id = 'a1365' name = 'client' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a101'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a1368'/>
                    <UML:LinkEnd xmi.idref = 'a1369'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a1370' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a1371' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a1372'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a1369' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a1365'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:CallAction xmi.id = 'a1373' name = 'CreateMessageViewAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a1374' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a1375' language = 'java' body = 'view'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                </UML:CallAction>
                <UML:CallAction xmi.id = 'a1376' name = 'Action_2' isSpecification = 'false'
                  isAsynchronous = 'false'/>
                <UML:Object xmi.id = 'a1372' name = 'viewFactory' visibility = 'public'
                  isSpecification = 'false'>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a1371'/>
                  </UML:Instance.linkEnd>
                </UML:Object>
                <UML:CollaborationInstanceSet xmi.id = 'a1377' name = 'Collaboration_Instance_Set_1'
                  isSpecification = 'false'>
                  <UML:CollaborationInstanceSet.interactionInstanceSet>
                    <UML:InteractionInstanceSet xmi.id = 'a1378' name = 'Collaboration_Instance_Set_2'
                      isSpecification = 'false'/>
                  </UML:CollaborationInstanceSet.interactionInstanceSet>
                  <UML:CollaborationInstanceSet.collaboration>
                    <UML:Collaboration xmi.idref = 'a1361'/>
                  </UML:CollaborationInstanceSet.collaboration>
                  <UML:CollaborationInstanceSet.participatingInstance>
                    <UML:Object xmi.idref = 'a1365'/>
                    <UML:Object xmi.idref = 'a1372'/>
                    <UML:Object xmi.idref = 'a1364'/>
                  </UML:CollaborationInstanceSet.participatingInstance>
                  <UML:CollaborationInstanceSet.participatingLink>
                    <UML:Link xmi.idref = 'a1366'/>
                    <UML:Link xmi.idref = 'a1370'/>
                  </UML:CollaborationInstanceSet.participatingLink>
                </UML:CollaborationInstanceSet>
                <UML:Object xmi.id = 'a1364' name = 'network' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a383'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a1379'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a1366' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a1368' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a1365'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a1379' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a1364'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Message xmi.id = 'a1380' name = 'Message_3' isSpecification = 'false'>
                  <UML:Message.predecessor>
                    <UML:Message xmi.idref = 'a1362'/>
                  </UML:Message.predecessor>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a1381'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Stimulus xmi.id = 'a1381' name = 'createMessageView' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a1365'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a1372'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a1370'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a1373'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Stimulus xmi.id = 'a1382' name = 'stim_2' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a1365'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a1364'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a1376'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:CallAction xmi.id = 'a1367' name = 'OnReceivedChangeAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a1383' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a1384' language = 'java' body = 'x'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a1385'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
              </UML:Namespace.ownedElement>
            </UML:Collaboration>
            <UML:Association xmi.id = 'a1386' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a1387' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a1388'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a1389' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a101'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a1390' name = 'viewFactory' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a1391'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a1392' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a1054'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Dependency xmi.id = 'a903' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a21'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a630'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Class xmi.id = 'a101' name = 'InstantMessagingClient' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
              isActive = 'false'>
              <UML:ModelElement.clientDependency>
                <UML:Abstraction xmi.idref = 'a116'/>
              </UML:ModelElement.clientDependency>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a151'/>
                <UML:Stereotype xmi.idref = 'a1393'/>
                <UML:Stereotype xmi.idref = 'a1394'/>
              </UML:ModelElement.stereotype>
              <UML:ModelElement.taggedValue>
                <UML:TaggedValue xmi.id = 'a1395' isSpecification = 'false'>
                  <UML:TaggedValue.dataValue>Title: InstantMessagingClient\n(C) 2005, Dennis Wagelaar, System and Software Engineering Lab, Vrije Universiteit Brussel\nA simple instant messaging client generated from a PIM</UML:TaggedValue.dataValue>
                  <UML:TaggedValue.type>
                    <UML:TagDefinition xmi.idref = 'a1396'/>
                  </UML:TaggedValue.type>
                </UML:TaggedValue>
                <UML:TaggedValue xmi.id = 'a1397' isSpecification = 'false'>
                  <UML:TaggedValue.dataValue>&lt;p&gt;&lt;/p&gt;</UML:TaggedValue.dataValue>
                  <UML:TaggedValue.type>
                    <UML:TagDefinition xmi.idref = 'a3'/>
                  </UML:TaggedValue.type>
                </UML:TaggedValue>
              </UML:ModelElement.taggedValue>
              <UML:Classifier.feature>
                <UML:Operation xmi.id = 'a1398' name = 'getInstance' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'classifier' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1399' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a101'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1400' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1401' language = 'java' body = 'if (instance == null) {&#10;    instance = new InstantMessagingClient();&#10;}&#10;return instance;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a1398'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Attribute xmi.id = 'a1402' name = 'instance' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'classifier' changeability = 'changeable'>
                  <UML:StructuralFeature.type>
                    <UML:Class xmi.idref = 'a101'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Operation xmi.id = 'a1403' name = 'update' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1404' name = 'o' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a19'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a1405' name = 'arg' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a57'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1406' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1407' language = 'java' body = 'if (arg instanceof java.util.Hashtable) {&#10;    java.util.Hashtable e = (java.util.Hashtable) arg;&#10;    String mName = &quot;on&quot; + ((String) e.get(&quot;name&quot;)) + &quot;Change&quot;;&#10;    Class[] parmTypes = { (Class) e.get(&quot;class&quot;) };&#10;    try {&#10;        java.lang.reflect.Method m = getClass().getDeclaredMethod(mName, parmTypes);&#10;        Object[] args = { e.get(&quot;value&quot;) };&#10;        m.invoke(this, args);&#10;    } catch (NoSuchMethodException nex) {&#10;        // no handler&#10;    } catch (Exception ex) {&#10;        // wrong handler configuration&#10;        ex.printStackTrace();&#10;    }&#10;}'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a1403'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a111' name = 'setViewFactory' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a110'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1408' name = 'viewFactory' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a1054'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1409' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1410' language = 'java' body = 'this.viewFactory = viewFactory;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a111'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a114' name = 'setContactList' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a113'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1411' name = 'contactList' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a106'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1412' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1413' language = 'java' body = 'this.contactList = contactList;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a114'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a369' name = 'getConversations' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a368'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1414' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a283'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1415' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1416' language = 'java' body = 'return conversation;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a369'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a1360' name = 'getViewFactory' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a1359'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1417' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a1054'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1418' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1419' language = 'java' body = 'return viewFactory;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a1360'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a856' name = 'getNetworks' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a855'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1420' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a283'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1421' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1422' language = 'java' body = 'return network;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a856'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a360' name = 'getContactList' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a359'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1423' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a106'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1424' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1425' language = 'java' body = 'return contactList;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a360'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a624' name = 'getConversationAt' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a623'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1426' name = 'index' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a293'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a1427' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a161'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1428' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1429' language = 'java' body = 'try {&#10;    return (im.model.Conversation) conversation.get(index);&#10;} catch (IndexOutOfBoundsException e) {&#10;    return null;&#10;}'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a624'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a608' name = 'getNetworkAt' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a607'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1430' name = 'index' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a293'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a1431' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a383'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1432' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1433' language = 'java' body = 'try {&#10;    return (im.networking.Network) network.get(index);&#10;} catch (IndexOutOfBoundsException e) {&#10;    return null;&#10;}'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a608'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a626' name = 'addConversation' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a625'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1434' name = 'conversation' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a161'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1435' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1436' language = 'java' body = 'this.conversation.add(conversation);'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a626'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a95' name = 'addNetwork' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a93'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1437' name = 'network' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a383'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1438' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1439' language = 'java' body = '// Begin subscribe stanza&#10;// Begin original body&#10;this.network.add(network);&#10;// End original body&#10;if (network != null) network.addObserver(this);&#10;// End subscribe stanza'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a95'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a628' name = 'insertConversation' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a627'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1440' name = 'conversation' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a161'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a1441' name = 'index' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a293'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1442' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1443' language = 'java' body = 'try {&#10;    this.conversation.add(index, conversation);&#10;} catch (IndexOutOfBoundsException e) {&#10;    this.conversation.add(conversation);&#10;};'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a628'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a358' name = 'insertNetwork' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a357'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1444' name = 'network' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a383'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a1445' name = 'index' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a293'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1446' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1447' language = 'java' body = '// Begin subscribe stanza&#10;// Begin original body&#10;try {&#10;    this.network.add(index, network);&#10;} catch (IndexOutOfBoundsException e) {&#10;    this.network.add(network);&#10;};&#10;// End original body&#10;if (network != null) network.addObserver(this);&#10;// End subscribe stanza'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a358'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a108' name = 'removeConversation' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a107'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1448' name = 'conversation' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a161'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1449' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1450' language = 'java' body = 'this.conversation.remove(conversation);'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a108'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a1358' name = 'removeNetwork' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a1357'/>
                  </UML:ModelElement.clientDependency>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1451' name = 'network' isSpecification = 'false'
                      kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a383'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1452' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1453' language = 'java' body = '// Begin subscribe stanza&#10;if (network != null) network.deleteObserver(this);&#10;// Begin original body&#10;this.network.remove(network);&#10;// End original body&#10;// End subscribe stanza'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a1358'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Attribute xmi.id = 'a115' name = 'contactList' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a1454' language = 'java' body = 'new im.model.ContactList()'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:Class xmi.idref = 'a106'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = 'a96' name = 'network' visibility = 'private' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a1455' language = 'java' body = 'new java.util.ArrayList()'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = 'a283'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = 'a109' name = 'conversation' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a1456' language = 'java' body = 'new java.util.ArrayList()'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = 'a283'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = 'a112' name = 'viewFactory' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a1457' language = 'java' body = 'null'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:Class xmi.idref = 'a1054'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Operation xmi.id = 'a1458' name = 'init' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a1459' name = 'start' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a1460' name = 'stop' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a1385' name = 'onRecvMsgChange' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1461' name = 'r' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a182'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Operation xmi.id = 'a1462' name = 'onRecvContactChange' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a1463' name = 'c' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a187'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a1464' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1465' language = 'java' body = '        for (int i = 0; i &lt; getConversations().size(); i++) {&#10;            String contact = getConversationAt(i).getContact().getUserId();&#10;            if (contact.equals(r.getSender())) {&#10;                getConversationAt(i).setMessage(r);&#10;                return;&#10;            }&#10;        }&#10;        // create new conversation&#10;        im.model.Conversation conv = new im.model.Conversation();&#10;        new im.edit.ConversationEdit(conv);&#10;        addConversation(conv);&#10;        for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;            if (getContactList().getContactAt(i).getUserId().equals(r.getSender())) {&#10;                conv.setContact(getContactList().getContactAt(i));&#10;                break;&#10;            }&#10;        }&#10;        if (conv.getContact() == null) {&#10;            conv.setContact(new im.model.Contact());&#10;            conv.getContact().setUserId(r.getSender());&#10;        }&#10;        conv.setMessage(r);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a1385'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a1466' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1467' language = 'java' body = '        loadSettings();&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a1458'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a1468' name = 'loadSettings' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Method xmi.id = 'a1469' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1470' language = 'java' body = '        for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;            im.model.Contact listed = getContactList().getContactAt(i);&#10;            if (listed.getUserId().equals(c.getUserId())) {&#10;                if (c.getStatus() != null) {&#10;                    listed.setStatus(c.getStatus());&#10;                }&#10;                if (c.getName() != null) {&#10;                    listed.setName(c.getName());&#10;                }&#10;                return;&#10;            }&#10;        }&#10;        getContactList().addContact(c);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a1462'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a1471' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1472' language = 'java' body = '        try {&#10;            // ViewFactory&#10;            setViewFactory(im.view.ViewFactory.getDefault());&#10;            // Network&#10;            im.networking.Network[] networks = im.networking.Network.getDefault();&#10;            for (int i = 0; i &lt; networks.length; i++) {&#10;                addNetwork(networks[i]);&#10;            }&#10;            // Create and register edit/view&#10;            new im.edit.ContactListEdit(contactList);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a1468'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a1473' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1474' language = 'java' body = '        for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            im.model.Identity id = getContactList().getIdentity(getNetworkAt(i));&#10;            if (id != null) {&#10;                getNetworkAt(i).login(id.getUserId(), id.getPassword());&#10;            }&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a1459'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a1475' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a1476' language = 'java' body = '        for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            if (getContactList().getIdentity(getNetworkAt(i)) != null) {&#10;                getNetworkAt(i).logout();&#10;            }&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a1460'/>
                  </UML:Method.specification>
                </UML:Method>
              </UML:Classifier.feature>
            </UML:Class>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'a1477' name = 'instantiates' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a47' name = 'exception' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a350' name = 'subscribe' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Association</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a1478' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1479' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1480'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1481' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a1482'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1483' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1484'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1485' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a1486'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = 'a1487' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1488' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1489'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1490' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a1491'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1492' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1493'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1494' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a1495'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a117' name = 'realize' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Abstraction</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a1496' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1497' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1498'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1499' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a90'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1500' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1501'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1502' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a1482'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:TagDefinition xmi.id = 'a3' name = 'documentation' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1503'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1504' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Include xmi.id = 'a1505' isSpecification = 'false'>
          <UML:Include.addition>
            <UML:UseCase xmi.idref = 'a89'/>
          </UML:Include.addition>
          <UML:Include.base>
            <UML:UseCase xmi.idref = 'a1495'/>
          </UML:Include.base>
        </UML:Include>
        <UML:Stereotype xmi.id = 'a1506' name = 'Socket' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a1507' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1508' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1509'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1510' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a1491'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1511' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1512'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1513' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a1486'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Actor xmi.id = 'a1482' name = 'Network' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Association xmi.id = 'a1514' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1515' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1516'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1517' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a1491'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1518' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1519'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1520' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a89'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a1521' name = 'postcondition' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a177' name = 'create' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Association xmi.id = 'a1522' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1523' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1524'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1525' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a1491'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1526' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1527'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1528' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a1529'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a1393' name = 'Singleton' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a1394' name = 'Applet' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Package xmi.id = 'a1530' name = 'com' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Dependency xmi.id = 'a418' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a380'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1531'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a1531' name = 'jabberwookie' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Dependency xmi.id = 'a1532' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a91'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a472'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a381'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Interface xmi.id = 'a606' name = 'IQListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Dependency xmi.id = 'a1533' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a91'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a472'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a385'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Package xmi.id = 'a1534' name = 'ns' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Package xmi.id = 'a1535' name = 'jabber' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Namespace.ownedElement>
                        <UML:Class xmi.id = 'a509' name = 'IQ' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Class xmi.id = 'a506' name = 'Message' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Dependency xmi.id = 'a417' isSpecification = 'false'>
                          <UML:Dependency.client>
                            <UML:Class xmi.idref = 'a380'/>
                          </UML:Dependency.client>
                          <UML:Dependency.supplier>
                            <UML:Package xmi.idref = 'a1536'/>
                          </UML:Dependency.supplier>
                        </UML:Dependency>
                        <UML:Class xmi.id = 'a512' name = 'Presence' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Package xmi.id = 'a1536' name = 'iq' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                      </UML:Namespace.ownedElement>
                    </UML:Package>
                    <UML:Dependency xmi.id = 'a416' isSpecification = 'false'>
                      <UML:Dependency.client>
                        <UML:Class xmi.idref = 'a380'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Package xmi.idref = 'a1535'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Class xmi.id = 'a472' name = 'Client2Server' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a1533'/>
                    <UML:Dependency xmi.idref = 'a1532'/>
                    <UML:Dependency xmi.idref = 'a1537'/>
                  </UML:ModelElement.clientDependency>
                </UML:Class>
                <UML:Dependency xmi.id = 'a1537' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a91'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a472'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a606'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Interface xmi.id = 'a385' name = 'MessageListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a381' name = 'PresenceListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:UseCase xmi.id = 'a90' name = 'Remove contact' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:UseCase.include>
            <UML:Include xmi.idref = 'a88'/>
          </UML:UseCase.include>
        </UML:UseCase>
        <UML:UseCase xmi.id = 'a1486' name = 'Send message' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Stereotype xmi.id = 'a94' name = 'accessor' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Package xmi.id = 'a1538' name = 'ocl' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:DataType xmi.id = 'a1539' name = 'Collection' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1540' name = 'Real' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a251' name = 'String' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1541' name = 'Bag' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a293' name = 'Integer' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a819' name = 'OclAny' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1542' name = 'OclType' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a330' name = 'Boolean' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a283' name = 'Sequence' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1543' name = 'Set' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Association xmi.id = 'a1544' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1545' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1546'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1547' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a1529'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1548' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1549'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1550' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a1482'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Actor xmi.id = 'a1491' name = 'User' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Association xmi.id = 'a1551' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1552' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1553'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1554' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a1491'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1555' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1556'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1557' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a90'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:UseCase xmi.id = 'a89' name = 'Update contact list' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Package xmi.id = 'a1558' name = 'javax' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a1559' name = 'swing' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a1080' name = 'JList' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Generalization xmi.id = 'a1153' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a37'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a1560'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a1560' name = 'JFrame' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a1164' name = 'JLabel' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a1169' name = 'JTextField' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a1242' name = 'JTextPane' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a1088' name = 'JPanel' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Generalization xmi.id = 'a1077' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a28'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a1088'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a1176' name = 'JComboBox' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a1083' name = 'JButton' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a1219' name = 'JPasswordField' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'/>
                <UML:Class xmi.id = 'a1097' name = 'JScrollPane' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Generalization xmi.id = 'a1231' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a35'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a1560'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a1076' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a28'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1559'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a1229' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a35'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1559'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a1152' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a37'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1559'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Association xmi.id = 'a1561' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1562' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1563'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1564' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a89'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1565' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1566'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1567' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a1482'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:TagDefinition xmi.id = 'a425' name = 'final' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1568'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1569' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'a1570' name = 'ValueObject' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:UseCase xmi.id = 'a1529' name = 'Receive message' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:UseCase xmi.id = 'a1495' name = 'Add contact' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:UseCase.include>
            <UML:Include xmi.idref = 'a1505'/>
          </UML:UseCase.include>
        </UML:UseCase>
        <UML:TagDefinition xmi.id = 'a584' name = 'transient' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1571'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1572' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:TagDefinition xmi.id = 'a1396' name = 'AppletInfo' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1573'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1574' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'a1575' name = 'initializer' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Operation</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a1576' name = 'invariant' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a1577' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1578' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1579'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1580' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a1495'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1581' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1582'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1583' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a1482'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a151' name = 'Observer' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'a1584' name = 'ParameterInfo' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1585'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1586' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'a1587' name = 'process' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
      </UML:Namespace.ownedElement>
    </UML:Model>
  </XMI.content>
</XMI>
