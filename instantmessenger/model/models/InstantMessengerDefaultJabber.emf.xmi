<?xml version="1.0" encoding="ASCII"?>
<uml:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:uml="http://www.omg.org/UML" name="InstantMessengerModel" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
  <taggedValue isSpecification="false" type="//@ownedElement.4">
    <dataValue>&lt;p>(C) 2005, Dennis Wagelaar, System and Software Engineering Lab, Vrije Universiteit Brussel&lt;/p>&#xA;&lt;p>All rights reserved.&lt;/p>&#xA;&lt;p>Redistribution and use in source and binary forms, with or without&#xA;modification, are permitted provided that the following conditions are met:&lt;/p>&#xA;&lt;ul>&#xA;&lt;li>Redistributions of source code must retain the above copyright notice,&#xA;this list of conditions and the following disclaimer.&lt;/li>&#xA;&lt;li>Redistributions in binary form must reproduce the above copyright notice,&#xA;this list of conditions and the following disclaimer in the documentation&#xA;and/or other materials provided with the distribution.&lt;/li>&#xA;&lt;li>Neither the name of JabberWookie nor the names of its contributors may be used&#xA;to endorse or promote products derived from this software without specific&#xA;prior written permission.&lt;/li>&#xA;&lt;/ul>&#xA;&lt;p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND&#xA;ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED&#xA;WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#xA;DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR&#xA;ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#xA;(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;&#xA;LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON&#xA;ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT&#xA;(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#xA;SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p></dataValue>
  </taggedValue>
  <ownedElement xsi:type="uml:Stereotype" name="invariant" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Constraint</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="realize" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Abstraction</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="postcondition" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Constraint</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:TagDefinition" name="gentleware-initialValue" isSpecification="false">
    <multiplicity>
      <range lower="1" upper="1"/>
    </multiplicity>
  </ownedElement>
  <ownedElement xsi:type="uml:TagDefinition" name="documentation" isSpecification="false">
    <multiplicity>
      <range lower="1" upper="1"/>
    </multiplicity>
  </ownedElement>
  <ownedElement xsi:type="uml:Package" name="ocl" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <ownedElement xsi:type="uml:DataType" name="OclType" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
    <ownedElement xsi:type="uml:DataType" name="Set" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
    <ownedElement xsi:type="uml:DataType" name="OclAny" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
    <ownedElement xsi:type="uml:DataType" name="Collection" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
    <ownedElement xsi:type="uml:DataType" name="String" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
    <ownedElement xsi:type="uml:DataType" name="Integer" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
    <ownedElement xsi:type="uml:DataType" name="Real" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
    <ownedElement xsi:type="uml:DataType" name="Boolean" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
    <ownedElement xsi:type="uml:DataType" name="Sequence" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
    <ownedElement xsi:type="uml:DataType" name="Bag" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="Applet" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Class</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="instantiates" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Dependency</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="use" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Dependency</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="create" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false"/>
  <ownedElement xsi:type="uml:Stereotype" name="subscribe" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Association</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="exception" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Classifier</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="Observer" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Class</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:TagDefinition" name="ParameterInfo" isSpecification="false">
    <multiplicity>
      <range lower="1" upper="1"/>
    </multiplicity>
  </ownedElement>
  <ownedElement xsi:type="uml:TagDefinition" name="final" isSpecification="false">
    <multiplicity>
      <range lower="1" upper="1"/>
    </multiplicity>
  </ownedElement>
  <ownedElement xsi:type="uml:Package" name="java" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <ownedElement xsi:type="uml:Package" name="net" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
      <ownedElement xsi:type="uml:Association" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
        <connection isSpecification="false" participant="//@ownedElement.18/@ownedElement.0/@ownedElement.0/@ownedElement.2/@ownedElement.0" isNavigable="false" aggregation="ak_composite">
          <multiplicity>
            <range lower="1" upper="1"/>
          </multiplicity>
        </connection>
        <connection name="socket" isSpecification="false" participant="//@ownedElement.15/@ownedElement.0/@ownedElement.1" isNavigable="true">
          <multiplicity>
            <range lower="1" upper="1"/>
          </multiplicity>
        </connection>
      </ownedElement>
      <ownedElement xsi:type="uml:Class" name="Socket" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false" isActive="false"/>
    </ownedElement>
    <ownedElement xsi:type="uml:Dependency" isSpecification="false" client="//@ownedElement.18/@ownedElement.0/@ownedElement.0/@ownedElement.2/@ownedElement.0" supplier="//@ownedElement.15/@ownedElement.0"/>
    <ownedElement xsi:type="uml:Package" name="io" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
      <ownedElement xsi:type="uml:Class" name="IOException" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
        <ownedElement xsi:type="uml:Exception" name="DefaultJabberConnectException" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false" context="//@ownedElement.18/@ownedElement.0/@ownedElement.0/@ownedElement.2/@ownedElement.0/@feature.1"/>
      </ownedElement>
    </ownedElement>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="Socket" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Class</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="process" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Classifier</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Package" name="im" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <ownedElement xsi:type="uml:Package" name="networking" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
      <ownedElement xsi:type="uml:Package" name="jabber" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
        <ownedElement xsi:type="uml:Generalization" isSpecification="false" child="//@ownedElement.18/@ownedElement.0/@ownedElement.0/@ownedElement.2/@ownedElement.0" parent="//@ownedElement.18/@ownedElement.0/@ownedElement.0/@ownedElement.1"/>
        <ownedElement xsi:type="uml:Class" name="Jabber" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="true" isActive="false"/>
        <ownedElement xsi:type="uml:Package" name="defaultjabber" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
          <ownedElement xsi:type="uml:Class" clientDependency="//@ownedElement.15/@ownedElement.1" name="DefaultJabber" isSpecification="false" generalization="//@ownedElement.18/@ownedElement.0/@ownedElement.0/@ownedElement.0" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
            <feature xsi:type="uml:Attribute" name="connectError" visibility="vk_private" isSpecification="false" type="//@ownedElement.5/@ownedElement.4">
              <initialValue language="java" body="&quot;&quot;"/>
            </feature>
            <feature xsi:type="uml:Operation" name="connect" visibility="vk_protected" isSpecification="false" isQuery="false" isRoot="false" isLeaf="false" isAbstract="false">
              <parameter name="host" isSpecification="false" type="//@ownedElement.5/@ownedElement.4"/>
            </feature>
            <feature xsi:type="uml:Method" isSpecification="false" isQuery="false" specification="//@ownedElement.18/@ownedElement.0/@ownedElement.0/@ownedElement.2/@ownedElement.0/@feature.1">
              <body language="java" body="        setSocket(connect(host, 5222));&#xA;        if (getSocket() == null) {&#xA;            throw new java.io.IOException(connectError);&#xA;        }&#xA;        setConnection(new com.jabberwookie.Client2Server(&#xA;            getSocket().getInputStream(), getSocket().getOutputStream()));&#xA;        if (!getConnection().open(host, 60000)) {&#xA;            throw new java.io.IOException(&quot;Could not establish stream to &quot; + host + &quot;:5222 after 60 seconds&quot;);&#xA;        }&#xA;"/>
            </feature>
            <feature xsi:type="uml:Operation" name="connect" visibility="vk_private" isSpecification="false" isQuery="false" isRoot="false" isLeaf="false" isAbstract="false">
              <parameter name="host" isSpecification="false" type="//@ownedElement.5/@ownedElement.4"/>
              <parameter name="port" isSpecification="false" type="//@ownedElement.5/@ownedElement.5"/>
              <parameter name="return" isSpecification="false" type="//@ownedElement.15/@ownedElement.0/@ownedElement.1" kind="pdk_return"/>
            </feature>
            <feature xsi:type="uml:Method" isSpecification="false" isQuery="false" specification="//@ownedElement.18/@ownedElement.0/@ownedElement.0/@ownedElement.2/@ownedElement.0/@feature.3">
              <body language="java" body="        Socket s = null;&#xA;        try {&#xA;            InetAddress[] hosts = InetAddress.getAllByName(host);&#xA;            java.util.Stack exceptions = new java.util.Stack();&#xA;            for (int i = 0; i &lt; hosts.length; i++) {&#xA;                try {&#xA;                    s = new Socket(hosts[i], port);&#xA;                    break;&#xA;                } catch (Exception e) {&#xA;                    exceptions.push(e);&#xA;                }&#xA;            }&#xA;            StringBuffer sb = new StringBuffer();&#xA;            while (!exceptions.empty()) {&#xA;                sb.append(((Exception) exceptions.pop()).getMessage());&#xA;            }&#xA;            connectError = sb.toString();&#xA;        } catch (Exception e) {&#xA;            connectError = e.getMessage() + &quot; at DefaultJabber.connect(&quot; + host + &quot;, &quot; + port + &quot;)&quot;;&#xA;        }&#xA;        return s;&#xA;"/>
            </feature>
          </ownedElement>
        </ownedElement>
      </ownedElement>
    </ownedElement>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="accessor" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Dependency</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:TagDefinition" name="transient" isSpecification="false">
    <multiplicity>
      <range lower="1" upper="1"/>
    </multiplicity>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="initializer" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Operation</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="Singleton" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Class</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="ValueObject" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Class</baseClass>
  </ownedElement>
  <ownedElement xsi:type="uml:TagDefinition" name="AppletInfo" isSpecification="false">
    <multiplicity>
      <range lower="1" upper="1"/>
    </multiplicity>
  </ownedElement>
  <ownedElement xsi:type="uml:Stereotype" name="Observable" isSpecification="false" isRoot="false" isLeaf="false" isAbstract="false">
    <baseClass>Class</baseClass>
  </ownedElement>
</uml:Model>
