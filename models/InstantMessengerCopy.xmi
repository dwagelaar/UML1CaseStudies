<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<XMI xmi.version = '1.2' xmlns:UML = 'org.omg.xmi.namespace.UML' timestamp = 'Tue May 24 16:57:16 CEST 2005'>
  <XMI.header>
    <XMI.documentation>
      <XMI.exporter>Netbeans XMI Writer</XMI.exporter>
      <XMI.exporterVersion>1.0</XMI.exporterVersion>
    </XMI.documentation>
  </XMI.header>
  <XMI.content>
    <UML:Model xmi.id = 'a1' name = 'InstantMessengerModel' isSpecification = 'false'
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
      <UML:ModelElement.taggedValue>
        <UML:TaggedValue xmi.id = 'a2' isSpecification = 'false'>
          <UML:TaggedValue.dataValue>&lt;p&gt;(C) 2005, Dennis Wagelaar, System and Software Engineering Lab, Vrije Universiteit Brussel&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.&lt;/li&gt;
&lt;li&gt;Neither the name of JabberWookie nor the names of its contributors may be used
to endorse or promote products derived from this software without specific
prior written permission.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;</UML:TaggedValue.dataValue>
          <UML:TaggedValue.type>
            <UML:TagDefinition xmi.idref = 'a3'/>
          </UML:TaggedValue.type>
        </UML:TaggedValue>
      </UML:ModelElement.taggedValue>
      <UML:Namespace.ownedElement>
        <UML:Association xmi.id = 'a4' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a5' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a6'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a7' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a8'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a9' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a10'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a11' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a12'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = 'a13' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a14' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a15'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a16' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a17'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a18' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a19'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a20' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a21'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a22' name = 'exception' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:UseCase xmi.id = 'a23' name = 'Send message' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Association xmi.id = 'a24' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a25' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a26'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a27' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a12'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a28' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a29'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a30' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a23'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Include xmi.id = 'a31' isSpecification = 'false'>
          <UML:Include.addition>
            <UML:UseCase xmi.idref = 'a32'/>
          </UML:Include.addition>
          <UML:Include.base>
            <UML:UseCase xmi.idref = 'a33'/>
          </UML:Include.base>
        </UML:Include>
        <UML:Stereotype xmi.id = 'a34' name = 'Socket' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'a35' name = 'final' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a36'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a37' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Package xmi.id = 'a38' name = 'javax' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Dependency xmi.id = 'a39' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a40'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a41'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a42' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a43'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a41'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a41' name = 'swing' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a44' name = 'JPanel' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a45' name = 'JLabel' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Generalization xmi.id = 'a46' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a47'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a48'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Generalization xmi.id = 'a49' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a40'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a48'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a50' name = 'JComboBox' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a51' name = 'JTextField' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a52' name = 'JScrollPane' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a48' name = 'JFrame' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a53' name = 'JList' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a54' name = 'JPasswordField' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'/>
                <UML:Generalization xmi.id = 'a55' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a43'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a44'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a56' name = 'JButton' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a57' name = 'JTextPane' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a58' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a47'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a41'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'a59' name = 'create' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Package xmi.id = 'a60' name = 'com' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a61' name = 'jabberwookie' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Dependency xmi.id = 'a62' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a63'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a64'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a65'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Package xmi.id = 'a66' name = 'ns' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Dependency xmi.id = 'a67' isSpecification = 'false'>
                      <UML:Dependency.client>
                        <UML:Class xmi.idref = 'a68'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Package xmi.idref = 'a69'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                    <UML:Package xmi.id = 'a69' name = 'jabber' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Namespace.ownedElement>
                        <UML:Class xmi.id = 'a70' name = 'IQ' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Class xmi.id = 'a71' name = 'Message' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Class xmi.id = 'a72' name = 'Presence' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                      </UML:Namespace.ownedElement>
                    </UML:Package>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Interface xmi.id = 'a73' name = 'PresenceListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a65' name = 'MessageListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a74' name = 'IQListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a64' name = 'Client2Server' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a75'/>
                    <UML:Dependency xmi.idref = 'a62'/>
                    <UML:Dependency xmi.idref = 'a76'/>
                  </UML:ModelElement.clientDependency>
                </UML:Class>
                <UML:Dependency xmi.id = 'a75' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a63'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a64'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a73'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a76' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a63'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a64'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a74'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a77' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a68'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a61'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'a78' name = 'Applet' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:UseCase xmi.id = 'a21' name = 'Receive message' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Association xmi.id = 'a79' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a80' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a81'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a82' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a32'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a83' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a84'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a85' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a12'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a86' name = 'instantiates' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'a3' name = 'documentation' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a87'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a88' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Package xmi.id = 'a89' name = 'im' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Collaboration xmi.id = 'a90' name = 'SendMessage' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Object xmi.id = 'a91' name = 'message' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a92'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a93'/>
                    <UML:LinkEnd xmi.idref = 'a94'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a95' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a93' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a91'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a96' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a97'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Message xmi.id = 'a98' name = 'Message_2' isSpecification = 'false'>
                  <UML:Message.predecessor>
                    <UML:Message xmi.idref = 'a99'/>
                  </UML:Message.predecessor>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a100'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Stimulus xmi.id = 'a101' name = 'stim_3' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a97'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a91'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:ReturnAction xmi.idref = 'a102'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:CallAction xmi.id = 'a103' name = 'SendAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a104' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a105' language = 'java' body = 'message'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a106'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Stimulus xmi.id = 'a107' name = 'stim_4' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a91'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a108'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:ReturnAction xmi.idref = 'a109'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Message xmi.id = 'a99' name = 'Message_1' isSpecification = 'false'>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a110'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Object xmi.id = 'a108' name = 'view' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a111'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a112' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a94' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a91'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a111' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a108'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Stimulus xmi.id = 'a110' name = 'send' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a108'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a91'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a112'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a113'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Stimulus xmi.id = 'a100' name = 'send' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a91'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a97'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a95'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a103'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:ReturnAction xmi.id = 'a102' name = 'Action_3' isSpecification = 'false'
                  isAsynchronous = 'true'/>
                <UML:CollaborationInstanceSet xmi.id = 'a114' name = 'Collaboration_Instance_Set_1'
                  isSpecification = 'false'>
                  <UML:CollaborationInstanceSet.interactionInstanceSet>
                    <UML:InteractionInstanceSet xmi.id = 'a115' name = 'Collaboration_Instance_Set_2'
                      isSpecification = 'false'/>
                  </UML:CollaborationInstanceSet.interactionInstanceSet>
                  <UML:CollaborationInstanceSet.collaboration>
                    <UML:Collaboration xmi.idref = 'a90'/>
                  </UML:CollaborationInstanceSet.collaboration>
                  <UML:CollaborationInstanceSet.participatingInstance>
                    <UML:Object xmi.idref = 'a91'/>
                    <UML:Object xmi.idref = 'a108'/>
                    <UML:Object xmi.idref = 'a97'/>
                  </UML:CollaborationInstanceSet.participatingInstance>
                  <UML:CollaborationInstanceSet.participatingLink>
                    <UML:Link xmi.idref = 'a112'/>
                    <UML:Link xmi.idref = 'a95'/>
                  </UML:CollaborationInstanceSet.participatingLink>
                </UML:CollaborationInstanceSet>
                <UML:Object xmi.id = 'a97' name = 'network' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a116'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a96'/>
                  </UML:Instance.linkEnd>
                </UML:Object>
                <UML:CallAction xmi.id = 'a113' name = 'SendAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a117'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:ReturnAction xmi.id = 'a109' name = 'Action_4' isSpecification = 'false'
                  isAsynchronous = 'true'/>
              </UML:Namespace.ownedElement>
            </UML:Collaboration>
            <UML:Package xmi.id = 'a118' name = 'view' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a119' name = 'ViewFactory' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a120' name = 'createContactListView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a121' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a122'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a123' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a124' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a120'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a125' name = 'createNewContactDialog' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a126' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a127'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a128' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a129' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a125'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a130' name = 'createConversationView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a131' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a132'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a133' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a134' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a130'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a135' name = 'getDefault' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'classifier' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a136' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a119'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a137' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a138' language = 'java' body = '        String[] options = {&#10;            &quot;im.view.swing.SwingViewFactory&quot;,&#10;            &quot;im.view.awt.AWTViewFactory&quot;,&#10;            &quot;im.view.lcdui.LCDUIViewFactory&quot;&#10;        };&#10;        ViewFactory factory = null;&#10;        for (int i = 0; i &lt; options.length &amp;&amp; factory == null; i++) {&#10;            try {&#10;               factory = (ViewFactory) Class.forName(options[i]).newInstance();&#10;            } catch (Exception e) {&#10;            }&#10;        }&#10;        return factory;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a135'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Abstraction xmi.id = 'a139' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a141'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a142'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a143' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a144'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a132'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a145' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a43'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a122'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a142' name = 'ConversationViewListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a146' name = 'onConversationSend' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a147' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a148' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a146'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a149' name = 'onConversationClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a150' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a151' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a149'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a152' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a153'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a127'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a132' name = 'ConversationView' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a154' name = 'getContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a155' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a156'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a157' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a158' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a154'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a159' name = 'addContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a160' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a156'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a161' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a162' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a159'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a163' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a164' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a142'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a165' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a166' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a163'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a167' name = 'setTitle' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a168' name = 't' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a170' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a171' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a167'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a172' name = 'toFront' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a173' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a174' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a172'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a175' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a176'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a177'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a122' name = 'ContactListView' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a178' name = 'addContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a179' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a180' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a181'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a182' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a183' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a178'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a184' name = 'removeContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a185' name = 'index' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a181'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a186' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a187' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a184'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a188' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a189' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a190'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a191' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a192' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a188'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a193' name = 'getSelectedContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a194' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a181'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a195' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a196' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a193'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a197' name = 'setEnabled' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a198' name = 'enabled' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a199'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a200' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a201' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a197'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a202' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a203'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a122'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a204' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a40'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a127'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Package xmi.id = 'a205' name = 'swing' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a40' name = 'SwingNewContactDialog' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a204'/>
                        <UML:Dependency xmi.idref = 'a39'/>
                        <UML:Dependency xmi.idref = 'a206'/>
                        <UML:Dependency xmi.idref = 'a207'/>
                        <UML:Dependency xmi.idref = 'a208'/>
                        <UML:Dependency xmi.idref = 'a209'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a49'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a210' name = 'dlgPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a211' language = 'java' body = 'new JPanel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a44'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a212' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a213' language = 'java' body = 'new JPanel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a44'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a214' name = 'okBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a215' language = 'java' body = 'new JButton(&quot;OK&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a56'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a216' name = 'cancelBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a217' language = 'java' body = 'new JButton(&quot;Cancel&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a56'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a218' name = 'uid' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a219' language = 'java' body = 'new JLabel(&quot;User ID&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a45'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a220' name = 'name' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a221' language = 'java' body = 'new JLabel(&quot;Name&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a45'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a222' name = 'uidField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a223' language = 'java' body = 'new JTextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a51'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a224' name = 'nameField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a225' language = 'java' body = 'new JTextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a51'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a226' name = 'network' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a227' language = 'java' body = 'new JLabel(&quot;Network&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a45'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a228' name = 'networkField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a229' language = 'java' body = 'new JComboBox()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a50'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a230' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a231' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a232'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a233' name = 'SwingNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a59'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a234' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a40'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a235' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a236' language = 'java' body = '        this.addWindowListener(new WindowAdapter() {&#10;            public void windowClosing(WindowEvent e) {&#10;                onCancel();&#10;            }&#10;        });&#10;        cancelBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                onCancel();&#10;            }&#10;        });&#10;        okBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                onOk();&#10;            }&#10;        });&#10;        setTitle(&quot;Add new contact&quot;);&#10;        getContentPane().setLayout(new BorderLayout());&#10;        dlgPanel.setLayout(new GridLayout(4,2));&#10;        dlgPanel.add(network);&#10;        dlgPanel.add(networkField);&#10;        dlgPanel.add(uid);&#10;        dlgPanel.add(uidField);&#10;        dlgPanel.add(name);&#10;        dlgPanel.add(nameField);&#10;        dlgPanel.add(password);&#10;        dlgPanel.add(passwordField);&#10;        getContentPane().add(dlgPanel, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new FlowLayout());&#10;        btnPanel.add(okBtn);&#10;        btnPanel.add(cancelBtn);&#10;        getContentPane().add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;        setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a233'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a237' name = 'makeObject' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a238' name = 's' isSpecification = 'false' kind = 'in'>
                              <UML:ModelElement.taggedValue>
                                <UML:TaggedValue xmi.id = 'a239' isSpecification = 'false'>
                                  <UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
                                  <UML:TaggedValue.type>
                                    <UML:TagDefinition xmi.idref = 'a35'/>
                                  </UML:TaggedValue.type>
                                </UML:TaggedValue>
                              </UML:ModelElement.taggedValue>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a240' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a156'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a241' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a242' language = 'java' body = '        return new Object() {&#10;            public String toString() {&#10;                return s;&#10;            }&#10;        };&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a237'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a243' name = 'getUid' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a244' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a245' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a246' language = 'java' body = '        return uidField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a243'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a247' name = 'getName' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a248' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a249' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a250' language = 'java' body = '        return nameField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a247'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a251' name = 'getNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a252' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a253' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a254' language = 'java' body = '        return networkField.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a251'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a255' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a256' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a177'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a257' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a258' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a255'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a259' name = 'onOk' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a260' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a261' language = 'java' body = '        setVisible(false);&#10;        notifyListeners(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a259'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a262' name = 'onCancel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a263' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a264' language = 'java' body = '        setVisible(false);&#10;        notifyListeners(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a262'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a265' name = 'notifyListeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a266' name = 'okClicked' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a199'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a267' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a268' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((NewContactDialogListener) listeners.elementAt(i)).onNewContactDialogClose(okClicked, this);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a265'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a269' name = 'password' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a270' language = 'java' body = 'new JLabel(&quot;Password&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a45'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a271' name = 'passwordField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a272' language = 'java' body = 'new JPasswordField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a54'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a273' name = 'getPassword' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a274' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a275' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a276' language = 'java' body = '        return passwordField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a273'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a277' name = 'addNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a278' name = 'n' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a279' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a280' language = 'java' body = '        networkField.addItem(makeObject(n));&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a277'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a43' name = 'SwingContactListView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a145'/>
                        <UML:Dependency xmi.idref = 'a42'/>
                        <UML:Dependency xmi.idref = 'a281'/>
                        <UML:Dependency xmi.idref = 'a282'/>
                        <UML:Dependency xmi.idref = 'a283'/>
                        <UML:Dependency xmi.idref = 'a284'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a55'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a285' name = 'list' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a286' language = 'java' body = 'new JList()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a53'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a287' name = 'addContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a288' language = 'java' body = 'new JButton(&quot;Add&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a56'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a289' name = 'removeContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a290' language = 'java' body = 'new JButton(&quot;Remove&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a56'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a291' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a292' language = 'java' body = 'new JPanel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a44'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a293' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a294' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a232'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a295' name = 'SwingContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a59'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a296' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a43'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a297' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a298' language = 'java' body = '        addContactBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifyAddClicked();&#10;            }&#10;        });&#10;        removeContactBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifyRemoveClicked();&#10;            }&#10;        });&#10;        list.addMouseListener(new MouseAdapter() {&#10;            public void mouseClicked(MouseEvent e) {&#10;                if (e.getClickCount() == 2) {&#10;                    notifyContactAction();&#10;                }&#10;            }&#10;        });&#10;        setLayout(new BorderLayout());&#10;        listScroll.getViewport().setView(list);&#10;        add(listScroll, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new FlowLayout());&#10;        btnPanel.add(addContactBtn);&#10;        btnPanel.add(removeContactBtn);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        im.InstantMessagingClient.getInstance().add(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a295'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a299' name = 'listScroll' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a300' language = 'java' body = 'new JScrollPane()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a52'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a301' name = 'addContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a302' name = 'contact' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a303' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a304' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a305' language = 'java' body = '        listAdd(contact, index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a301'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a306' name = 'removeContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a307' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a308' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a309' language = 'java' body = '        listRemove(index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a306'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a310' name = 'getSelectedContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a311' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a312' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a313' language = 'java' body = '        return list.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a310'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a314' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a315' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a190'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a316' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a317' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a314'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a318' name = 'notifyAddClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a319' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a320' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAdd();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a318'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a321' name = 'notifyRemoveClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a322' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a323' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListRemove();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a321'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a324' name = 'notifyContactAction' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a325' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a326' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAction();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a324'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a327' name = 'listAdd' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a328' name = 'item' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a329' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a330' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a331' language = 'java' body = '        Vector listData = new Vector();&#10;        ListModel listModel = list.getModel();&#10;        for (int i = 0; i &lt; listModel.getSize(); i++) {&#10;            if (i == index) {&#10;                listData.addElement(item);&#10;            }&#10;            listData.addElement(listModel.getElementAt(i));&#10;        }&#10;        if (index == listModel.getSize()) {&#10;            listData.addElement(item);&#10;        }&#10;        list.setListData(listData);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a327'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a332' name = 'listRemove' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a333' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a334' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a335' language = 'java' body = '        Vector listData = new Vector();&#10;        ListModel listModel = list.getModel();&#10;        for (int i = 0; i &lt; listModel.getSize(); i++) {&#10;            if (i != index) {&#10;                listData.addElement(listModel.getElementAt(i));&#10;            }&#10;        }&#10;        list.setListData(listData);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a332'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a336' name = 'SwingViewFactory' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a337'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a338' name = 'createContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a339' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a122'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a340' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a341' language = 'java' body = '        return new SwingContactListView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a338'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a342' name = 'createNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a343' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a127'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a344' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a345' language = 'java' body = '        return new SwingNewContactDialog();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a342'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a346' name = 'createConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a347' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a132'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a348' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a349' language = 'java' body = '        return new SwingConversationView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a346'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a350' name = 'SwingViewFactory' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a59'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a351' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a336'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a352' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a353' language = 'java' body = '        // fail factory creation if Swing not available&#10;        Class.forName(&quot;javax.swing.UIManager&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a350'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a47' name = 'SwingConversationView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a354'/>
                        <UML:Dependency xmi.idref = 'a355'/>
                        <UML:Dependency xmi.idref = 'a356'/>
                        <UML:Dependency xmi.idref = 'a58'/>
                        <UML:Dependency xmi.idref = 'a357'/>
                        <UML:Dependency xmi.idref = 'a358'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a46'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a359' name = 'messageField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a360' language = 'java' body = 'new JTextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a51'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a361' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a362' language = 'java' body = 'new JPanel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a44'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a363' name = 'sendBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a364' language = 'java' body = 'new JButton(&quot;Send&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a56'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a365' name = 'convPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a366' language = 'java' body = 'new JPanel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a44'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a367' name = 'textConvField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a368' language = 'java' body = 'new JTextPane()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a57'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a369' name = 'textConvScroll' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a370' language = 'java' body = 'new JScrollPane()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a52'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a371' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a372' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a232'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a373' name = 'SwingConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a59'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a374' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a47'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a375' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a376' language = 'java' body = '        addWindowListener(new WindowAdapter() {&#10;            public void windowClosing(WindowEvent e) {&#10;                notifyClose();&#10;            }&#10;        });&#10;        sendBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifySendClicked();&#10;            }&#10;        });&#10;        messageField.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifySendClicked();&#10;            }&#10;        });&#10;        setTitle(&quot;Message&quot;);&#10;        getContentPane().setLayout(new BorderLayout());&#10;        textConvField.setEditable(false);&#10;        textConvScroll.setPreferredSize(new Dimension(500, 300));&#10;        textConvScroll.getViewport().setView(textConvField);&#10;        convPanel.setLayout(new BorderLayout());&#10;        convPanel.add(textConvScroll, BorderLayout.CENTER);&#10;        getContentPane().add(convPanel, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new BorderLayout());&#10;        btnPanel.add(sendBtn, BorderLayout.EAST);&#10;        btnPanel.add(messageField, BorderLayout.CENTER);&#10;        getContentPane().add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;        setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a373'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a377' name = 'getContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a378' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a156'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a379' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a380' language = 'java' body = '        return messageField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a377'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a381' name = 'addContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a382' name = 'content' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a156'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a383' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a384' language = 'java' body = '        if (content instanceof String) {&#10;            textConvField.setText(textConvField.getText() + content.toString() + &quot;\n&quot;);&#10;        } else if (content instanceof Image) {&#10;            Image im = (Image) content;&#10;            convPanel.setSize(im.getWidth(convPanel), im.getHeight(convPanel));&#10;            Graphics g = convPanel.getGraphics();&#10;            g.drawImage(im, 1, 1, convPanel);&#10;            g.finalize();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a381'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a385' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a386' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a142'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a387' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a388' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a385'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a389' name = 'notifyClose' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a390' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a391' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationClose();&#10;        }&#10;        setVisible(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a389'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a392' name = 'notifySendClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a393' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a394' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationSend();&#10;        }&#10;        messageField.setText(&quot;&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a392'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a395' name = 'setVisible' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a396' name = 'visible' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a199'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a397' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a398' language = 'java' body = '        if (!isShowing() &amp;&amp; visible) {&#10;            pop();&#10;        }&#10;        super.setVisible(visible);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a395'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a399' name = 'pop' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a400' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a401' language = 'java' body = '        im.InstantMessagingClient.getInstance().play(getClass().getResource(&quot;pop.wav&quot;));&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a399'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Package xmi.id = 'a402' name = 'awt' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a203' name = 'AWTContactListView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a202'/>
                        <UML:Dependency xmi.idref = 'a403'/>
                        <UML:Dependency xmi.idref = 'a404'/>
                        <UML:Dependency xmi.idref = 'a405'/>
                        <UML:Dependency xmi.idref = 'a406'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a407'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a408' name = 'AWTContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a59'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a409' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a203'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a410' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a411' language = 'java' body = '        addContactBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifyAddClicked();&#10;            }&#10;        });&#10;        removeContactBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifyRemoveClicked();&#10;            }&#10;        });&#10;        list.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifyContactAction();&#10;            }&#10;        });&#10;        setLayout(new BorderLayout());&#10;        add(list, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new FlowLayout());&#10;        btnPanel.add(addContactBtn);&#10;        btnPanel.add(removeContactBtn);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        im.InstantMessagingClient.getInstance().add(this);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a408'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a412' name = 'list' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a413' language = 'java' body = 'new List()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a414'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a415' name = 'addContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a416' language = 'java' body = 'new Button(&quot;Add&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a417'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a418' name = 'removeContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a419' language = 'java' body = 'new Button(&quot;Remove&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a417'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a420' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a421' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a422'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a423' name = 'addContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a424' name = 'contact' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a425' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a426' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a427' language = 'java' body = '        list.add(contact, index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a423'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a428' name = 'removeContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a429' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a430' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a431' language = 'java' body = '        list.remove(index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a428'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a432' name = 'getSelectedContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a433' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a434' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a435' language = 'java' body = '        return list.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a432'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a436' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a437' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a190'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a438' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a439' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a436'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a440' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a441' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a232'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a442' name = 'notifyAddClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a443' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a444' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAdd();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a442'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a445' name = 'notifyRemoveClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a446' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a447' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListRemove();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a445'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a448' name = 'notifyContactAction' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a449' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a450' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ContactListViewListener) listeners.elementAt(i)).onContactListAction();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a448'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a144' name = 'AWTConversationView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a143'/>
                        <UML:Dependency xmi.idref = 'a451'/>
                        <UML:Dependency xmi.idref = 'a452'/>
                        <UML:Dependency xmi.idref = 'a453'/>
                        <UML:Dependency xmi.idref = 'a454'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a455'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a456' name = 'AWTConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a59'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a457' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a144'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a458' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a459' language = 'java' body = '        addWindowListener(new WindowAdapter() {&#10;            public void windowClosing(WindowEvent e) {&#10;                notifyClose();&#10;            }&#10;        });&#10;        sendBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifySendClicked();&#10;            }&#10;        });&#10;        messageField.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                notifySendClicked();&#10;            }&#10;        });&#10;        setTitle(&quot;Message&quot;);&#10;        setLayout(new BorderLayout());&#10;        textConvField.setEditable(false);&#10;        convPanel.setLayout(new BorderLayout());&#10;        convPanel.add(textConvField, BorderLayout.CENTER);&#10;        add(convPanel, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new BorderLayout());&#10;        btnPanel.add(sendBtn, BorderLayout.EAST);&#10;        btnPanel.add(messageField, BorderLayout.CENTER);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;        setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a456'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a460' name = 'messageField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a461' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a462'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a463' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a464' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a422'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a465' name = 'sendBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a466' language = 'java' body = 'new Button(&quot;Send&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a417'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a467' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a468' language = 'java' body = '        return messageField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a469'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a470' name = 'convPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a471' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a422'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a472' name = 'addContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a473' name = 'content' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a156'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a469' name = 'getContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a474' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a156'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a475' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a476' language = 'java' body = '        if (content instanceof String) {&#10;            textConvField.append(content.toString() + &quot;\n&quot;);&#10;        } else if (content instanceof Image) {&#10;            Image im = (Image) content;&#10;            convPanel.setSize(im.getWidth(convPanel), im.getHeight(convPanel));&#10;            Graphics g = convPanel.getGraphics();&#10;            g.drawImage(im, 1, 1, convPanel);&#10;            g.finalize();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a472'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a477' name = 'textConvField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a478' language = 'java' body = 'new TextArea()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a479'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a480' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a481' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a232'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a482' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a483' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a142'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a484' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a485' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a482'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a486' name = 'notifyClose' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a487' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a488' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationClose();&#10;        }&#10;        setVisible(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a486'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a489' name = 'notifySendClicked' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a490' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a491' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((ConversationViewListener) listeners.elementAt(i)).onConversationSend();&#10;        }&#10;        messageField.setText(&quot;&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a489'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a492' name = 'setVisible' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a493' name = 'visible' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a199'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a494' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a495' language = 'java' body = '        if (!isShowing() &amp;&amp; visible) {&#10;            pop();&#10;        }&#10;        super.setVisible(visible);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a492'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a496' name = 'pop' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a497' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a498' language = 'java' body = '        im.InstantMessagingClient.getInstance().play(getClass().getResource(&quot;pop.au&quot;));&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a496'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Dependency xmi.id = 'a499' isSpecification = 'false'>
                      <UML:Dependency.client>
                        <UML:Class xmi.idref = 'a153'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Package xmi.idref = 'a500'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                    <UML:Class xmi.id = 'a501' name = 'AWTViewFactory' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a502'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a503' name = 'createContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a504' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a122'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a505' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a506' language = 'java' body = '        return new AWTContactListView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a503'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a507' name = 'createNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a508' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a127'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a509' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a510' language = 'java' body = '        return new AWTNewContactDialog();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a507'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a511' name = 'createConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a512' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a132'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a513' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a514' language = 'java' body = '        return new AWTConversationView();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a511'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a515' name = 'AWTViewFactory' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a59'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a516' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a501'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a517' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a518' language = 'java' body = '        // fail factory creation if AWT not available&#10;        Class.forName(&quot;java.awt.Toolkit&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a515'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a153' name = 'AWTNewContactDialog' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a152'/>
                        <UML:Dependency xmi.idref = 'a519'/>
                        <UML:Dependency xmi.idref = 'a499'/>
                        <UML:Dependency xmi.idref = 'a520'/>
                        <UML:Dependency xmi.idref = 'a521'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a522'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a523' name = 'AWTNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a59'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a524' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a153'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a525' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a526' language = 'java' body = '        this.addWindowListener(new WindowAdapter() {&#10;            public void windowClosing(WindowEvent e) {&#10;                onCancel();&#10;            }&#10;        });&#10;        cancelBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                onCancel();&#10;            }&#10;        });&#10;        okBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                onOk();&#10;            }&#10;        });&#10;        setTitle(&quot;Add new contact&quot;);&#10;        setLayout(new BorderLayout());&#10;        dlgPanel.setLayout(new GridLayout(4,2));&#10;        dlgPanel.add(network);&#10;        dlgPanel.add(networkField);&#10;        dlgPanel.add(uid);&#10;        dlgPanel.add(uidField);&#10;        dlgPanel.add(name);&#10;        dlgPanel.add(nameField);&#10;        dlgPanel.add(password);&#10;        passwordField.setEchoChar(&apos;*&apos;);&#10;        dlgPanel.add(passwordField);&#10;        add(dlgPanel, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new FlowLayout());&#10;        btnPanel.add(okBtn);&#10;        btnPanel.add(cancelBtn);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;        setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a523'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a527' name = 'dlgPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a528' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a422'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a529' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a530' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a422'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a531' name = 'okBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a532' language = 'java' body = 'new Button(&quot;OK&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a417'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a533' name = 'cancelBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a534' language = 'java' body = 'new Button(&quot;Cancel&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a417'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a535' name = 'uid' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a536' language = 'java' body = 'new Label(&quot;User ID&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a537'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a538' name = 'name' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a539' language = 'java' body = 'new Label(&quot;Name&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a537'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a540' name = 'uidField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a541' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a462'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a542' name = 'nameField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a543' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a462'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a544' name = 'network' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a545' language = 'java' body = 'new Label(&quot;Network&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a537'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a546' name = 'networkField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a547' language = 'java' body = 'new Choice()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a548'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a549' name = 'getUid' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a550' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a551' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a552' language = 'java' body = '        return uidField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a549'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a553' name = 'getName' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a554' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a555' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a556' language = 'java' body = '        return nameField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a553'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a557' name = 'getNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a558' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a559' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a560' language = 'java' body = '        return networkField.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a557'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a561' name = 'getPassword' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a562' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a563' name = 'addListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a564' name = 'l' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a177'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a565' name = 'onOk' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a566' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a567' language = 'java' body = '        setVisible(false);&#10;        notifyListeners(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a565'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a568' name = 'onCancel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a569' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a570' language = 'java' body = '        setVisible(false);&#10;        notifyListeners(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a568'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a571' name = 'listeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a572' language = 'java' body = 'new Vector()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a232'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a573' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a574' language = 'java' body = '        listeners.addElement(l);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a563'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a575' name = 'notifyListeners' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a576' name = 'okClicked' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a199'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a577' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a578' language = 'java' body = '        for (int i = 0; i &lt; listeners.size(); i++) {&#10;            ((NewContactDialogListener) listeners.elementAt(i)).onNewContactDialogClose(okClicked, this);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a575'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a579' name = 'password' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a580' language = 'java' body = 'new Label(&quot;Password&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a537'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a581' name = 'passwordField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a582' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a462'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a583' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a584' language = 'java' body = '        return passwordField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a561'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a585' name = 'addNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a586' name = 'n' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a587' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a588' language = 'java' body = '        networkField.add(n);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a585'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Abstraction xmi.id = 'a354' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a47'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a132'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a127' name = 'NewContactDialog' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a589' name = 'getUid' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a590' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a591' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a592' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a589'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a593' name = 'getName' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a594' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a595' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a596' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a593'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a597' name = 'getNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a598' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a181'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a599' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a600' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a597'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a601' name = 'getPassword' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a602' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a603' name = 'addListener' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a604' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a177'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a605' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a606' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a603'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a607' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a608' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a601'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a609' name = 'addNetwork' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a610' name = 'n' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a611' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a612' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a609'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Generalization xmi.id = 'a502' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a501'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a119'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Interface xmi.id = 'a177' name = 'NewContactDialogListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a613' name = 'onNewContactDialogClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a614' name = 'okClicked' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a199'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a615' name = 'dlg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a127'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a616' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a617' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a613'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Generalization xmi.id = 'a337' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a336'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a119'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Abstraction xmi.id = 'a618' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a176'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a190'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Interface xmi.id = 'a190' name = 'ContactListViewListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a619' name = 'onContactListAdd' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a620' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a621' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a619'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a622' name = 'onContactListRemove' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a623' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a624' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a622'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a625' name = 'onContactListAction' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a626' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a627' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a625'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a405' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a203'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a118'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Association xmi.id = 'a628' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a629' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a630'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a631' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a632'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a633' name = 'conversation' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a634'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a635' lower = '0' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a636'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Dependency xmi.id = 'a452' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a144'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a118'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Association xmi.id = 'a637' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a638'/>
              </UML:ModelElement.stereotype>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a639' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a640'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a641' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a632'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a642' name = 'network' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a643'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a644' lower = '1' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a116'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Dependency xmi.id = 'a520' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a153'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a118'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Collaboration xmi.id = 'a645' name = 'ReceiveMessage' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:CallAction xmi.id = 'a646' name = 'OnReceivedChangeAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a647' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a648' language = 'java' body = 'x'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a649'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Message xmi.id = 'a650' name = 'Message_1' isSpecification = 'false'>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a651'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Stimulus xmi.id = 'a651' name = 'onReceivedChange' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a652'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a653'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a654'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a646'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:CallAction xmi.id = 'a655' name = 'CreateMessageViewAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a656' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a657' language = 'java' body = 'view'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                </UML:CallAction>
                <UML:Message xmi.id = 'a658' name = 'Message_3' isSpecification = 'false'>
                  <UML:Message.predecessor>
                    <UML:Message xmi.idref = 'a650'/>
                  </UML:Message.predecessor>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a659'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Object xmi.id = 'a660' name = 'viewFactory' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a661'/>
                  </UML:Instance.linkEnd>
                </UML:Object>
                <UML:Object xmi.id = 'a652' name = 'network' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a116'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a662'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a654' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a663' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a653'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a662' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a652'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Object xmi.id = 'a653' name = 'client' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a632'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a663'/>
                    <UML:LinkEnd xmi.idref = 'a664'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a665' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a664' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a653'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a661' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a660'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:CallAction xmi.id = 'a666' name = 'Action_2' isSpecification = 'false'
                  isAsynchronous = 'false'/>
                <UML:Stimulus xmi.id = 'a659' name = 'createMessageView' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a653'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a660'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a665'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a655'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:CollaborationInstanceSet xmi.id = 'a667' name = 'Collaboration_Instance_Set_1'
                  isSpecification = 'false'>
                  <UML:CollaborationInstanceSet.interactionInstanceSet>
                    <UML:InteractionInstanceSet xmi.id = 'a668' name = 'Collaboration_Instance_Set_2'
                      isSpecification = 'false'/>
                  </UML:CollaborationInstanceSet.interactionInstanceSet>
                  <UML:CollaborationInstanceSet.collaboration>
                    <UML:Collaboration xmi.idref = 'a645'/>
                  </UML:CollaborationInstanceSet.collaboration>
                  <UML:CollaborationInstanceSet.participatingInstance>
                    <UML:Object xmi.idref = 'a660'/>
                    <UML:Object xmi.idref = 'a652'/>
                    <UML:Object xmi.idref = 'a653'/>
                  </UML:CollaborationInstanceSet.participatingInstance>
                  <UML:CollaborationInstanceSet.participatingLink>
                    <UML:Link xmi.idref = 'a665'/>
                    <UML:Link xmi.idref = 'a654'/>
                  </UML:CollaborationInstanceSet.participatingLink>
                </UML:CollaborationInstanceSet>
                <UML:Stimulus xmi.id = 'a669' name = 'stim_2' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a653'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a652'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a666'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
              </UML:Namespace.ownedElement>
            </UML:Collaboration>
            <UML:Association xmi.id = 'a670' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a671' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a672'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a673' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a632'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a674' name = 'viewFactory' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a675'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a676' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a119'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Dependency xmi.id = 'a358' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a47'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a118'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a282' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a43'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a118'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a677' name = 'edit' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Association xmi.id = 'a678' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a638'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a679' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a680'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a681' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a176'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a682' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a683'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a684' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a685'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Association xmi.id = 'a686' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a687' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a688'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a689' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a176'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a690' name = 'view' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a691'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a692' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a122'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a141' name = 'ConversationEdit' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Abstraction xmi.idref = 'a139'/>
                  </UML:ModelElement.clientDependency>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a693'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a694' name = 'ConversationEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a59'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a695' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a636'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a696' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a141'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a697' name = 'onMessageChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a698' name = 'm' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a92'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a699' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a700' language = 'java' body = '        if (m.getContent() instanceof String) {&#10;            im.model.ContactList list =&#10;                im.InstantMessagingClient.getInstance().getContactList();&#10;            getView().addContent(list.getUserName(m.getSender())&#10;                + &quot;: &quot; + m.getContent());&#10;        } else {&#10;            getView().addContent(m.getContent());&#10;        }&#10;        getView().toFront();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a697'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a701' name = 'onContactChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a702' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a703'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a704' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a705' language = 'java' body = '        getView().setTitle(getModel().getContact().getName());&#10;        getView().toFront();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a701'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a706' name = 'onConversationClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a707' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a708' language = 'java' body = '        im.InstantMessagingClient.getInstance().removeConversation(getModel());&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a706'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a709' name = 'onConversationSend' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Operation xmi.id = 'a710' name = 'getSender' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a711' name = 'recipient' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a703'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a712' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a703'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a713' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a714' language = 'java' body = '        im.model.Contact recipient = getModel().getContact();&#10;        im.model.Contact sender = getSender(recipient);&#10;        im.model.Message msg = new im.model.Message();&#10;        msg.setNetwork(recipient.getNetwork());&#10;        msg.setSender(sender.getUserId());&#10;        msg.setRecipient(recipient.getUserId());&#10;        msg.setContent(getView().getContent());&#10;        msg.send();&#10;        getModel().setMessage(msg);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a709'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a715' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a716' language = 'java' body = '        setModel(c);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        setView(client.getViewFactory().createConversationView());&#10;        getView().addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a694'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a717' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a718' language = 'java' body = '        im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();&#10;        return c.getContactList().getIdentity(recipient.getNetwork());&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a710'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a719' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a720' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a721'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a722' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a141'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a723' name = 'view' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a724'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a725' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a132'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Association xmi.id = 'a726' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a727' name = 'listEdit' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'aggregate'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a728'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a729' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a176'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a730' name = 'contactEdit' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a731'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a732' lower = '0' upper = '-1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a733'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a176' name = 'ContactListEdit' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Abstraction xmi.idref = 'a175'/>
                    <UML:Abstraction xmi.idref = 'a618'/>
                  </UML:ModelElement.clientDependency>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a693'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a734' name = 'ContactListEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a59'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a735' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a176'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a736' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a685'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a737' name = 'onContactChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a738' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a703'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a739' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a740' language = 'java' body = '        int index = getModel().getContacts().indexOf(c);&#10;        if (index &gt; -1) {&#10;            ContactEdit edit = new ContactEdit(c);&#10;            insertContactEdit(edit, index);&#10;            getView().addContact(edit.formatContact(), index);&#10;        } else {&#10;            index = getContactEditIndex(c);&#10;            getView().removeContact(index);&#10;            removeContactEdit(getContactEditAt(index));&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a737'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a741' name = 'onContactListAdd' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a742' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a743' language = 'java' body = '        getView().setEnabled(false);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        im.view.NewContactDialog dlg =&#10;            client.getViewFactory().createNewContactDialog();&#10;        for (int i = 0; i &lt; client.getNetworks().size(); i++) {&#10;            dlg.addNetwork(client.getNetworkAt(i).getName());&#10;        }&#10;        dlg.addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a741'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a744' name = 'onContactListRemove' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a745' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a746' language = 'java' body = '        int index = getView().getSelectedContact();&#10;        if (index &gt; -1) {&#10;            im.model.Contact c = getModel().getContactAt(index);&#10;            if (c instanceof im.model.Identity) {&#10;                im.model.Identity id = (im.model.Identity) c;&#10;                id.getNetwork().logout();&#10;            } else {&#10;                c.getNetwork().removeContact(c);&#10;            }&#10;            getModel().removeContact(c);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a744'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a747' name = 'onContactListAction' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a748' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a749' language = 'java' body = '        int index = getView().getSelectedContact();&#10;        if (index &gt; -1) {&#10;            im.model.Contact c = getModel().getContactAt(index);&#10;            im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;            // reuse existing conversation, if any&#10;            for (int i = 0; i &lt; client.getConversations().size(); i++) {&#10;                im.model.Contact contact = client.getConversationAt(i).getContact();&#10;                if (contact.equals(c)) {&#10;                    client.getConversationAt(i).setContact(new im.model.Contact());&#10;                    client.getConversationAt(i).setContact(c);&#10;                    return;&#10;                }&#10;            }&#10;            // else new conversation&#10;            im.model.Conversation conv = new im.model.Conversation();&#10;            new ConversationEdit(conv);&#10;            client.addConversation(conv);&#10;            conv.setContact(c);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a747'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a750' name = 'onNewContactDialogClose' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a751' name = 'okClicked' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a199'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a752' name = 'dlg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a127'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a753' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a754' language = 'java' body = '        if (okClicked) {&#10;            im.model.Contact c;&#10;            im.networking.Network n =&#10;                im.InstantMessagingClient.getInstance().getNetworkAt(dlg.getNetwork);&#10;            if (getModel().getIdentity(dlg.getNetwork()) == null) {&#10;                im.model.Identity id = new im.model.Identity();&#10;                id.setNetwork(n);&#10;                id.setUserId(dlg.getUid());&#10;                id.setName(dlg.getName());&#10;                id.setPassword(dlg.getPassword());&#10;                c = id;&#10;                getModel().addContact(c);&#10;                id.getNetwork().login(id.getUserId(), id.getPassword());&#10;            } else {&#10;                c = new im.model.Contact();&#10;                c.setNetwork(n);&#10;                c.setUserId(dlg.getUid());&#10;                c.setName(dlg.getName());&#10;                getModel().addContact(c);&#10;                c.getNetwork().addContact(c);&#10;            }&#10;        }&#10;        getView().setEnabled(true);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a750'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a755' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a756' language = 'java' body = '        setModel(c);&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        setView(client.getViewFactory().createContactListView());&#10;        getView().addListener(this);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a734'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a757' name = 'getContactEditIndex' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a758' name = 'contact' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a703'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a759' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a181'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a760' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a761' language = 'java' body = '        for (int i = 0; i &lt; getContactEdits().size(); i++) {&#10;            if (getContactEditAt(i).getModel() == contact)&#10;                return i;&#10;        }&#10;        return -1;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a757'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Class xmi.id = 'a733' name = 'ContactEdit' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a693'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a762' name = 'ContactEdit' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:ModelElement.stereotype>
                        <UML:Stereotype xmi.idref = 'a59'/>
                      </UML:ModelElement.stereotype>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a763' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a703'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a764' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a733'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Operation xmi.id = 'a765' name = 'onStatusChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a766' name = 's' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a767' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a768' language = 'java' body = '        onChange();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a765'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a769' name = 'onNameChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a770' name = 'n' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a771' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a772' language = 'java' body = '        onChange();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a769'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Method xmi.id = 'a773' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a774' language = 'java' body = '        setModel(c);&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a762'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a775' name = 'onChange' visibility = 'private'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a776' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a777' language = 'java' body = '        &#9;int index = getListEdit().getContactEdits().indexOf(this);&#10;            if (index &gt; -1) {&#10;                getListEdit().getView().removeContact(index);&#10;                getListEdit().getView().addContact(formatContact(), index);&#10;            }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a775'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a778' name = 'formatContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a779' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a780' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a781' language = 'java' body = '        String name = getModel().getName();&#10;        String status = getModel().getStatus();&#10;        if (getModel() instanceof im.model.Identity) {&#10;            name = &quot;* &quot; + name;&#10;        } else {&#10;            name = &quot;  &quot; + name;&#10;        }&#10;        if (getModel().getNetwork() != null) {&#10;            name += &quot; - &quot; + getModel().getNetwork().getName();&#10;        }&#10;        if (status == null) {&#10;            status = &quot;offline&quot;;&#10;        }&#10;        name += &quot; (&quot; + status + &quot;)&quot;;&#10;        return name;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a778'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Association xmi.id = 'a782' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a783' name = 'list' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'composite'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a784'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a785' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a685'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a786' name = 'contact' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a787'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a788' lower = '0' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a703'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Package xmi.id = 'a789' name = 'networking' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Package xmi.id = 'a790' name = 'sms' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a791' name = 'SMS' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a792'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a793' name = 'SMS' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a59'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a794' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a791'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a795' name = 'send' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a796' name = 'msg' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a92'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a797' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a798' language = 'java' body = '        System.out.println(&quot;Sending &quot; + msg + &quot; via &quot; + getName());&#10;        // your code here&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a795'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a799' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a800' language = 'java' body = '        setName(&quot;SMS&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a793'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Generalization xmi.id = 'a792' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a791'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a116'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:DataType xmi.id = 'a801' name = 'Network[]' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true'/>
                <UML:Abstraction xmi.id = 'a802' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a68'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a65'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Abstraction xmi.id = 'a803' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a68'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a74'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Generalization xmi.id = 'a804' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a68'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a116'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Abstraction xmi.id = 'a805' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a140'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a68'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a73'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Class xmi.id = 'a116' name = 'Network' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a806'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a106' name = 'send' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a807' name = 'msg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a92'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a808' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a809' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a106'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a810' name = 'name' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a169'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a811' name = 'recvMsg' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:ModelElement.taggedValue>
                        <UML:TaggedValue xmi.id = 'a812' isSpecification = 'false'>
                          <UML:TaggedValue.dataValue>false</UML:TaggedValue.dataValue>
                          <UML:TaggedValue.type>
                            <UML:TagDefinition xmi.idref = 'a813'/>
                          </UML:TaggedValue.type>
                        </UML:TaggedValue>
                      </UML:ModelElement.taggedValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a92'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a814' name = 'login' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a815' name = 'uid' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a816' name = 'pwd' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a817' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a199'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a818' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a819' language = 'java' body = '        // your code here&#10;        return true;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a814'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a820' name = 'logout' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a821' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a822' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a820'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a823' name = 'recvContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a703'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a824' name = 'addContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a825' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a703'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a826' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a827' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a824'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a828' name = 'removeContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a829' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a703'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a830' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a831' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a828'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a832' name = 'getDefault' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'classifier' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a833' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a801'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a834' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a835' language = 'java' body = '        String[] options = {&#10;            &quot;im.networking.jabber.Jabber&quot;,&#10;            &quot;im.networking.sms.SMS&quot;&#10;        };&#10;        java.util.Vector networks = new java.util.Vector();&#10;        for (int i = 0; i &lt; options.length; i++) {&#10;            try {&#10;                networks.addElement(Class.forName(options[i]).newInstance());&#10;            } catch (Exception e) {&#10;            }&#10;        }&#10;        Network[] nwArray = new Network[networks.size()];&#10;        networks.copyInto(nwArray);&#10;        return nwArray;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a832'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Package xmi.id = 'a836' name = 'jabber' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a68' name = 'Jabber' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a803'/>
                        <UML:Abstraction xmi.idref = 'a805'/>
                        <UML:Abstraction xmi.idref = 'a802'/>
                        <UML:Dependency xmi.idref = 'a837'/>
                        <UML:Dependency xmi.idref = 'a67'/>
                        <UML:Dependency xmi.idref = 'a77'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a804'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a838' name = 'Jabber' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a59'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a839' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a68'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a840' name = 'send' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a841' name = 'msg' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a92'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a842' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a843' language = 'java' body = '        try {&#10;            if (getConnection() == null) {&#10;                throw new java.io.IOException(&quot;Cannot send message: connection not established&quot;);&#10;            }&#10;            Message message = new Message();&#10;            message.setTo(msg.getRecipient());&#10;            message.setFrom(msg.getSender());&#10;            message.setBody(msg.getContent().toString());&#10;            System.out.println(&quot;Sending &quot; + msg + &quot;: &quot; + message);&#10;            getConnection().send(message);&#10;        } catch (java.io.IOException e) {&#10;            System.err.println(e.getMessage());&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a840'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a844' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a845' language = 'java' body = '        setName(&quot;Jabber&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a838'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a846' name = 'login' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a847' name = 'uid' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a848' name = 'pwd' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a849' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a199'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a850' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a851' language = 'java' body = '        try {&#10;            this.uid = uid; &#10;            java.util.StringTokenizer address = new java.util.StringTokenizer(uid, &quot;@&quot;);&#10;            String user = address.nextToken();&#10;            String server = address.nextToken();&#10;            address = new java.util.StringTokenizer(server, &quot;/&quot;);&#10;            server = address.nextToken();&#10;            String resource = address.nextToken();&#10;            setSocket(connect(server, 5222));&#10;            if (getSocket() == null) {&#10;                throw new SocketException(connectError);&#10;            }&#10;            setConnection(new Client2Server(getSocket().getInputStream(), getSocket().getOutputStream()));&#10;            if (!getConnection().open(server, 60000)) {&#10;                throw new ConnectException(&quot;Could not establish stream to &quot; + server + &quot;:5222 after 60 seconds&quot;);&#10;            }&#10;            getConnection().setMessageListener(this);&#10;            getConnection().setIQListener(this);&#10;            getConnection().setPresenceListener(this);&#10;            boolean try_again;&#10;            do {&#10;                try_again = false;&#10;                System.out.println(&quot;Logging in &quot; + uid);&#10;                switch (getConnection().loginAny(user, resource, pwd, 30000)) {&#10;                    case Client2Server.LOGIN_BAD_PASS:&#10;                        throw new ConnectException(&quot;Bad password for &quot; + uid);&#10;                    case Client2Server.LOGIN_BAD_UID:&#10;                        if (!registerUser(user, pwd))&#10;                            throw new ConnectException(&quot;Could not register user for &quot; + uid);&#10;                        else&#10;                            try_again = true;&#10;                        break;&#10;                    case Client2Server.LOGIN_FAILED:&#10;                        throw new ConnectException(&quot;Login failed: unknown: &quot; + uid);&#10;                    case Client2Server.LOGIN_PASS_EXP:&#10;                        System.out.println(&quot;Your password has expired for &quot; + uid);&#10;                        break;&#10;                    case Client2Server.LOGIN_OK:&#10;                        break;&#10;                }&#10;            } while (try_again);&#10;            Presence pres = new Presence(Const.AVAILABLE, &quot;Available&quot;, 1);&#10;            pres.setFrom(uid);&#10;            getConnection().send(pres);&#10;            incomingPresence(pres);&#10;            getConnection().send(IQRoster.createGetRequest());&#10;            return true;&#10;        } catch (Exception e) {&#10;            System.err.println(e.getMessage());&#10;            e.printStackTrace();&#10;        }&#10;        return false;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a846'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a852' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a853' language = 'java' body = '        System.out.println(&quot;Registering &quot; + user + &quot; at &quot; + getConnection().getServerName());&#10;        try {&#10;            java.util.Hashtable info = IQRegister.getRequiredRegInfo(getConnection());&#10;            String key, value;&#10;            for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#10;                key = (String) e.nextElement();&#10;                value = (String) info.get(key);&#10;                if (key.equals(Const.USERNAME))&#10;                    info.put(key, user);&#10;                else if (key.equals(Const.PASSWORD))&#10;                    info.put(key, pwd);&#10;                else if (key.equals(Const.EMAIL))&#10;                    info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#10;                else if (key.equals(Const.INSTRUCTIONS))&#10;                    ;&#10;                else&#10;                    System.err.println(&quot;Unknown registration parameter: &quot; + key);&#10;            }&#10;            Chunk chunk = getConnection().send(&#10;                IQRegister.createSetRequest(getConnection().getServerName(), info), 30000);&#10;            return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));&#10;        } catch (java.io.IOException e) {&#10;            System.err.println(e.getMessage());&#10;            e.printStackTrace();&#10;        }&#10;        return false;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a854'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a855' name = 'logout' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Operation xmi.id = 'a856' name = 'addContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a857' name = 'c' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a703'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a858' name = 'removeContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a859' name = 'c' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a703'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a860' name = 'incomingMessage' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a861' name = 'message' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a71'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a862' name = 'incomingIQ' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a863' name = 'iq' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a70'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a864' name = 'incomingPresence' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a865' name = 'presence' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a72'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a854' name = 'registerUser' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a866' name = 'user' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a867' name = 'pwd' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a868' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a199'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a869' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a870' language = 'java' body = '        System.out.println(&quot;Message: &quot; + message);&#10;        im.model.Message msg = new im.model.Message();&#10;        msg.setSender(stripResource(message.getFrom()));&#10;        msg.setRecipient(message.getTo());&#10;        msg.setContent(message.getBody());&#10;        setRecvMsg(msg);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a860'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a871' name = 'connect' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a872' name = 'host' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a873' name = 'port' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a181'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a874' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a875'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a876' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a877' language = 'java' body = '        Socket s = null;&#10;        try {&#10;            InetAddress[] hosts = InetAddress.getAllByName(host);&#10;            java.util.Stack exceptions = new java.util.Stack();&#10;            for (int i = 0; i &lt; hosts.length; i++) {&#10;                try {&#10;                    s = new Socket(hosts[i], port);&#10;                    break;&#10;                } catch (Exception e) {&#10;                    exceptions.push(e);&#10;                }&#10;            }&#10;            StringBuffer sb = new StringBuffer();&#10;            while (!exceptions.empty()) {&#10;                sb.append(((Exception) exceptions.pop()).getMessage());&#10;            }&#10;            connectError = sb.toString();&#10;        } catch (Exception e) {&#10;            connectError = e.getMessage();&#10;        }&#10;        return s;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a871'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a878' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a879' language = 'java' body = '        try {&#10;            if (getConnection() == null) {&#10;                throw new java.io.IOException(&quot;Cannot logout: connection not established&quot;);&#10;            }&#10;            System.out.println(&quot;Closing connection for &quot; + getConnection().getServerName());&#10;            Presence p = new Presence();&#10;            p.setType(Const.UNAVAILABLE);&#10;            getConnection().send(p);&#10;            getConnection().close();&#10;        } catch (java.io.IOException e) {&#10;            e.printStackTrace();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a855'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a880' name = 'connectError' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a881' language = 'java' body = '&quot;&quot;'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a882' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a883' language = 'java' body = '        java.util.Enumeration children = iq.getChildren().elements();&#10;        while (children.hasMoreElements()) {&#10;            com.ssttr.xml.XMLElement el = (com.ssttr.xml.XMLElement) children.nextElement();&#10;            if (el instanceof IQRoster) {&#10;                for (java.util.Enumeration items = el.enumerateChildren(); items.hasMoreElements();) {&#10;                    IQRoster.Item item = (IQRoster.Item) items.nextElement();&#10;                    System.out.println(&quot;Roster Item: &quot; + item);&#10;                    if (item.getSubscription().equals(Const.BOTH) || &#10;                            item.getSubscription().equals(Const.TO)) {&#10;                        im.model.Contact c = new im.model.Contact();&#10;                        c.setNetwork(this);&#10;                        c.setUserId(item.getJID());&#10;                        c.setName(item.getItemName());&#10;                        setRecvContact(c);&#10;                    }&#10;                }&#10;            } else {&#10;                System.out.println(&quot;Unknown iq element: &quot; + el);&#10;            }&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a862'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a884' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a885' language = 'java' body = '        String type = presence.getType();&#10;        if (type == null) type = &quot;&quot;;&#10;        if (type.equals(Const.SUBSCRIBE)) {&#10;            // someone wants to subscribe to our presence&#10;            // so we slightly re-write the packet to send back &#10;            presence.setType(Const.SUBSCRIBED);&#10;            System.out.println(presence.getFrom() + &quot; wants to subscribe to your presence, allowing.&quot;);&#10;        } else if (type.equals(Const.UNSUBSCRIBE)) {&#10;            // someone wants to unsubscribe from our presence&#10;            // so we slightly re-write the packet to send back &#10;            presence.setType(Const.UNSUBSCRIBED);&#10;            System.out.println(presence.getFrom() + &quot; wants to unsubscribe from your presence, allowing.&quot;);&#10;        } else if (type.equals(Const.SUBSCRIBED)) {&#10;            System.out.println(&quot;Subscribed to: &quot; + presence);&#10;        } else if (type.equals(Const.UNSUBSCRIBED)) {&#10;            System.out.println(&quot;Unsubscribed from: &quot; + presence);&#10;        } else if (type.equals(Const.UNAVAILABLE)) {&#10;            im.model.Contact c = new im.model.Contact();&#10;            c.setNetwork(this);&#10;            c.setUserId(stripResource(presence.getFrom()));&#10;            c.setStatus(&quot;offline&quot;);&#10;            setRecvContact(c);&#10;            return;&#10;        } else {&#10;            System.out.println(&quot;Received presence: &quot; + presence);&#10;            im.model.Contact c = new im.model.Contact();&#10;            c.setNetwork(this);&#10;            c.setUserId(stripResource(presence.getFrom()));&#10;            if (presence.getShow() != null)&#10;            &#9;c.setStatus(presence.getShow());&#10;            else&#10;            &#9;c.setStatus(Const.AVAILABLE);&#10;            setRecvContact(c);&#10;            return;&#10;        }&#10;        // make sure to return it to the sender and not ourselves&#10;        String from = presence.getTo();&#10;        presence.setTo(presence.getFrom());&#10;        presence.setFrom(from);&#10;        try {&#10;            getConnection().send(presence);&#10;        } catch (java.io.IOException e) {&#10;            e.printStackTrace();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a864'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a886' name = 'stripResource' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a887' name = 'jid' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a888' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a889' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a890' language = 'java' body = '        if (uid.equals(jid)) {&#10;        &#9;return jid;&#10;        } else { // strip resource bit if remote user&#10;        &#9;java.util.StringTokenizer strip =&#10;        &#9;&#9;new java.util.StringTokenizer(jid, &quot;/&quot;);&#10;        &#9;return strip.nextToken();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a886'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a891' name = 'uid' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a892' language = 'java' body = '&quot;&quot;'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a893' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a894' language = 'java' body = '        try {&#10;            if (getConnection() == null) {&#10;                throw new java.io.IOException(&quot;Cannot add contact: connection not established&quot;);&#10;            }&#10;            Presence presence = new Presence(c.getUserId(), Const.SUBSCRIBE);&#10;            System.out.println(&quot;Adding contact &quot; + presence);&#10;            getConnection().send(presence);&#10;            IQRoster roster = new IQRoster();&#10;            roster.addItem(c.getUserId(), c.getName());&#10;            IQ iq = new IQ(Const.SET);&#10;            iq.addChild(roster);&#10;            getConnection().send(iq);&#10;        } catch (java.io.IOException e) {&#10;            System.err.println(e.getMessage());&#10;            e.printStackTrace();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a856'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a895' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a896' language = 'java' body = '        try {&#10;            if (getConnection() == null) {&#10;                throw new java.io.IOException(&quot;Cannot remove contact: connection not established&quot;);&#10;            }&#10;            IQRoster roster = new IQRoster();&#10;            roster.addItem(c.getUserId());&#10;            ((IQRoster.Item) roster.getChild(0)).setSubscription(Const.REMOVE);&#10;            IQ iq = new IQ(Const.SET);&#10;            iq.addChild(roster);&#10;            getConnection().send(iq);&#10;            Presence presence = new Presence(c.getUserId(), Const.UNSUBSCRIBE);&#10;            System.out.println(&quot;Removing contact &quot; + presence);&#10;            getConnection().send(presence);&#10;       &#9;} catch (java.io.IOException e) {&#10;            System.err.println(e.getMessage());&#10;            e.printStackTrace();&#10;       &#9;}&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a858'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Association xmi.id = 'a897' name = '' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a898' visibility = 'public' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a899'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a900' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a68'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a901' name = 'socket' visibility = 'public'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a902'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a903' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a875'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                    <UML:Association xmi.id = 'a904' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a905' visibility = 'public' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a906'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a907' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a68'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a908' name = 'connection' visibility = 'public'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a909'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a910' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:ModelElement.taggedValue>
                            <UML:TaggedValue xmi.id = 'a911' isSpecification = 'false'>
                              <UML:TaggedValue.dataValue></UML:TaggedValue.dataValue>
                              <UML:TaggedValue.type>
                                <UML:TagDefinition xmi.idref = 'a912'/>
                              </UML:TaggedValue.type>
                            </UML:TaggedValue>
                          </UML:ModelElement.taggedValue>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a64'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                  </UML:Namespace.ownedElement>
                </UML:Package>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Class xmi.id = 'a632' name = 'InstantMessagingClient' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
              isActive = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a693'/>
                <UML:Stereotype xmi.idref = 'a913'/>
                <UML:Stereotype xmi.idref = 'a78'/>
              </UML:ModelElement.stereotype>
              <UML:ModelElement.taggedValue>
                <UML:TaggedValue xmi.id = 'a914' isSpecification = 'false'>
                  <UML:TaggedValue.dataValue>Title: InstantMessagingClient\n(C) 2005, Dennis Wagelaar, System and Software Engineering Lab, Vrije Universiteit Brussel\nA simple instant messaging client generated from a PIM</UML:TaggedValue.dataValue>
                  <UML:TaggedValue.type>
                    <UML:TagDefinition xmi.idref = 'a915'/>
                  </UML:TaggedValue.type>
                </UML:TaggedValue>
                <UML:TaggedValue xmi.id = 'a916' isSpecification = 'false'>
                  <UML:TaggedValue.dataValue>&lt;p&gt;&lt;/p&gt;</UML:TaggedValue.dataValue>
                  <UML:TaggedValue.type>
                    <UML:TagDefinition xmi.idref = 'a3'/>
                  </UML:TaggedValue.type>
                </UML:TaggedValue>
              </UML:ModelElement.taggedValue>
              <UML:Classifier.feature>
                <UML:Operation xmi.id = 'a917' name = 'init' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a918' name = 'start' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a919' name = 'stop' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a649' name = 'onRecvMsgChange' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a920' name = 'r' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a92'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Operation xmi.id = 'a921' name = 'onRecvContactChange' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a922' name = 'c' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a703'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a923' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a924' language = 'java' body = '        for (int i = 0; i &lt; getConversations().size(); i++) {&#10;            String contact = getConversationAt(i).getContact().getUserId();&#10;            if (contact.equals(r.getSender())) {&#10;                getConversationAt(i).setMessage(r);&#10;                return;&#10;            }&#10;        }&#10;        // create new conversation&#10;        im.model.Conversation conv = new im.model.Conversation();&#10;        new im.edit.ConversationEdit(conv);&#10;        addConversation(conv);&#10;        for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;            if (getContactList().getContactAt(i).getUserId().equals(r.getSender())) {&#10;                conv.setContact(getContactList().getContactAt(i));&#10;                break;&#10;            }&#10;        }&#10;        if (conv.getContact() == null) {&#10;            conv.setContact(new im.model.Contact());&#10;            conv.getContact().setUserId(r.getSender());&#10;        }&#10;        conv.setMessage(r);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a649'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a925' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a926' language = 'java' body = '        loadSettings();&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a917'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a927' name = 'loadSettings' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Method xmi.id = 'a928' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a929' language = 'java' body = '        for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;            im.model.Contact listed = getContactList().getContactAt(i);&#10;            if (listed.getUserId().equals(c.getUserId())) {&#10;                if (c.getStatus() != null) {&#10;                    listed.setStatus(c.getStatus());&#10;                }&#10;                if (c.getName() != null) {&#10;                    listed.setName(c.getName());&#10;                }&#10;                return;&#10;            }&#10;        }&#10;        getContactList().addContact(c);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a921'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a930' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a931' language = 'java' body = '        try {&#10;            // ViewFactory&#10;            setViewFactory(im.view.ViewFactory.getDefault());&#10;            // Network&#10;            im.networking.Network[] networks = im.networking.Network.getDefault();&#10;            for (int i = 0; i &lt; networks.length; i++) {&#10;                addNetwork(networks[i]);&#10;            }&#10;            // Create and register edit/view&#10;            new im.edit.ContactListEdit(contactList);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a927'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a932' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a933' language = 'java' body = '        for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            im.model.Identity id = getContactList().getIdentity(getNetworkAt(i));&#10;            if (id != null) {&#10;                getNetworkAt(i).login(id.getUserId(), id.getPassword());&#10;            }&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a918'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a934' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a935' language = 'java' body = '        for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            if (getContactList().getIdentity(getNetworkAt(i)) != null) {&#10;                getNetworkAt(i).logout();&#10;            }&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a919'/>
                  </UML:Method.specification>
                </UML:Method>
              </UML:Classifier.feature>
            </UML:Class>
            <UML:Association xmi.id = 'a936' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a937' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a938'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a939' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a632'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a940' name = 'contactList' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a941'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a942' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:ModelElement.taggedValue>
                    <UML:TaggedValue xmi.id = 'a943' isSpecification = 'false'>
                      <UML:TaggedValue.dataValue>new im.model.ContactList()</UML:TaggedValue.dataValue>
                      <UML:TaggedValue.type>
                        <UML:TagDefinition xmi.idref = 'a912'/>
                      </UML:TaggedValue.type>
                    </UML:TaggedValue>
                  </UML:ModelElement.taggedValue>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a685'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Package xmi.id = 'a944' name = 'model' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Association xmi.id = 'a945' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a638'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a946' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a947'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a948' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a703'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a949' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a950'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a951' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a733'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Generalization xmi.id = 'a952' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a953'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a703'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a92' name = 'Message' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a954'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a955' name = 'sender' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a169'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a956' name = 'recipient' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a169'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a117' name = 'send' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a957' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a958' language = 'java' body = '        if (getNetwork() != null) {&#10;            getNetwork().send(this);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a117'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a959' name = 'content' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a156'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Class xmi.id = 'a960' name = 'NetworkSpecificData' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'true'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a806'/>
                  </UML:ModelElement.stereotype>
                </UML:Class>
                <UML:Class xmi.id = 'a703' name = 'Contact' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a961'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a962' name = 'userId' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a169'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a963' name = 'name' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a169'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a964' name = 'status' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a169'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a965' name = 'BelongsToNetwork' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a966' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a967'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a968' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a960'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a969' name = 'network' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a970'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a971' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a116'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Generalization xmi.id = 'a954' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a92'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a960'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Association xmi.id = 'a972' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a638'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a973' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a974'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a975' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a636'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a976' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a977'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a978' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a141'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Generalization xmi.id = 'a961' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a703'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a960'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Association xmi.id = 'a979' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a980' name = 'conversation' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'composite'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a981'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a982' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a636'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a983' name = 'message' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a984'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a985' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a92'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a636' name = 'Conversation' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a806'/>
                  </UML:ModelElement.stereotype>
                </UML:Class>
                <UML:Class xmi.id = 'a953' name = 'Identity' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a952'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a986' name = 'password' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a169'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a987' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a988' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a989'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a990' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a636'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a991' name = 'contact' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a992'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a993' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a703'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a685' name = 'ContactList' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a806'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a994' name = 'getIdentity' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a995' name = 'forNw' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a116'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a996' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a953'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a997' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a998' language = 'java' body = '        for (int i = 0; i &lt; getContacts().size(); i ++) {&#10;            Contact contact = getContactAt(i);&#10;            if ((contact instanceof Identity) &amp;&amp; (contact.getNetwork() == forNw))&#10;                return (Identity) contact;&#10;        }&#10;        return null;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a994'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a999' name = 'getUserName' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a1000' name = 'userId' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a1001' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a169'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a1002' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a1003' language = 'java' body = '        for (int i = 0; i &lt; getContacts().size(); i ++) {&#10;            if (getContactAt(i).getUserId().equals(userId))&#10;                return getContactAt(i).getName();&#10;        }&#10;        return userId;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a999'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a206' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a40'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a118'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'a806' name = 'Observable' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a140' name = 'realize' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Abstraction</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'a1004' name = 'ParameterInfo' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1005'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1006' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:TagDefinition xmi.id = 'a915' name = 'AppletInfo' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1007'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1008' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Include xmi.id = 'a1009' isSpecification = 'false'>
          <UML:Include.addition>
            <UML:UseCase xmi.idref = 'a32'/>
          </UML:Include.addition>
          <UML:Include.base>
            <UML:UseCase xmi.idref = 'a8'/>
          </UML:Include.base>
        </UML:Include>
        <UML:UseCase xmi.id = 'a33' name = 'Add contact' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:UseCase.include>
            <UML:Include xmi.idref = 'a31'/>
          </UML:UseCase.include>
        </UML:UseCase>
        <UML:TagDefinition xmi.id = 'a813' name = 'transient' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1010'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1011' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'a638' name = 'subscribe' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Association</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a1012' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1013' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1014'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1015' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a17'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1016' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1017'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1018' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a23'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a1019' name = 'ValueObject' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a1020' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1021' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1022'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1023' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a21'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1024' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1025'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1026' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a12'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a1027' name = 'postcondition' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:UseCase xmi.id = 'a32' name = 'Update contact list' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Actor xmi.id = 'a17' name = 'User' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:UseCase xmi.id = 'a8' name = 'Remove contact' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:UseCase.include>
            <UML:Include xmi.idref = 'a1009'/>
          </UML:UseCase.include>
        </UML:UseCase>
        <UML:Stereotype xmi.id = 'a1028' name = 'invariant' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:TagDefinition xmi.id = 'a912' name = 'gentleware-initialValue' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a1029'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a1030' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Actor xmi.id = 'a12' name = 'Network' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Stereotype xmi.id = 'a1031' name = 'process' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a693' name = 'Observer' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a1032' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1033' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1034'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1035' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a33'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1036' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1037'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1038' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a12'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a913' name = 'Singleton' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a1039' name = 'accessor' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a63' name = 'use' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a1040' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1041' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1042'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1043' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a17'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1044' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1045'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1046' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a32'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Package xmi.id = 'a1047' name = 'java' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a1048' name = 'util' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a232' name = 'Vector' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Dependency xmi.id = 'a284' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a43'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a232'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a355' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a47'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a232'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a403' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a203'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a232'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a209' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a40'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a232'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a521' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a153'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a232'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a454' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a144'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Class xmi.idref = 'a232'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a519' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a153'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1049'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a357' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a47'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1049'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a406' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a203'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1049'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a208' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a40'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1049'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a1050' name = 'lang' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a1051' name = 'ClassNotFoundException' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a22'/>
                  </UML:ModelElement.stereotype>
                  <UML:Namespace.ownedElement>
                    <UML:Exception xmi.id = 'a1052' name = 'swingViewFactoryException' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Signal.context>
                        <UML:Operation xmi.idref = 'a350'/>
                      </UML:Signal.context>
                    </UML:Exception>
                    <UML:Exception xmi.id = 'a1053' name = 'awtViewFactoryException' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Signal.context>
                        <UML:Operation xmi.idref = 'a515'/>
                      </UML:Signal.context>
                    </UML:Exception>
                  </UML:Namespace.ownedElement>
                </UML:Class>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Package xmi.id = 'a1049' name = 'awt' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a414' name = 'List' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a462' name = 'TextField' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a537' name = 'Label' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a417' name = 'Button' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Dependency xmi.id = 'a207' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a40'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a500'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a281' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a43'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a500'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a451' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a144'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a500'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a404' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a203'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a500'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a548' name = 'Choice' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a479' name = 'TextArea' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Generalization xmi.id = 'a455' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a144'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a1054'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Generalization xmi.id = 'a522' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a153'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a1054'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Package xmi.id = 'a500' name = 'event' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Dependency xmi.id = 'a356' isSpecification = 'false'>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a47'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Package xmi.idref = 'a500'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Class xmi.id = 'a422' name = 'Panel' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a1054' name = 'Frame' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Generalization xmi.id = 'a407' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a203'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a422'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a283' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a43'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1049'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a837' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a68'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1055'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a453' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a144'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a1049'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a1055' name = 'net' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a875' name = 'Socket' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Association xmi.id = 'a1056' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1057' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1058'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1059' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a17'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1060' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1061'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1062' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a8'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a1063' name = 'initializer' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Operation</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a1064' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a1065' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1066'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1067' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a17'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a1068' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a1069'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a1070' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a33'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Package xmi.id = 'a1071' name = 'ocl' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:DataType xmi.id = 'a1072' name = 'OclType' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1073' name = 'Sequence' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a199' name = 'Boolean' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1074' name = 'Real' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a181' name = 'Integer' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1075' name = 'Collection' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1076' name = 'Bag' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a1077' name = 'Set' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a156' name = 'OclAny' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a169' name = 'String' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
          </UML:Namespace.ownedElement>
        </UML:Package>
      </UML:Namespace.ownedElement>
    </UML:Model>
  </XMI.content>
</XMI>
