<?xml version = '1.0' encoding = 'ISO-8859-1' ?>
<XMI xmi.version = '1.2' xmlns:UML = 'org.omg.xmi.namespace.UML' timestamp = 'Mon May 02 21:42:54 CEST 2005'>
  <XMI.header>
    <XMI.documentation>
      <XMI.exporter>Netbeans XMI Writer</XMI.exporter>
      <XMI.exporterVersion>1.0</XMI.exporterVersion>
    </XMI.documentation>
  </XMI.header>
  <XMI.content>
    <UML:Model xmi.id = 'a1' name = 'InstantMessengerModel' isSpecification = 'false'
      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
      <UML:Namespace.ownedElement>
        <UML:Stereotype xmi.id = 'a2' name = 'exception' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a3' name = 'realize' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Abstraction</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a4' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a5' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a6'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a7' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a8'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a9' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a10'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a11' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a12'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Association xmi.id = 'a13' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a14' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a15'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a16' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a8'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a17' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a18'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a19' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a20'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a21' name = 'use' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Include xmi.id = 'a22' isSpecification = 'false'>
          <UML:Include.addition>
            <UML:UseCase xmi.idref = 'a23'/>
          </UML:Include.addition>
          <UML:Include.base>
            <UML:UseCase xmi.idref = 'a24'/>
          </UML:Include.base>
        </UML:Include>
        <UML:Stereotype xmi.id = 'a25' name = 'Observable' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:UseCase xmi.id = 'a12' name = 'Receive message' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Package xmi.id = 'a26' name = 'im' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Association xmi.id = 'a27' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a28'/>
              </UML:ModelElement.stereotype>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a29' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a30'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a31' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a32'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a33' name = 'network' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a34'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a35' lower = '1' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a36'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Package xmi.id = 'a37' name = 'view' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Association xmi.id = 'a38' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a28'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a39' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a40'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a41' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a42'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a43' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a44'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a45' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a46'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Association xmi.id = 'a47' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a48' name = 'contactView' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a49'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a50' lower = '0' upper = '-1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a51'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a52' name = 'listView' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'aggregate'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a53'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a54' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a42'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Interface xmi.id = 'a55' name = 'ViewFactory' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a56' name = 'createContactListView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a57' name = 'l' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a46'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a58' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a42'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a59' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a60' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a56'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a61' name = 'createContactView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a62' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a63'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a64' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a51'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a65' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a66' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a61'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a67' name = 'createConversationView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a68' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a69'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a70' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a71'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a72' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a73' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a67'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Generalization xmi.id = 'a74' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a75'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a51'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Abstraction xmi.id = 'a76' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a3'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a77'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a55'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Class xmi.id = 'a51' name = 'ContactView' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a78'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a79' name = 'model' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a80' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a63'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a81' name = 'listView' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a82' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a42'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a83' name = 'onNameChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a84' name = 'n' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a85'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a86' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a87' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a83'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a88' name = 'onStatusChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a89' name = 's' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a90'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a91' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a92' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a88'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a93' name = '' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a94' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a95'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a96' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a32'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a97' name = 'viewFactory' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a98'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a99' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a55'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a42' name = 'ContactListView' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'true'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a78'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a100' name = 'model' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a101' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a46'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a102' name = 'contactView' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a103' language = 'java' body = 'new java.util.ArrayList()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a104'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a105' name = 'onContactChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a106' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a63'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a107' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a108' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a105'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a109' name = 'onWindowClosing' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a110' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a111' language = 'java' body = '        im.InstantMessagingClient.getInstance().exit();&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a109'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Generalization xmi.id = 'a112' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a113'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a71'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Generalization xmi.id = 'a114' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a115'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a42'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a71' name = 'ConversationView' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'true'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a78'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a116' name = 'model' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a117' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a69'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a118' name = 'onMessageChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a119' name = 'm' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a120'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a121' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a122' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a118'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a123' name = 'onContactChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a124' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a63'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a125' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a126' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a123'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a127' name = 'onFactoryChange' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a128' name = 'f' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Interface xmi.idref = 'a129'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a130' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a131' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a127'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Package xmi.id = 'a132' name = 'awt' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a113' name = 'AWTConversationView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a112'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a133' name = 'impl' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a134' language = 'java' body = 'new AWTConversation()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a135'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a136' name = 'AWTConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a137'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a138' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a113'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a139' name = 'onMessageChange' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a140' name = 'm' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a120'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a141' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a142' language = 'java' body = '        if (getModel().getMessages().contains(m)) {&#10;            if (m.getContent() instanceof String) {&#10;                im.model.ContactList list =&#10;                    im.InstantMessagingClient.getInstance().getContactList();&#10;                getImpl().addContent(list.getUserName(m.getSender())&#10;                    + &quot;: &quot; + m.getContent());&#10;            } else {&#10;                getImpl().addContent(m.getContent());&#10;            }&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a139'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a143' name = 'onContactChange' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a144' name = 'c' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a63'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a145' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a146' language = 'java' body = '        getImpl().setTitle(getModel().getContact().getName());&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a143'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a147' name = 'onFactoryChange' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a148' name = 'f' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a129'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a149' name = 'onSendClicked' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a150' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a151' language = 'java' body = '        im.model.Contact recipient = getModel().getContact();&#10;        im.model.Contact sender = getSender(recipient);&#10;        im.model.Message msg = getModel().getFactory().createMessage();&#10;        msg.setNetwork(recipient.getNetwork());&#10;        msg.setSender(sender.getUserId());&#10;        msg.setRecipient(recipient.getUserId());&#10;        msg.setContent(getImpl().getContent());&#10;        msg.send();&#10;        getImpl().setContent(null);&#10;        getModel().addMessage(msg);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a149'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a152' name = 'onWindowClosing' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Operation xmi.id = 'a153' name = 'getSender' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a154' name = 'recipient' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a63'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a155' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a63'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a156' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a157' language = 'java' body = '        im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();&#10;        return c.getContactList().getIdentity(recipient.getNetwork());&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a153'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a158' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a159' language = 'java' body = '        getImpl().addWindowListener(new java.awt.event.WindowAdapter() {&#10;            public void windowClosing(java.awt.event.WindowEvent e) {&#10;                onWindowClosing();&#10;            }&#10;        });&#10;        getImpl().addSendActionListener(new java.awt.event.ActionListener() {&#10;            public void actionPerformed(java.awt.event.ActionEvent e) {&#10;                onSendClicked();&#10;            }&#10;        });&#10;        getImpl().setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a136'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a160' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a161' language = 'java' body = '        if (f.createMessage().getContent() instanceof String) {&#10;            getImpl().enableText();&#10;        } else {&#10;            getImpl().disableText();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a147'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a162' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a163' language = 'java' body = '        getImpl().setVisible(false);&#10;        im.InstantMessagingClient.getInstance().removeConversation(getModel());&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a152'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Dependency xmi.id = 'a164' isSpecification = 'false'>
                      <UML:Dependency.client>
                        <UML:Class xmi.idref = 'a165'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Package xmi.idref = 'a166'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                    <UML:Class xmi.id = 'a115' name = 'AWTContactListView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a114'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a167' name = 'impl' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a168' language = 'java' body = 'new AWTContactList()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a169'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a170' name = 'newContactDlg' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a171' language = 'java' body = 'null'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a165'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a172' name = 'AWTContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a137'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a173' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a115'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a174' name = 'onContactChange' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a175' name = 'contact' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a63'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a176' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a177' language = 'java' body = '        int index = getModel().getContacts().indexOf(contact);&#10;        if (index &gt; -1) {&#10;            im.view.ContactView view =&#10;                im.InstantMessagingClient.getInstance().getViewFactory().createContactView(contact);&#10;            if (view instanceof AWTContactView) {&#10;                ((AWTContactView) view).setImpl(getImpl());&#10;            }&#10;            getImpl().addContact(contact, index);&#10;            insertContactView(view, index);&#10;        } else {&#10;            index = getContactViewIndex(contact);&#10;            getImpl().removeContact(index);&#10;            removeContactView(getContactViewAt(index));&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a174'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a178' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a179' language = 'java' body = '        getImpl().addWindowListener(new java.awt.event.WindowAdapter() {&#10;            public void windowClosing(java.awt.event.WindowEvent e) {&#10;                onWindowClosing();&#10;            }&#10;        });&#10;        getImpl().addAddActionListener(new java.awt.event.ActionListener() {&#10;            public void actionPerformed(java.awt.event.ActionEvent e) {&#10;                onAddBtnClicked();&#10;            }&#10;        });&#10;        getImpl().addRemoveActionListener(new java.awt.event.ActionListener() {&#10;            public void actionPerformed(java.awt.event.ActionEvent e) {&#10;                onRemoveBtnClicked();&#10;            }&#10;        });&#10;        getImpl().addContactActionListener(new java.awt.event.ActionListener() {&#10;            public void actionPerformed(java.awt.event.ActionEvent e) {&#10;                onContactDoubleClicked();&#10;            }&#10;        });&#10;        getImpl().setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a172'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a180' name = 'onAddBtnClicked' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a181' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a182' language = 'java' body = '        AWTNewContactDialog dlg = new AWTNewContactDialog(getImpl());&#10;        setNewContactDlg(dlg);&#10;        dlg.addComponentListener(new java.awt.event.ComponentAdapter() {&#10;            public void componentHidden(java.awt.event.ComponentEvent e) {&#10;                onNewContactDlgClose();&#10;            }&#10;        });&#10;        dlg.setModal(true);&#10;        dlg.setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a180'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a183' name = 'onRemoveBtnClicked' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a184' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a185' language = 'java' body = '        int index = getImpl().getSelectedIndex();&#10;        if (index &gt; -1) {&#10;            im.model.Contact c = getModel().getContactAt(index);&#10;            if (!(c instanceof im.model.Identity)) {&#10;                getModel().removeContact(c);&#10;            }&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a183'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a186' name = 'onContactDoubleClicked' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a187' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a188' language = 'java' body = '        int index = getImpl().getSelectedIndex();&#10;        if (index &gt; -1) {&#10;            im.model.Contact c = getContactViewAt(index).getModel();&#10;            im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;            im.model.Conversation conv = new im.model.Conversation();&#10;            client.getViewFactory().createConversationView(conv);&#10;            client.addConversation(conv);&#10;            conv.setContact(c);&#10;            if (client.getMessageFactorys().size() == 1) {&#10;                conv.setFactory(client.getMessageFactoryAt(0));&#10;            } else {&#10;                System.out.println(&quot;TODO: multiple message kind handling&quot;);&#10;                conv.setFactory(client.getMessageFactoryAt(0));&#10;                // 1. new message dialog, in which message type gets chosen&#10;                // 2. new message gets created, along with view&#10;            }&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a186'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a189' name = 'onNewContactDlgClose' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a190' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a191'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a192' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a193' language = 'java' body = '        AWTNewContactDialog dlg = getNewContactDlg();&#10;        if (dlg.getOkClicked()) {&#10;            im.model.Contact c = new im.model.Contact();&#10;            c.setNetwork(dlg.getNetwork());&#10;            c.setUserId(dlg.getUid());&#10;            c.setName(dlg.getName());&#10;            getModel().addContact(c);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a189'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a194' name = 'getContactViewIndex' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a195' name = 'contact' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a63'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a196' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a197'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a198' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a199' language = 'java' body = '        for (int i = 0; i &lt; getContactViews().size(); i++) {&#10;            if (getContactViewAt(i).getModel() == contact)&#10;                return i;&#10;        }&#10;        return -1;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a194'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a75' name = 'AWTContactView' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a74'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a200' name = 'impl' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a201' language = 'java' body = 'null'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a169'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a202' name = 'onNameChange' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a203' name = 'name' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a204' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a205' language = 'java' body = '        onChange();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a202'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a206' name = 'onStatusChange' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a207' name = 's' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a208' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a209' language = 'java' body = '        onChange();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a206'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a210' name = 'onChange' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a211' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a212' language = 'java' body = '        int index = getListView().getContactViews().indexOf(this);&#10;        if (index &gt; -1) {&#10;            getImpl().removeContact(index);&#10;            getImpl().addContact(getModel(), index);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a210'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Association xmi.id = 'a213' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a214' visibility = 'public' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a215'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a216' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a113'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a217' name = 'impl' visibility = 'public'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a218'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a219' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:ModelElement.taggedValue>
                            <UML:TaggedValue xmi.id = 'a220' isSpecification = 'false'>
                              <UML:TaggedValue.dataValue>new AWTConversation()</UML:TaggedValue.dataValue>
                              <UML:TaggedValue.type>
                                <UML:TagDefinition xmi.idref = 'a221'/>
                              </UML:TaggedValue.type>
                            </UML:TaggedValue>
                          </UML:ModelElement.taggedValue>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a135'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                    <UML:Class xmi.id = 'a169' name = 'AWTContactList' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a222'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a223'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a224' name = 'AWTContactList' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a137'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a225' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a169'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a226' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a227' language = 'java' body = '        setTitle(&quot;Instant Messenger&quot;);&#10;        setLayout(new BorderLayout());&#10;        add(list, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new FlowLayout());&#10;        btnPanel.add(addContactBtn);&#10;        btnPanel.add(removeContactBtn);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a224'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a228' name = 'list' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a229' language = 'java' body = 'new List()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a230'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a231' name = 'addContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a232' language = 'java' body = 'new Button(&quot;Add contact&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a233'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a234' name = 'removeContactBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a235' language = 'java' body = 'new Button(&quot;Remove contact&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a233'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a236' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a237' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a238'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a239' name = 'addContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a240' name = 'contact' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a63'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a241' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a197'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a242' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a243' language = 'java' body = '        String name = contact.getName();&#10;        String status = contact.getStatus();&#10;        if (contact instanceof im.model.Identity) {&#10;            name = &quot;* &quot; + name;&#10;        } else {&#10;            name = &quot;  &quot; + name;&#10;        }&#10;        if (status == null) {&#10;        &#9;status = &quot;offline&quot;;&#10;        }&#10;        name += &quot; (&quot; + status + &quot;)&quot;;&#10;        list.add(name, index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a239'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a244' name = 'removeContact' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a245' name = 'index' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a197'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a246' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a247' language = 'java' body = '        list.remove(index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a244'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a248' name = 'addAddActionListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a249' name = 'listener' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a250'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a251' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a252' language = 'java' body = '        addContactBtn.addActionListener(listener);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a248'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a253' name = 'addRemoveActionListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a254' name = 'listener' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a250'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a255' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a256' language = 'java' body = '        removeContactBtn.addActionListener(listener);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a253'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a257' name = 'addContactActionListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a258' name = 'listener' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a250'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a259' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a260' language = 'java' body = '        list.addActionListener(listener);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a257'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a261' name = 'getSelectedIndex' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a262' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a197'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a263' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a264' language = 'java' body = '        return list.getSelectedIndex();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a261'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a77' name = 'AWTViewFactory' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a76'/>
                      </UML:ModelElement.clientDependency>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a265' name = 'createContactListView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a266' name = 'list' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a46'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a267' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a42'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a268' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a269' language = 'java' body = '        AWTContactListView view = new AWTContactListView();&#10;        view.setModel(list);&#10;        return view;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a265'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a270' name = 'createContactView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a271' name = 'contact' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a63'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a272' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a51'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a273' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a274' language = 'java' body = '        AWTContactView view = new AWTContactView();&#10;        view.setModel(contact);&#10;        return view;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a270'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a275' name = 'createConversationView' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a276' name = 'conversation' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a69'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a277' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a71'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a278' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a279' language = 'java' body = '        AWTConversationView view = new AWTConversationView();&#10;        view.setModel(conversation);&#10;        return view;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a275'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a135' name = 'AWTConversation' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a280'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a281'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a282' name = 'AWTConversation' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a137'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a283' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a135'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a284' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a285' language = 'java' body = '        setTitle(&quot;Message&quot;);&#10;        setLayout(new BorderLayout());&#10;        textConvField.setEditable(false);&#10;        convPanel.setLayout(new BorderLayout());&#10;        add(convPanel, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new BorderLayout());&#10;        btnPanel.add(sendBtn, BorderLayout.EAST);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a282'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a286' name = 'messageField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a287' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a288'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a289' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a290' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a238'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a291' name = 'sendBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a292' language = 'java' body = 'new Button(&quot;Send&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a233'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a293' name = 'setContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a294' name = 'content' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a295'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a296' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a297' language = 'java' body = '        if (content == null) {&#10;            messageField.setText(&quot;&quot;);&#10;        } else if (content instanceof String) {&#10;            messageField.setText(content.toString());&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a293'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a298' name = 'getContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a299' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a295'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a300' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a301' language = 'java' body = '        return messageField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a298'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a302' name = 'convPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a303' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a238'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a304' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a305' language = 'java' body = '        messageField.addActionListener(listener);&#10;        sendBtn.addActionListener(listener);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a306'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a307' name = 'addContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a308' name = 'content' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a295'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a309' name = 'enableText' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Operation xmi.id = 'a310' name = 'disableText' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Operation xmi.id = 'a306' name = 'addSendActionListener' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a311' name = 'listener' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Interface xmi.idref = 'a250'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a312' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a313' language = 'java' body = '        if (content instanceof String) {&#10;            enableText();&#10;            textConvField.append(content.toString() + &quot;\n&quot;);&#10;        } else if (content instanceof Image) {&#10;            disableText();&#10;            Image im = (Image) content;&#10;            convPanel.setSize(im.getWidth(convPanel), im.getHeight(convPanel));&#10;            Graphics g = convPanel.getGraphics();&#10;            g.drawImage(im, 1, 1, convPanel);&#10;            g.finalize();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a307'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a314' name = 'textConvField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a315' language = 'java' body = 'new TextArea()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a316'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a317' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a318' language = 'java' body = '        if (convPanel.getComponentCount() == 0) {&#10;            convPanel.add(textConvField, BorderLayout.CENTER);&#10;            btnPanel.add(messageField, BorderLayout.CENTER);&#10;            pack();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a309'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a319' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a320' language = 'java' body = '        if (convPanel.getComponentCount() &gt; 0) {&#10;            convPanel.remove(textConvField);&#10;            btnPanel.remove(messageField);&#10;            pack();&#10;    &#9;}&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a310'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a165' name = 'AWTNewContactDialog' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a164'/>
                        <UML:Dependency xmi.idref = 'a321'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a322'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a323' name = 'AWTNewContactDialog' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a137'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a324' name = 'owner' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a325'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a326' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a165'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a327' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a328' language = 'java' body = '        super(owner);&#10;        this.addWindowListener(new WindowAdapter() {&#10;            public void windowClosing(WindowEvent e) {&#10;                onCancel();&#10;            }&#10;        });&#10;        cancelBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                onCancel();&#10;            }&#10;        });&#10;        okBtn.addActionListener(new ActionListener() {&#10;            public void actionPerformed(ActionEvent e) {&#10;                onOk();&#10;            }&#10;        });&#10;        setTitle(&quot;Add new contact&quot;);&#10;        setLayout(new BorderLayout());&#10;        im.InstantMessagingClient client = im.InstantMessagingClient.getInstance();&#10;        for (int i = 0; i &lt; client.getNetworks().size(); i++) {&#10;            networkField.add(client.getNetworkAt(i).getName());&#10;        }&#10;        dlgPanel.setLayout(new GridLayout(3,2));&#10;        dlgPanel.add(network);&#10;        dlgPanel.add(networkField);&#10;        dlgPanel.add(uid);&#10;        dlgPanel.add(uidField);&#10;        dlgPanel.add(name);&#10;        dlgPanel.add(nameField);&#10;        add(dlgPanel, BorderLayout.CENTER);&#10;        btnPanel.setLayout(new FlowLayout());&#10;        btnPanel.add(okBtn);&#10;        btnPanel.add(cancelBtn);&#10;        add(btnPanel, BorderLayout.SOUTH);&#10;        pack();&#10;        setVisible(true);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a323'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a329' name = 'dlgPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a330' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a238'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a331' name = 'btnPanel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a332' language = 'java' body = 'new Panel()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a238'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a333' name = 'okBtn' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a334' language = 'java' body = 'new Button(&quot;OK&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a233'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a335' name = 'cancelBtn' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a336' language = 'java' body = 'new Button(&quot;Cancel&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a233'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a337' name = 'uid' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a338' language = 'java' body = 'new Label(&quot;User ID&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a339'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a340' name = 'name' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a341' language = 'java' body = 'new Label(&quot;Name&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a339'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a342' name = 'uidField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a343' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a288'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a344' name = 'nameField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a345' language = 'java' body = 'new TextField()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a288'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a346' name = 'network' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a347' language = 'java' body = 'new Label(&quot;Network&quot;)'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a339'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a348' name = 'networkField' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a349' language = 'java' body = 'new Choice()'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a350'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a351' name = 'okClicked' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a352' language = 'java' body = 'false'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:DataType xmi.idref = 'a353'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a354' name = 'getUid' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a355' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a356' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a357' language = 'java' body = '        return uidField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a354'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a358' name = 'getName' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a359' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a360' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a361' language = 'java' body = '        return nameField.getText();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a358'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a362' name = 'getNetwork' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a363' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a36'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a364' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a365' language = 'java' body = '        int index = networkField.getSelectedIndex();&#10;        return im.InstantMessagingClient.getInstance().getNetworkAt(index);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a362'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a366' name = 'onOk' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a367' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a368' language = 'java' body = '        setOkClicked(true);&#10;        setVisible(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a366'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a369' name = 'onCancel' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a370' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a371' language = 'java' body = '        setOkClicked(false);&#10;        setVisible(false);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a369'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Association xmi.id = 'a372' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a373' visibility = 'public' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'aggregate' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a374'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a375' lower = '0' upper = '-1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a75'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a376' name = 'impl' visibility = 'public'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a377'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a378' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a169'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                    <UML:Association xmi.id = 'a379' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a380' visibility = 'public' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a381'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a382' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a115'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a383' name = 'impl' visibility = 'public'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a384'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a385' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:ModelElement.taggedValue>
                            <UML:TaggedValue xmi.id = 'a386' isSpecification = 'false'>
                              <UML:TaggedValue.dataValue>new AWTContactList()</UML:TaggedValue.dataValue>
                              <UML:TaggedValue.type>
                                <UML:TagDefinition xmi.idref = 'a221'/>
                              </UML:TaggedValue.type>
                            </UML:TaggedValue>
                          </UML:ModelElement.taggedValue>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a169'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                    <UML:Association xmi.id = 'a387' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a388' visibility = 'public' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a389'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a390' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a115'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a391' name = 'newContactDlg' visibility = 'public'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a392'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a393' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a165'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                  </UML:Namespace.ownedElement>
                </UML:Package>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Association xmi.id = 'a394' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a395' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a396'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a397' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a32'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a398' name = 'contactList' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a399'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a400' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:ModelElement.taggedValue>
                    <UML:TaggedValue xmi.id = 'a401' isSpecification = 'false'>
                      <UML:TaggedValue.dataValue>new im.model.ContactList()</UML:TaggedValue.dataValue>
                      <UML:TaggedValue.type>
                        <UML:TagDefinition xmi.idref = 'a221'/>
                      </UML:TaggedValue.type>
                    </UML:TaggedValue>
                  </UML:ModelElement.taggedValue>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a46'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Association xmi.id = 'a402' name = '' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a403' name = 'list' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'composite'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a404'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a405' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a46'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a406' name = 'contact' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a407'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a408' lower = '0' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a63'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Collaboration xmi.id = 'a409' name = 'SendMessage' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Object xmi.id = 'a410' name = 'view' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a411'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a412' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a413' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a414'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a411' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a410'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:CallAction xmi.id = 'a415' name = 'SendAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a416'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Message xmi.id = 'a417' name = 'Message_1' isSpecification = 'false'>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a418'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Stimulus xmi.id = 'a418' name = 'send' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a410'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a414'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a412'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a415'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Object xmi.id = 'a414' name = 'message' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a120'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a413'/>
                    <UML:LinkEnd xmi.idref = 'a419'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a420' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a421' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a422'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a419' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a414'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:CallAction xmi.id = 'a423' name = 'SendAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a424' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a425' language = 'java' body = 'message'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a426'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:CollaborationInstanceSet xmi.id = 'a427' name = 'Collaboration_Instance_Set_1'
                  isSpecification = 'false'>
                  <UML:CollaborationInstanceSet.interactionInstanceSet>
                    <UML:InteractionInstanceSet xmi.id = 'a428' name = 'Collaboration_Instance_Set_2'
                      isSpecification = 'false'/>
                  </UML:CollaborationInstanceSet.interactionInstanceSet>
                  <UML:CollaborationInstanceSet.collaboration>
                    <UML:Collaboration xmi.idref = 'a409'/>
                  </UML:CollaborationInstanceSet.collaboration>
                  <UML:CollaborationInstanceSet.participatingInstance>
                    <UML:Object xmi.idref = 'a410'/>
                    <UML:Object xmi.idref = 'a422'/>
                    <UML:Object xmi.idref = 'a414'/>
                  </UML:CollaborationInstanceSet.participatingInstance>
                  <UML:CollaborationInstanceSet.participatingLink>
                    <UML:Link xmi.idref = 'a420'/>
                    <UML:Link xmi.idref = 'a412'/>
                  </UML:CollaborationInstanceSet.participatingLink>
                </UML:CollaborationInstanceSet>
                <UML:ReturnAction xmi.id = 'a429' name = 'Action_4' isSpecification = 'false'
                  isAsynchronous = 'true'/>
                <UML:Stimulus xmi.id = 'a430' name = 'send' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a414'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a422'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a420'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a423'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Stimulus xmi.id = 'a431' name = 'stim_4' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a414'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a410'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:ReturnAction xmi.idref = 'a429'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Object xmi.id = 'a422' name = 'network' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a36'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a421'/>
                  </UML:Instance.linkEnd>
                </UML:Object>
                <UML:ReturnAction xmi.id = 'a432' name = 'Action_3' isSpecification = 'false'
                  isAsynchronous = 'true'/>
                <UML:Message xmi.id = 'a433' name = 'Message_2' isSpecification = 'false'>
                  <UML:Message.predecessor>
                    <UML:Message xmi.idref = 'a417'/>
                  </UML:Message.predecessor>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a430'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Stimulus xmi.id = 'a434' name = 'stim_3' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a422'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a414'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:ReturnAction xmi.idref = 'a432'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
              </UML:Namespace.ownedElement>
            </UML:Collaboration>
            <UML:Collaboration xmi.id = 'a435' name = 'ReceiveMessage' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Message xmi.id = 'a436' name = 'Message_3' isSpecification = 'false'>
                  <UML:Message.predecessor>
                    <UML:Message xmi.idref = 'a437'/>
                  </UML:Message.predecessor>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a438'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:CollaborationInstanceSet xmi.id = 'a439' name = 'Collaboration_Instance_Set_1'
                  isSpecification = 'false'>
                  <UML:CollaborationInstanceSet.interactionInstanceSet>
                    <UML:InteractionInstanceSet xmi.id = 'a440' name = 'Collaboration_Instance_Set_2'
                      isSpecification = 'false'/>
                  </UML:CollaborationInstanceSet.interactionInstanceSet>
                  <UML:CollaborationInstanceSet.collaboration>
                    <UML:Collaboration xmi.idref = 'a435'/>
                  </UML:CollaborationInstanceSet.collaboration>
                  <UML:CollaborationInstanceSet.participatingInstance>
                    <UML:Object xmi.idref = 'a441'/>
                    <UML:Object xmi.idref = 'a442'/>
                    <UML:Object xmi.idref = 'a443'/>
                  </UML:CollaborationInstanceSet.participatingInstance>
                  <UML:CollaborationInstanceSet.participatingLink>
                    <UML:Link xmi.idref = 'a444'/>
                    <UML:Link xmi.idref = 'a445'/>
                  </UML:CollaborationInstanceSet.participatingLink>
                </UML:CollaborationInstanceSet>
                <UML:Object xmi.id = 'a441' name = 'viewFactory' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Interface xmi.idref = 'a55'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a446'/>
                  </UML:Instance.linkEnd>
                </UML:Object>
                <UML:CallAction xmi.id = 'a447' name = 'Action_2' isSpecification = 'false'
                  isAsynchronous = 'false'/>
                <UML:CallAction xmi.id = 'a448' name = 'CreateMessageViewAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a449' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a450' language = 'java' body = 'network.received'/>
                      </UML:Argument.value>
                    </UML:Argument>
                    <UML:Argument xmi.id = 'a451' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a452' language = 'java' body = 'view'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a67'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Stimulus xmi.id = 'a453' name = 'onReceivedChange' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a443'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a442'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a444'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a454'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:Object xmi.id = 'a442' name = 'client' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a32'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a455'/>
                    <UML:LinkEnd xmi.idref = 'a456'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a445' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a446' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a441'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a456' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a442'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Stimulus xmi.id = 'a438' name = 'createMessageView' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a442'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a441'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.communicationLink>
                    <UML:Link xmi.idref = 'a445'/>
                  </UML:Stimulus.communicationLink>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a448'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
                <UML:CallAction xmi.id = 'a454' name = 'OnReceivedChangeAction' isSpecification = 'false'
                  isAsynchronous = 'false'>
                  <UML:Action.actualArgument>
                    <UML:Argument xmi.id = 'a457' name = 'arg' isSpecification = 'false'>
                      <UML:Argument.value>
                        <UML:Expression xmi.id = 'a458' language = 'java' body = 'x'/>
                      </UML:Argument.value>
                    </UML:Argument>
                  </UML:Action.actualArgument>
                  <UML:CallAction.operation>
                    <UML:Operation xmi.idref = 'a459'/>
                  </UML:CallAction.operation>
                </UML:CallAction>
                <UML:Message xmi.id = 'a437' name = 'Message_1' isSpecification = 'false'>
                  <UML:Message.conformingStimulus>
                    <UML:Stimulus xmi.idref = 'a453'/>
                  </UML:Message.conformingStimulus>
                </UML:Message>
                <UML:Object xmi.id = 'a443' name = 'network' visibility = 'public' isSpecification = 'false'>
                  <UML:Instance.classifier>
                    <UML:Class xmi.idref = 'a36'/>
                  </UML:Instance.classifier>
                  <UML:Instance.linkEnd>
                    <UML:LinkEnd xmi.idref = 'a460'/>
                  </UML:Instance.linkEnd>
                  <UML:Instance.ownedLink>
                    <UML:Link xmi.id = 'a444' name = '' isSpecification = 'false'>
                      <UML:Link.connection>
                        <UML:LinkEnd xmi.id = 'a460' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a443'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                        <UML:LinkEnd xmi.id = 'a455' isSpecification = 'false'>
                          <UML:LinkEnd.instance>
                            <UML:Object xmi.idref = 'a442'/>
                          </UML:LinkEnd.instance>
                        </UML:LinkEnd>
                      </UML:Link.connection>
                    </UML:Link>
                  </UML:Instance.ownedLink>
                </UML:Object>
                <UML:Stimulus xmi.id = 'a461' name = 'stim_2' isSpecification = 'false'>
                  <UML:Stimulus.sender>
                    <UML:Object xmi.idref = 'a442'/>
                  </UML:Stimulus.sender>
                  <UML:Stimulus.receiver>
                    <UML:Object xmi.idref = 'a443'/>
                  </UML:Stimulus.receiver>
                  <UML:Stimulus.dispatchAction>
                    <UML:CallAction xmi.idref = 'a447'/>
                  </UML:Stimulus.dispatchAction>
                </UML:Stimulus>
              </UML:Namespace.ownedElement>
            </UML:Collaboration>
            <UML:Association xmi.id = 'a462' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Association.connection>
                <UML:AssociationEnd xmi.id = 'a463' visibility = 'public' isSpecification = 'false'
                  isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                  changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a464'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a465' lower = '1' upper = '1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a32'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
                <UML:AssociationEnd xmi.id = 'a466' name = 'conversation' visibility = 'public'
                  isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                  targetScope = 'instance' changeability = 'changeable'>
                  <UML:AssociationEnd.multiplicity>
                    <UML:Multiplicity xmi.id = 'a467'>
                      <UML:Multiplicity.range>
                        <UML:MultiplicityRange xmi.id = 'a468' lower = '0' upper = '-1'/>
                      </UML:Multiplicity.range>
                    </UML:Multiplicity>
                  </UML:AssociationEnd.multiplicity>
                  <UML:AssociationEnd.participant>
                    <UML:Class xmi.idref = 'a69'/>
                  </UML:AssociationEnd.participant>
                </UML:AssociationEnd>
              </UML:Association.connection>
            </UML:Association>
            <UML:Package xmi.id = 'a469' name = 'networking' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Abstraction xmi.id = 'a470' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a3'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a471'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a472'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Class xmi.id = 'a36' name = 'Network' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a25'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a426' name = 'send' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a473' name = 'msg' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a120'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a474' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a475' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a426'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a476' name = 'name' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a477' name = 'recvMsg' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:ModelElement.taggedValue>
                        <UML:TaggedValue xmi.id = 'a478' isSpecification = 'false'>
                          <UML:TaggedValue.dataValue>false</UML:TaggedValue.dataValue>
                          <UML:TaggedValue.type>
                            <UML:TagDefinition xmi.idref = 'a479'/>
                          </UML:TaggedValue.type>
                        </UML:TaggedValue>
                      </UML:ModelElement.taggedValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a120'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a480' name = 'login' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a481' name = 'uid' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a85'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a482' name = 'pwd' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a85'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a483' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a353'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a484' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a485' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a480'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a486' name = 'logout' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'true'/>
                    <UML:Method xmi.id = 'a487' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a488' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a486'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a489' name = 'recvContact' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a63'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Package xmi.id = 'a490' name = 'jabber' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Association xmi.id = 'a491' name = '' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a492' visibility = 'public' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a493'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a494' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a471'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a495' name = 'socket' visibility = 'public'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a496'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a497' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a498'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                    <UML:Class xmi.id = 'a471' name = 'Jabber' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Dependency xmi.idref = 'a499'/>
                        <UML:Dependency xmi.idref = 'a500'/>
                        <UML:Abstraction xmi.idref = 'a470'/>
                        <UML:Dependency xmi.idref = 'a501'/>
                        <UML:Abstraction xmi.idref = 'a502'/>
                        <UML:Abstraction xmi.idref = 'a503'/>
                        <UML:Dependency xmi.idref = 'a504'/>
                      </UML:ModelElement.clientDependency>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a505'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Attribute xmi.id = 'a506' name = 'connection' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a507' language = 'java' body = ''/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a508'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Attribute xmi.id = 'a509' name = 'socket' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a510' language = 'java' body = 'null'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:Class xmi.idref = 'a498'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Operation xmi.id = 'a511' name = 'Jabber' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a137'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a512' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a471'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a513' name = 'send' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a514' name = 'msg' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a120'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a515' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a516' language = 'java' body = '        System.out.println(&quot;Sending &quot; + msg + &quot; via &quot; + getName());&#10;        try {&#10;            if (getConnection() == null) {&#10;                throw new java.io.IOException(&quot;Cannot send message: connection not established&quot;);&#10;            }&#10;            Message message = new Message();&#10;            message.setTo(msg.getRecipient());&#10;            message.setFrom(msg.getSender());&#10;            message.setBody(msg.getContent().toString());&#10;            getConnection().send(message);&#10;        } catch (java.io.IOException e) {&#10;            System.err.println(e.getMessage());&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a513'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a517' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a518' language = 'java' body = '        setName(&quot;Jabber&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a511'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a519' name = 'login' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a520' name = 'uid' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a521' name = 'pwd' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a522' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a353'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a523' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a524' language = 'java' body = '        try {&#10;            java.util.StringTokenizer address = new java.util.StringTokenizer(uid, &quot;@&quot;);&#10;            String user = address.nextToken();&#10;            String server = address.nextToken();&#10;            address = new java.util.StringTokenizer(server, &quot;/&quot;);&#10;            server = address.nextToken();&#10;            String resource = address.nextToken();&#10;            setSocket(connect(server, 5222));&#10;            if (getSocket() == null) {&#10;                throw new SocketException(connectError);&#10;            }&#10;            setConnection(new Client2Server(getSocket().getInputStream(), getSocket().getOutputStream()));&#10;            if (!getConnection().open(server, 60000)) {&#10;                throw new ConnectException(&quot;Could not establish stream to &quot; + server + &quot;:5222 after 60 seconds&quot;);&#10;            }&#10;            getConnection().setMessageListener(this);&#10;            getConnection().setIQListener(this);&#10;            getConnection().setPresenceListener(this);&#10;            boolean try_again;&#10;            do {&#10;                try_again = false;&#10;                System.out.println(&quot;Logging in &quot; + uid);&#10;                switch (getConnection().loginAny(user, resource, pwd, 30000)) {&#10;                    case Client2Server.LOGIN_BAD_PASS:&#10;                        throw new ConnectException(&quot;Bad password for &quot; + uid);&#10;                    case Client2Server.LOGIN_BAD_UID:&#10;                        if (!registerUser(user, pwd))&#10;                            throw new ConnectException(&quot;Could not register user for &quot; + uid);&#10;                        else&#10;                            try_again = true;&#10;                        break;&#10;                    case Client2Server.LOGIN_FAILED:&#10;                        throw new ConnectException(&quot;Login failed: unknown: &quot; + uid);&#10;                    case Client2Server.LOGIN_PASS_EXP:&#10;                        System.out.println(&quot;Your password has expired for &quot; + uid);&#10;                        break;&#10;                    case Client2Server.LOGIN_OK:&#10;                        break;&#10;                }&#10;            } while (try_again);&#10;            Presence pres = new Presence(Const.AVAILABLE, &quot;Available&quot;, 1);&#10;            pres.setFrom(uid);&#10;            getConnection().send(pres);&#10;            incomingPresence(pres);&#10;            getConnection().send(IQRoster.createGetRequest(), 30000);&#10;            return true;&#10;        } catch (Exception e) {&#10;            System.err.println(e.getMessage());&#10;            e.printStackTrace();&#10;        }&#10;        return false;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a519'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a525' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a526' language = 'java' body = '        System.out.println(&quot;Registering &quot; + user + &quot; at &quot; + getConnection().getServerName());&#10;        try {&#10;            java.util.Hashtable info = IQRegister.getRequiredRegInfo(getConnection());&#10;            String key, value;&#10;            for (java.util.Enumeration e = info.keys(); e.hasMoreElements();) {&#10;                key = (String) e.nextElement();&#10;                value = (String) info.get(key);&#10;                if (key.equals(Const.USERNAME))&#10;                    info.put(key, user);&#10;                else if (key.equals(Const.PASSWORD))&#10;                    info.put(key, pwd);&#10;                else if (key.equals(Const.EMAIL))&#10;                    info.put(key, user + &quot;@&quot; + getConnection().getServerName());&#10;                else if (key.equals(Const.INSTRUCTIONS))&#10;                    ;&#10;                else&#10;                    System.err.println(&quot;Unknown registration parameter: &quot; + key);&#10;            }&#10;            Chunk chunk = getConnection().send(&#10;                IQRegister.createSetRequest(getConnection().getServerName(), info), 30000);&#10;            return (chunk != null &amp;&amp; chunk.getType().equals(Const.RESULT));&#10;        } catch (java.io.IOException e) {&#10;            System.err.println(e.getMessage());&#10;            e.printStackTrace();&#10;        }&#10;        return false;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a527'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a528' name = 'logout' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Operation xmi.id = 'a529' name = 'incomingMessage' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a530' name = 'message' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a531'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a532' name = 'incomingIQ' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a533' name = 'iq' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a534'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a535' name = 'incomingPresence' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a536' name = 'presence' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a537'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a527' name = 'registerUser' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a538' name = 'user' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a539' name = 'pwd' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a540' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a353'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a541' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a542' language = 'java' body = '        im.InstantMessagingClient c = im.InstantMessagingClient.getInstance();&#10;        im.model.MessageFactory mf = c.getMessageFactory(message.getBody());&#10;        if (mf != null) {&#10;            im.model.Message msg = mf.createMessage();&#10;            msg.setSender(message.getFrom());&#10;            msg.setRecipient(message.getTo());&#10;            msg.setContent(message.getBody());&#10;            setRecvMsg(msg);&#10;        } else {&#10;            System.err.println(&quot;No message factory for &quot; + message);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a529'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a543' name = 'connect' visibility = 'private' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a544' name = 'host' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a545' name = 'port' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a197'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a546' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a498'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a547' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a548' language = 'java' body = '        Socket s = null;&#10;        try {&#10;            InetAddress[] hosts = InetAddress.getAllByName(host);&#10;            java.util.Stack exceptions = new java.util.Stack();&#10;            for (int i = 0; i &lt; hosts.length; i++) {&#10;                try {&#10;                    s = new Socket(hosts[i], port);&#10;                    break;&#10;                } catch (Exception e) {&#10;                    exceptions.push(e);&#10;                }&#10;            }&#10;            StringBuffer sb = new StringBuffer();&#10;            while (!exceptions.empty()) {&#10;                sb.append(((Exception) exceptions.pop()).getMessage());&#10;            }&#10;            connectError = sb.toString();&#10;        } catch (Exception e) {&#10;            connectError = e.getMessage();&#10;        }&#10;        return s;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a543'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a549' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a550' language = 'java' body = '        System.out.println(&quot;Closing connection for &quot; + getConnection().getServerName());&#10;       &#9;try {&#10;            Presence p = new Presence();&#10;            p.setType(Const.UNAVAILABLE);&#10;            getConnection().send(p);&#10;        } catch (java.io.IOException e) {&#10;            e.printStackTrace();&#10;        }&#10;        getConnection().close();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a528'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Attribute xmi.id = 'a551' name = 'connectError' visibility = 'private'
                          isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                          <UML:Attribute.initialValue>
                            <UML:Expression xmi.id = 'a552' language = 'java' body = '&quot;&quot;'/>
                          </UML:Attribute.initialValue>
                          <UML:StructuralFeature.type>
                            <UML:DataType xmi.idref = 'a85'/>
                          </UML:StructuralFeature.type>
                        </UML:Attribute>
                        <UML:Method xmi.id = 'a553' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a554' language = 'java' body = '        com.ssttr.xml.XMLElement el = iq.getChild(0);&#10;        if (el instanceof IQRoster) {&#10;            for (java.util.Enumeration items = el.enumerateChildren(); items.hasMoreElements();) {&#10;                System.out.println(&quot;Roster Item: &quot; + (IQRoster.Item) items.nextElement());&#10;            }&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a532'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a555' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a556' language = 'java' body = '        String type = presence.getType();&#10;        if (type == null) type = &quot;&quot;;&#10;        if (type.equals(Const.SUBSCRIBE)) {&#10;            // someone wants to subscribe to our presence&#10;            // so we slightly re-write the packet to send back &#10;            presence.setType(Const.SUBSCRIBED);&#10;            System.out.println(presence.getFrom() + &quot; wants to subscribe to your presence, allowing.&quot;);&#10;        } else if (type.equals(Const.UNSUBSCRIBE)) {&#10;            // someone wants to unsuscribe from our presence&#10;            // so we slightly re-write the packet to send back &#10;            presence.setType(Const.UNSUBSCRIBED);&#10;            System.out.println(presence.getFrom() + &quot; wants to unsubscribe to your presence, allowing.&quot;);&#10;        } else if (type.equals(Const.UNAVAILABLE)) {&#10;            im.model.Contact c = new im.model.Contact();&#10;            c.setUserId(presence.getFrom());&#10;            setRecvContact(c);&#10;            return;&#10;        } else {&#10;            im.model.Contact c = new im.model.Contact();&#10;            c.setUserId(presence.getFrom());&#10;            if (presence.getShow() != null)&#10;            &#9;c.setStatus(presence.getShow());&#10;            else&#10;            &#9;c.setStatus(Const.AVAILABLE);&#10;            setRecvContact(c);&#10;            return;&#10;        }&#10;        // make sure to return it to the sender and not ourselves&#10;        String from = presence.getTo();&#10;        presence.setTo(presence.getFrom());&#10;        presence.setFrom(from);&#10;        try {&#10;            getConnection().send(presence);&#10;        } catch (java.io.IOException e) {&#10;            e.printStackTrace();&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a535'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Association xmi.id = 'a557' isSpecification = 'false' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'>
                      <UML:Association.connection>
                        <UML:AssociationEnd xmi.id = 'a558' visibility = 'public' isSpecification = 'false'
                          isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                          changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a559'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a560' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a471'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                        <UML:AssociationEnd xmi.id = 'a561' name = 'connection' visibility = 'public'
                          isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                          targetScope = 'instance' changeability = 'changeable'>
                          <UML:AssociationEnd.multiplicity>
                            <UML:Multiplicity xmi.id = 'a562'>
                              <UML:Multiplicity.range>
                                <UML:MultiplicityRange xmi.id = 'a563' lower = '1' upper = '1'/>
                              </UML:Multiplicity.range>
                            </UML:Multiplicity>
                          </UML:AssociationEnd.multiplicity>
                          <UML:ModelElement.taggedValue>
                            <UML:TaggedValue xmi.id = 'a564' isSpecification = 'false'>
                              <UML:TaggedValue.dataValue></UML:TaggedValue.dataValue>
                              <UML:TaggedValue.type>
                                <UML:TagDefinition xmi.idref = 'a221'/>
                              </UML:TaggedValue.type>
                            </UML:TaggedValue>
                          </UML:ModelElement.taggedValue>
                          <UML:AssociationEnd.participant>
                            <UML:Class xmi.idref = 'a508'/>
                          </UML:AssociationEnd.participant>
                        </UML:AssociationEnd>
                      </UML:Association.connection>
                    </UML:Association>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Package xmi.id = 'a565' name = 'sms' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a566' name = 'SMS' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a567'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a568' name = 'SMS' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a137'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a569' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a566'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a570' name = 'send' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a571' name = 'msg' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a120'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a572' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a573' language = 'java' body = '        System.out.println(&quot;Sending &quot; + msg + &quot; via &quot; + getName());&#10;        // your code here&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a570'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a574' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a575' language = 'java' body = '        setName(&quot;SMS&quot;);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a568'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a576' name = 'login' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a577' name = 'uid' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a578' name = 'pwd' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a85'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a579' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a353'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a580' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a581' language = 'java' body = '        // no login required&#10;        return true;&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a576'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a582' name = 'logout' visibility = 'public' isSpecification = 'false'
                          ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                          isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Method xmi.id = 'a583' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a584' language = 'java' body = '        // no logout required&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a582'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Abstraction xmi.id = 'a502' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a3'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a471'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a585'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Generalization xmi.id = 'a505' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a471'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a36'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Abstraction xmi.id = 'a503' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a3'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a471'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a586'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Generalization xmi.id = 'a567' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a566'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a36'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Class xmi.id = 'a32' name = 'InstantMessagingClient' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
              isActive = 'false'>
              <UML:ModelElement.stereotype>
                <UML:Stereotype xmi.idref = 'a78'/>
                <UML:Stereotype xmi.idref = 'a587'/>
                <UML:Stereotype xmi.idref = 'a588'/>
              </UML:ModelElement.stereotype>
              <UML:Classifier.feature>
                <UML:Attribute xmi.id = 'a589' name = 'conversation' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a590' language = 'java' body = 'new java.util.ArrayList()'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = 'a104'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = 'a591' name = 'contactList' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a592' language = 'java' body = 'new im.model.ContactList()'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:Class xmi.idref = 'a46'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = 'a593' name = 'viewFactory' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a594' language = 'java' body = 'null'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:Interface xmi.idref = 'a55'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = 'a595' name = 'messageFactory' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a596' language = 'java' body = 'new java.util.ArrayList()'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = 'a104'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Attribute xmi.id = 'a597' name = 'network' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' changeability = 'changeable'>
                  <UML:Attribute.initialValue>
                    <UML:Expression xmi.id = 'a598' language = 'java' body = 'new java.util.ArrayList()'/>
                  </UML:Attribute.initialValue>
                  <UML:StructuralFeature.type>
                    <UML:DataType xmi.idref = 'a104'/>
                  </UML:StructuralFeature.type>
                </UML:Attribute>
                <UML:Operation xmi.id = 'a599' name = 'init' visibility = 'private' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a459' name = 'onRecvMsgChange' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a600' name = 'r' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a120'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Operation xmi.id = 'a601' name = 'onRecvContactChange' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a602' name = 'c' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:Class xmi.idref = 'a63'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a603' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a191'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Method xmi.id = 'a604' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a605' language = 'java' body = '        for (int i = 0; i &lt; getConversations().size(); i++) {&#10;            String contact = getConversationAt(i).getContact().getUserId();&#10;            im.model.MessageFactory mf = getConversationAt(i).getFactory();&#10;            if (contact.equals(r.getSender()) &amp;&amp; (mf == getMessageFactory(r.getContent()))) {&#10;                getConversationAt(i).addMessage(r);&#10;                return;&#10;            }&#10;        }&#10;        // create new conversation&#10;        im.model.Conversation conv = new im.model.Conversation();&#10;        getViewFactory().createConversationView(conv);&#10;        addConversation(conv);&#10;        for (int i = 0; i &lt; getMessageFactorys().size(); i++) {&#10;            if (getMessageFactoryAt(i).isValidContent(r.getContent())) {&#10;                conv.setFactory(getMessageFactoryAt(i));&#10;                break;&#10;            }&#10;        }&#10;        for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;            if (getContactList().getContactAt(i).getUserId().equals(r.getSender())) {&#10;                conv.setContact(getContactList().getContactAt(i));&#10;                break;&#10;            }&#10;        }&#10;        if (conv.getContact() == null) {&#10;            conv.setContact(new im.model.Contact());&#10;            conv.getContact().setUserId(r.getSender());&#10;        }&#10;        conv.addMessage(r);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a459'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a606' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a607' language = 'java' body = '        &#9;try {&#10;                java.util.Properties settings = new java.util.Properties();&#10;                settings.load(new java.io.FileInputStream(&quot;im.properties&quot;));&#10;                // ViewFactory&#10;                setViewFactory((im.view.ViewFactory) Class.forName(&#10;                    settings.getProperty(&quot;im.view.ViewFactory&quot;)).newInstance());&#10;                // Network&#10;                java.util.StringTokenizer networks = new java.util.StringTokenizer(&#10;                    settings.getProperty(&quot;im.networking.Network&quot;), &quot;,&quot;);&#10;                while (networks.hasMoreTokens()) {&#10;                    addNetwork((im.networking.Network) Class.forName(&#10;                        networks.nextToken()).newInstance());&#10;                }&#10;                // MessageFactory&#10;                java.util.StringTokenizer msgFactories = new java.util.StringTokenizer(&#10;                    settings.getProperty(&quot;im.model.MessageFactory&quot;), &quot;,&quot;);&#10;                while (msgFactories.hasMoreTokens()) {&#10;                    addMessageFactory((im.model.MessageFactory) Class.forName(&#10;                        msgFactories.nextToken()).newInstance());&#10;                }&#10;                // Create and register view&#10;                getViewFactory().createContactListView(contactList);&#10;                // Identity&#10;                java.util.StringTokenizer identities = new java.util.StringTokenizer(&#10;                    settings.getProperty(&quot;im.model.Identity&quot;), &quot;;&quot;);&#10;                while (identities.hasMoreTokens()) {&#10;                    java.util.StringTokenizer identity = new java.util.StringTokenizer(&#10;                        identities.nextToken(), &quot;,&quot;);&#10;                    im.model.Identity id = new im.model.Identity();&#10;                    id.setUserId(identity.nextToken());&#10;                    id.setName(identity.nextToken());&#10;                    String networkName = identity.nextToken();&#10;                    for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;                        if (getNetworkAt(i).getClass().getName().equals(networkName)) {&#10;                            id.setNetwork(getNetworkAt(i));&#10;                        }&#10;                    }&#10;                    if (id.getNetwork() == null) {&#10;                        throw new ClassNotFoundException(&quot;Could not find network &quot; + networkName + &quot; for &quot; + id.getUserId());&#10;                    }&#10;                    id.setPassword(identity.nextToken());&#10;                    contactList.addContact(id);&#10;                }&#10;                // Contact&#10;                java.util.StringTokenizer contacts = new java.util.StringTokenizer(&#10;                    settings.getProperty(&quot;im.model.Contact&quot;), &quot;;&quot;);&#10;                while (contacts.hasMoreTokens()) {&#10;                    java.util.StringTokenizer contact = new java.util.StringTokenizer(&#10;                        contacts.nextToken(), &quot;,&quot;);&#10;                    im.model.Contact c = new im.model.Contact();&#10;                    c.setUserId(contact.nextToken());&#10;                    c.setName(contact.nextToken());&#10;                    String networkName = contact.nextToken();&#10;                    for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;                        if (getNetworkAt(i).getClass().getName().equals(networkName)) {&#10;                            c.setNetwork(getNetworkAt(i));&#10;                        }&#10;                    }&#10;                    if (c.getNetwork() == null) {&#10;                        throw new ClassNotFoundException(&quot;Could not find network &quot; + networkName + &quot; for &quot; + c.getUserId());&#10;                    }&#10;                    contactList.addContact(c);&#10;                }&#10;                // login&#10;                for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;                &#9;im.model.Identity id = getContactList().getIdentity(getNetworkAt(i));&#10;                    if (id == null) {&#10;                        throw new NullPointerException(&quot;Could not find identity for &quot; + getNetworkAt(i).getClass().getName());&#10;                    }&#10;                    id.getNetwork().login(id.getUserId(), id.getPassword());&#10;                }&#10;            } catch (Exception e) {&#10;                e.printStackTrace();&#10;            }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a599'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a608' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a609' language = 'java' body = '        try {&#10;            java.util.Properties settings = new java.util.Properties();&#10;            // ViewFactory&#10;            settings.setProperty(&quot;im.view.ViewFactory&quot;, getViewFactory().getClass().getName());&#10;            // Network&#10;            StringBuffer networks = new StringBuffer();&#10;            for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;                if (i &gt; 0) networks.append(&apos;,&apos;);&#10;             &#9;networks.append(getNetworkAt(i).getClass().getName());&#10;            }&#10;            settings.setProperty(&quot;im.networking.Network&quot;, networks.toString());&#10;            // MessageFactory&#10;            StringBuffer msgFactories = new StringBuffer();&#10;            for (int i = 0; i &lt; getMessageFactorys().size(); i++) {&#10;                if (i &gt; 0) msgFactories.append(&apos;,&apos;);&#10;                msgFactories.append(getMessageFactoryAt(i).getClass().getName());&#10;            }&#10;            settings.setProperty(&quot;im.model.MessageFactory&quot;, msgFactories.toString());&#10;            // Identity&#10;            StringBuffer identities = new StringBuffer();&#10;            for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;                if (identities.length() &gt; 0) identities.append(&apos;;&apos;);&#10;                im.model.Identity id = getContactList().getIdentity(getNetworkAt(i));&#10;                identities.append(id.getUserId());&#10;                identities.append(&apos;,&apos;);&#10;                identities.append(id.getName());&#10;                identities.append(&apos;,&apos;);&#10;                identities.append(id.getNetwork().getClass().getName());&#10;                identities.append(&apos;,&apos;);&#10;                identities.append(id.getPassword());&#10;            }&#10;            settings.setProperty(&quot;im.model.Identity&quot;, identities.toString());&#10;            // Contact&#10;            StringBuffer contacts = new StringBuffer();&#10;            for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;                if (contacts.length() &gt; 0) contacts.append(&apos;;&apos;);&#10;                im.model.Contact c = getContactList().getContactAt(i);&#10;                if (!(c instanceof im.model.Identity)) {&#10;                    contacts.append(c.getUserId());&#10;                    contacts.append(&apos;,&apos;);&#10;                    contacts.append(c.getName());&#10;                    contacts.append(&apos;,&apos;);&#10;                    contacts.append(c.getNetwork().getClass().getName());&#10;                }&#10;            }&#10;            settings.setProperty(&quot;im.model.Contact&quot;, contacts.toString());&#10;            // save&#10;            settings.save(new java.io.FileOutputStream(&quot;im.properties&quot;),&#10;                &quot;Instant Messenger settings&quot;);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a610'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Operation xmi.id = 'a611' name = 'getMessageFactory' visibility = 'public'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:BehavioralFeature.parameter>
                    <UML:Parameter xmi.id = 'a612' name = 'c' isSpecification = 'false' kind = 'in'>
                      <UML:Parameter.type>
                        <UML:DataType xmi.idref = 'a295'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                    <UML:Parameter xmi.id = 'a613' name = 'return' isSpecification = 'false'
                      kind = 'return'>
                      <UML:Parameter.type>
                        <UML:Interface xmi.idref = 'a129'/>
                      </UML:Parameter.type>
                    </UML:Parameter>
                  </UML:BehavioralFeature.parameter>
                </UML:Operation>
                <UML:Operation xmi.id = 'a614' name = 'exit' visibility = 'public' isSpecification = 'false'
                  ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Operation xmi.id = 'a610' name = 'saveSettings' visibility = 'private'
                  isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Method xmi.id = 'a615' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a616' language = 'java' body = '        for (int i = 0; i &lt; getMessageFactorys().size(); i++) {&#10;            if (getMessageFactoryAt(i).isValidContent(c)) {&#10;                return getMessageFactoryAt(i);&#10;            }&#10;        }&#10;        return null;&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a611'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a617' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a618' language = 'java' body = '    &#9;for (int i = 0; i &lt; getNetworks().size(); i++) {&#10;            getNetworkAt(i).logout();&#10;    &#9;}&#10;    &#9;saveSettings();&#10;        System.exit(0);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a614'/>
                  </UML:Method.specification>
                </UML:Method>
                <UML:Method xmi.id = 'a619' isSpecification = 'false' isQuery = 'false'>
                  <UML:Method.body>
                    <UML:ProcedureExpression xmi.id = 'a620' language = 'java' body = '        for (int i = 0; i &lt; getContactList().getContacts().size(); i++) {&#10;            if (getContactList().getContactAt(i).getUserId().equals(c.getUserId())) {&#10;                getContactList().getContactAt(i).setStatus(c.getStatus());&#10;                return;&#10;            }&#10;        }&#10;        getContactList().addContact(c);&#10;'/>
                  </UML:Method.body>
                  <UML:Method.specification>
                    <UML:Operation xmi.idref = 'a601'/>
                  </UML:Method.specification>
                </UML:Method>
              </UML:Classifier.feature>
            </UML:Class>
            <UML:Package xmi.id = 'a621' name = 'model' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Association xmi.id = 'a622' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a28'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a623' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a624'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a625' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a69'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a626' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a627'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a628' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a71'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Association xmi.id = 'a629' name = '' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a630' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'composite' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a631'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a632' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a32'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a633' name = 'messageFactory' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a634'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a635' lower = '1' upper = '-1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a129'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a636' name = 'NetworkSpecificData' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'true'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a25'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a637' name = 'network' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a638' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a36'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a639' name = 'BelongsToNetwork' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a640' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a641'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a642' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a636'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a643' name = 'network' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a644'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a645' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a36'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a63' name = 'Contact' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a646'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a647' name = 'list' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a648' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a46'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a649' name = 'userId' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a650' name = 'name' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a651' name = 'status' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a652' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a653' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a654'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a655' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a69'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a656' name = 'factory' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a657'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a658' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Interface xmi.idref = 'a129'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Interface xmi.id = 'a129' name = 'MessageFactory' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Classifier.feature>
                    <UML:Operation xmi.id = 'a659' name = 'createMessage' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a660' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a120'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a661' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a662' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a659'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a663' name = 'isValidContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a664' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a295'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a665' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a353'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a666' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a667' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a663'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Interface>
                <UML:Abstraction xmi.id = 'a668' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a3'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a669'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a129'/>
                  </UML:Dependency.supplier>
                </UML:Abstraction>
                <UML:Generalization xmi.id = 'a670' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a671'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a63'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a69' name = 'Conversation' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a25'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a672' name = 'contact' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a673' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a63'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a674' name = 'message' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a675' language = 'java' body = 'new java.util.ArrayList()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a104'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a676' name = 'factory' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a677' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Interface xmi.idref = 'a129'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a678' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a28'/>
                  </UML:ModelElement.stereotype>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a679' name = 'model' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a680'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a681' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a63'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a682' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a683'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a684' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a51'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a671' name = 'Identity' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a670'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a685' name = 'password' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Package xmi.id = 'a686' name = 'messages' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a687' name = 'TextMessage' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                      <UML:GeneralizableElement.generalization>
                        <UML:Generalization xmi.idref = 'a688'/>
                      </UML:GeneralizableElement.generalization>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a689' name = 'TextMessage' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:ModelElement.stereotype>
                            <UML:Stereotype xmi.idref = 'a137'/>
                          </UML:ModelElement.stereotype>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a690' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a687'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Operation xmi.id = 'a691' name = 'setContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a692' name = 'content' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a295'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a693' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a694' language = 'java' body = '        if (isValidContent(content)) {&#10;            super.setContent(content);&#10;        }&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a691'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Method xmi.id = 'a695' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a696' language = 'java' body = '        setContent(new String());&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a689'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a697' name = 'isValidContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a698' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a353'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a699' name = 'content' isSpecification = 'false'
                              kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a295'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a700' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a701' language = 'java' body = '        return (content instanceof String);&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a697'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                    <UML:Class xmi.id = 'a669' name = 'TextMessageFactory' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                      isActive = 'false'>
                      <UML:ModelElement.clientDependency>
                        <UML:Abstraction xmi.idref = 'a668'/>
                      </UML:ModelElement.clientDependency>
                      <UML:Classifier.feature>
                        <UML:Operation xmi.id = 'a702' name = 'createMessage' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a703' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:Class xmi.idref = 'a120'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a704' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a705' language = 'java' body = '        return new TextMessage();&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a702'/>
                          </UML:Method.specification>
                        </UML:Method>
                        <UML:Operation xmi.id = 'a706' name = 'isValidContent' visibility = 'public'
                          isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:BehavioralFeature.parameter>
                            <UML:Parameter xmi.id = 'a707' name = 'c' isSpecification = 'false' kind = 'in'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a295'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                            <UML:Parameter xmi.id = 'a708' name = 'return' isSpecification = 'false'
                              kind = 'return'>
                              <UML:Parameter.type>
                                <UML:DataType xmi.idref = 'a353'/>
                              </UML:Parameter.type>
                            </UML:Parameter>
                          </UML:BehavioralFeature.parameter>
                        </UML:Operation>
                        <UML:Method xmi.id = 'a709' isSpecification = 'false' isQuery = 'false'>
                          <UML:Method.body>
                            <UML:ProcedureExpression xmi.id = 'a710' language = 'java' body = '        return (createMessage().isValidContent(c));&#10;'/>
                          </UML:Method.body>
                          <UML:Method.specification>
                            <UML:Operation xmi.idref = 'a706'/>
                          </UML:Method.specification>
                        </UML:Method>
                      </UML:Classifier.feature>
                    </UML:Class>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Generalization xmi.id = 'a711' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a120'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a636'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Generalization xmi.id = 'a688' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a687'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a120'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a46' name = 'ContactList' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a25'/>
                  </UML:ModelElement.stereotype>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a712' name = 'contact' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a713' language = 'java' body = 'new java.util.ArrayList()'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a104'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a714' name = 'getIdentity' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a715' name = 'forNw' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a36'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a716' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:Class xmi.idref = 'a671'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a717' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a718' language = 'java' body = '        for (int i = 0; i &lt; getContacts().size(); i ++) {&#10;            Contact contact = getContactAt(i);&#10;            if ((contact instanceof Identity) &amp;&amp; (contact.getNetwork() == forNw))&#10;                return (Identity) contact;&#10;        }&#10;        return null;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a714'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Operation xmi.id = 'a719' name = 'getUserName' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a720' name = 'userId' isSpecification = 'false'
                          kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a85'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a721' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a85'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a722' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a723' language = 'java' body = '        for (int i = 0; i &lt; getContacts().size(); i ++) {&#10;            if (getContactAt(i).getUserId().equals(userId))&#10;                return getContactAt(i).getName();&#10;        }&#10;        return userId;&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a719'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Association xmi.id = 'a724' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a725' visibility = 'public' isSpecification = 'false'
                      isNavigable = 'false' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
                      changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a726'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a727' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a69'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a728' name = 'contact' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a729'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a730' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a63'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
                <UML:Class xmi.id = 'a120' name = 'Message' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'true' isActive = 'false'>
                  <UML:GeneralizableElement.generalization>
                    <UML:Generalization xmi.idref = 'a711'/>
                  </UML:GeneralizableElement.generalization>
                  <UML:Classifier.feature>
                    <UML:Attribute xmi.id = 'a731' name = 'conversation' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:Attribute.initialValue>
                        <UML:Expression xmi.id = 'a732' language = 'java' body = 'null'/>
                      </UML:Attribute.initialValue>
                      <UML:StructuralFeature.type>
                        <UML:Class xmi.idref = 'a69'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a733' name = 'sender' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Attribute xmi.id = 'a734' name = 'recipient' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a85'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a416' name = 'send' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential' isRoot = 'false'
                      isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Method xmi.id = 'a735' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a736' language = 'java' body = '        if (getNetwork() != null) {&#10;            getNetwork().send(this);&#10;        }&#10;'/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a416'/>
                      </UML:Method.specification>
                    </UML:Method>
                    <UML:Attribute xmi.id = 'a737' name = 'content' visibility = 'public' isSpecification = 'false'
                      ownerScope = 'instance' changeability = 'changeable'>
                      <UML:StructuralFeature.type>
                        <UML:DataType xmi.idref = 'a295'/>
                      </UML:StructuralFeature.type>
                    </UML:Attribute>
                    <UML:Operation xmi.id = 'a738' name = 'isValidContent' visibility = 'public'
                      isSpecification = 'false' ownerScope = 'instance' isQuery = 'false' concurrency = 'sequential'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'true'>
                      <UML:BehavioralFeature.parameter>
                        <UML:Parameter xmi.id = 'a739' name = 'c' isSpecification = 'false' kind = 'in'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a295'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                        <UML:Parameter xmi.id = 'a740' name = 'return' isSpecification = 'false'
                          kind = 'return'>
                          <UML:Parameter.type>
                            <UML:DataType xmi.idref = 'a353'/>
                          </UML:Parameter.type>
                        </UML:Parameter>
                      </UML:BehavioralFeature.parameter>
                    </UML:Operation>
                    <UML:Method xmi.id = 'a741' isSpecification = 'false' isQuery = 'false'>
                      <UML:Method.body>
                        <UML:ProcedureExpression xmi.id = 'a742' language = 'java' body = ''/>
                      </UML:Method.body>
                      <UML:Method.specification>
                        <UML:Operation xmi.idref = 'a738'/>
                      </UML:Method.specification>
                    </UML:Method>
                  </UML:Classifier.feature>
                </UML:Class>
                <UML:Generalization xmi.id = 'a646' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a63'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a636'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Association xmi.id = 'a743' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'>
                  <UML:Association.connection>
                    <UML:AssociationEnd xmi.id = 'a744' name = 'conversation' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'unordered' aggregation = 'composite'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a745'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a746' lower = '1' upper = '1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a69'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                    <UML:AssociationEnd xmi.id = 'a747' name = 'message' visibility = 'public'
                      isSpecification = 'false' isNavigable = 'true' ordering = 'ordered' aggregation = 'none'
                      targetScope = 'instance' changeability = 'changeable'>
                      <UML:AssociationEnd.multiplicity>
                        <UML:Multiplicity xmi.id = 'a748'>
                          <UML:Multiplicity.range>
                            <UML:MultiplicityRange xmi.id = 'a749' lower = '1' upper = '-1'/>
                          </UML:Multiplicity.range>
                        </UML:Multiplicity>
                      </UML:AssociationEnd.multiplicity>
                      <UML:AssociationEnd.participant>
                        <UML:Class xmi.idref = 'a120'/>
                      </UML:AssociationEnd.participant>
                    </UML:AssociationEnd>
                  </UML:Association.connection>
                </UML:Association>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'a750' name = 'postcondition' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a587' name = 'process' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Classifier</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a751' name = 'initializer' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Operation</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a752' name = 'Socket' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a753' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a754' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a755'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a756' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a757'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a758' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a759'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a760' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a761'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:UseCase xmi.id = 'a23' name = 'Update contact list' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:UseCase xmi.id = 'a761' name = 'Send message' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Stereotype xmi.id = 'a137' name = 'create' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Association xmi.id = 'a762' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a763' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a764'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a765' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a12'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a766' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a767'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a768' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a757'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:UseCase xmi.id = 'a20' name = 'Remove contact' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:UseCase.include>
            <UML:Include xmi.idref = 'a769'/>
          </UML:UseCase.include>
        </UML:UseCase>
        <UML:Association xmi.id = 'a770' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a771' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a772'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a773' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a8'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a774' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a775'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a776' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a23'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Package xmi.id = 'a777' name = 'java' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a778' name = 'awt' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Generalization xmi.id = 'a281' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a135'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a325'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a325' name = 'Frame' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a233' name = 'Button' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a288' name = 'TextField' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a350' name = 'Choice' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a238' name = 'Panel' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Generalization xmi.id = 'a223' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a169'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a325'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Generalization xmi.id = 'a322' isSpecification = 'false'>
                  <UML:Generalization.child>
                    <UML:Class xmi.idref = 'a165'/>
                  </UML:Generalization.child>
                  <UML:Generalization.parent>
                    <UML:Class xmi.idref = 'a779'/>
                  </UML:Generalization.parent>
                </UML:Generalization>
                <UML:Class xmi.id = 'a316' name = 'TextArea' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a779' name = 'Dialog' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a230' name = 'List' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a339' name = 'Label' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Package xmi.id = 'a166' name = 'event' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Class xmi.id = 'a780' name = 'WindowAdapter' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'true'
                      isActive = 'false'/>
                    <UML:Class xmi.id = 'a781' name = 'WindowEvent' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                    <UML:Interface xmi.id = 'a250' name = 'ActionListener' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                    <UML:Interface xmi.id = 'a782' name = 'WindowListener' visibility = 'public'
                      isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                  </UML:Namespace.ownedElement>
                </UML:Package>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Package xmi.id = 'a783' name = 'util' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Interface xmi.id = 'a784' name = 'Observer' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a785' name = 'Set' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a786' name = 'Vector' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Interface xmi.id = 'a787' name = 'List' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a788' name = 'Hashtable' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a789' name = 'TreeSet' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a790' name = 'Observable' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Interface xmi.id = 'a791' name = 'Collection' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a792' name = 'OrderedSet' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a793' name = 'ArrayList' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a500' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a471'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a794'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a794' name = 'net' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a795' name = 'UnknownHostException' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a2'/>
                  </UML:ModelElement.stereotype>
                </UML:Class>
                <UML:Class xmi.id = 'a498' name = 'Socket' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a222' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a169'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a778'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a796' name = 'io' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a797' name = 'IOException' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a280' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a135'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a778'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Dependency xmi.id = 'a321' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a165'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a778'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
            <UML:Package xmi.id = 'a798' name = 'lang' isSpecification = 'false' isRoot = 'false'
              isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:DataType xmi.id = 'a799' name = 'boolean' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a90' name = 'String' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a800' name = 'SecurityException' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'/>
                <UML:DataType xmi.id = 'a191' name = 'void' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
                <UML:Class xmi.id = 'a801' name = 'String[]' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:Class xmi.id = 'a802' name = 'Object' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                <UML:DataType xmi.id = 'a803' name = 'double' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:DataType xmi.id = 'a804' name = 'int' isSpecification = 'false' isRoot = 'false'
                  isLeaf = 'false' isAbstract = 'false'/>
              </UML:Namespace.ownedElement>
            </UML:Package>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Association xmi.id = 'a805' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a806' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a807'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a808' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a8'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a809' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a810'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a811' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a761'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:TagDefinition xmi.id = 'a812' name = 'documentation' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a813'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a814' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:TagDefinition xmi.id = 'a479' name = 'transient' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a815'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a816' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:UseCase xmi.id = 'a24' name = 'Add contact' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:UseCase.include>
            <UML:Include xmi.idref = 'a22'/>
          </UML:UseCase.include>
        </UML:UseCase>
        <UML:Actor xmi.id = 'a757' name = 'Network' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Actor xmi.id = 'a8' name = 'User' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
        <UML:Package xmi.id = 'a817' name = 'com' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:Package xmi.id = 'a818' name = 'jabberwookie' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
              <UML:Namespace.ownedElement>
                <UML:Class xmi.id = 'a508' name = 'Client2Server' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
                  isActive = 'false'>
                  <UML:ModelElement.clientDependency>
                    <UML:Dependency xmi.idref = 'a819'/>
                    <UML:Dependency xmi.idref = 'a820'/>
                    <UML:Dependency xmi.idref = 'a821'/>
                  </UML:ModelElement.clientDependency>
                </UML:Class>
                <UML:Interface xmi.id = 'a472' name = 'PresenceListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Dependency xmi.id = 'a819' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a21'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a508'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a586'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Dependency xmi.id = 'a820' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a21'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a508'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a472'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
                <UML:Interface xmi.id = 'a585' name = 'IQListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Interface xmi.id = 'a586' name = 'MessageListener' visibility = 'public'
                  isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                <UML:Package xmi.id = 'a822' name = 'ns' visibility = 'public' isSpecification = 'false'
                  isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                  <UML:Namespace.ownedElement>
                    <UML:Dependency xmi.id = 'a499' isSpecification = 'false'>
                      <UML:Dependency.client>
                        <UML:Class xmi.idref = 'a471'/>
                      </UML:Dependency.client>
                      <UML:Dependency.supplier>
                        <UML:Package xmi.idref = 'a823'/>
                      </UML:Dependency.supplier>
                    </UML:Dependency>
                    <UML:Package xmi.id = 'a823' name = 'jabber' visibility = 'public' isSpecification = 'false'
                      isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                      <UML:Namespace.ownedElement>
                        <UML:Class xmi.id = 'a534' name = 'IQ' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Class xmi.id = 'a537' name = 'Presence' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Interface xmi.id = 'a824' name = 'Const' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
                        <UML:Class xmi.id = 'a825' name = 'Chunk' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Package xmi.id = 'a826' name = 'iq' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
                          <UML:Namespace.ownedElement>
                            <UML:Class xmi.id = 'a827' name = 'IQRegister' visibility = 'public' isSpecification = 'false'
                              isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                          </UML:Namespace.ownedElement>
                        </UML:Package>
                        <UML:Class xmi.id = 'a531' name = 'Message' visibility = 'public' isSpecification = 'false'
                          isRoot = 'false' isLeaf = 'false' isAbstract = 'false' isActive = 'false'/>
                        <UML:Dependency xmi.id = 'a504' isSpecification = 'false'>
                          <UML:Dependency.client>
                            <UML:Class xmi.idref = 'a471'/>
                          </UML:Dependency.client>
                          <UML:Dependency.supplier>
                            <UML:Package xmi.idref = 'a826'/>
                          </UML:Dependency.supplier>
                        </UML:Dependency>
                      </UML:Namespace.ownedElement>
                    </UML:Package>
                  </UML:Namespace.ownedElement>
                </UML:Package>
                <UML:Dependency xmi.id = 'a821' isSpecification = 'false'>
                  <UML:ModelElement.stereotype>
                    <UML:Stereotype xmi.idref = 'a21'/>
                  </UML:ModelElement.stereotype>
                  <UML:Dependency.client>
                    <UML:Class xmi.idref = 'a508'/>
                  </UML:Dependency.client>
                  <UML:Dependency.supplier>
                    <UML:Interface xmi.idref = 'a585'/>
                  </UML:Dependency.supplier>
                </UML:Dependency>
              </UML:Namespace.ownedElement>
            </UML:Package>
            <UML:Dependency xmi.id = 'a501' isSpecification = 'false'>
              <UML:Dependency.client>
                <UML:Class xmi.idref = 'a471'/>
              </UML:Dependency.client>
              <UML:Dependency.supplier>
                <UML:Package xmi.idref = 'a818'/>
              </UML:Dependency.supplier>
            </UML:Dependency>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:Stereotype xmi.id = 'a828' name = 'accessor' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Dependency</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Association xmi.id = 'a829' isSpecification = 'false' isRoot = 'false'
          isLeaf = 'false' isAbstract = 'false'>
          <UML:Association.connection>
            <UML:AssociationEnd xmi.id = 'a830' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a831'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a832' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:Actor xmi.idref = 'a8'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
            <UML:AssociationEnd xmi.id = 'a833' visibility = 'public' isSpecification = 'false'
              isNavigable = 'true' ordering = 'unordered' aggregation = 'none' targetScope = 'instance'
              changeability = 'changeable'>
              <UML:AssociationEnd.multiplicity>
                <UML:Multiplicity xmi.id = 'a834'>
                  <UML:Multiplicity.range>
                    <UML:MultiplicityRange xmi.id = 'a835' lower = '1' upper = '1'/>
                  </UML:Multiplicity.range>
                </UML:Multiplicity>
              </UML:AssociationEnd.multiplicity>
              <UML:AssociationEnd.participant>
                <UML:UseCase xmi.idref = 'a24'/>
              </UML:AssociationEnd.participant>
            </UML:AssociationEnd>
          </UML:Association.connection>
        </UML:Association>
        <UML:Stereotype xmi.id = 'a28' name = 'subscribe' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Association</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a78' name = 'Observer' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Stereotype xmi.id = 'a836' name = 'ValueObject' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Include xmi.id = 'a769' isSpecification = 'false'>
          <UML:Include.addition>
            <UML:UseCase xmi.idref = 'a23'/>
          </UML:Include.addition>
          <UML:Include.base>
            <UML:UseCase xmi.idref = 'a20'/>
          </UML:Include.base>
        </UML:Include>
        <UML:Stereotype xmi.id = 'a588' name = 'Singleton' visibility = 'public'
          isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
        </UML:Stereotype>
        <UML:Package xmi.id = 'a837' name = 'ocl' visibility = 'public' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Namespace.ownedElement>
            <UML:DataType xmi.id = 'a838' name = 'Bag' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a295' name = 'OclAny' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a839' name = 'Collection' visibility = 'public'
              isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a353' name = 'Boolean' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a840' name = 'OclType' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a197' name = 'Integer' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a104' name = 'Sequence' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a841' name = 'Real' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a842' name = 'Set' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
            <UML:DataType xmi.id = 'a85' name = 'String' visibility = 'public' isSpecification = 'false'
              isRoot = 'false' isLeaf = 'false' isAbstract = 'false'/>
          </UML:Namespace.ownedElement>
        </UML:Package>
        <UML:TagDefinition xmi.id = 'a221' name = 'gentleware-initialValue' isSpecification = 'false'>
          <UML:TagDefinition.multiplicity>
            <UML:Multiplicity xmi.id = 'a843'>
              <UML:Multiplicity.range>
                <UML:MultiplicityRange xmi.id = 'a844' lower = '1' upper = '1'/>
              </UML:Multiplicity.range>
            </UML:Multiplicity>
          </UML:TagDefinition.multiplicity>
        </UML:TagDefinition>
        <UML:Stereotype xmi.id = 'a845' name = 'invariant' isSpecification = 'false'
          isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
          <UML:Stereotype.baseClass>Constraint</UML:Stereotype.baseClass>
        </UML:Stereotype>
      </UML:Namespace.ownedElement>
    </UML:Model>
  </XMI.content>
</XMI>
